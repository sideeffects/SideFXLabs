#type:     node
#context:  sop
#internal: labs::mandelbulb_generator::1.0
#icon:     SOP/labs::mandelbulb_generator::1.0

= Labs Mandelbulb Generator =

"""Generates a mandelbulb"""

This node generates a [Mandelbulb | https://en.wikipedia.org/wiki/Mandelbulb].

Interesting links and ressources :

[SteamBeanblog on the Mandelbulb | https://www.steambeanblog.com/blog/mandelbulb-fractals-in-houdini]

[Daniel White's Blog | https://www.skytopia.com/project/fractal/2mandelbulb.html]

[Moritz Schwind's (Entagma) Tutorial | https://www.sidefx.com/tutorials/vex-in-houdini-mandelbrot-and-mandelbulb/]


@parameters

    == Volume Parameters ==

    Voxel Size:
        #id: voxelsize

    Voxel size of the vdb.
        
    == Formula Parameters ==

    Use OpenCL:
        #id: useocl

    When ticked on, the algorithm runs on OpenCL, otherwise it runs on VEX.
        
        
    Value of N:
        #id: nvalue

    Increases the number of time the shape repeats.
        
    Number of Iterations:
        #id: iteration

    Increases detail around the edges.    
        
    Maximum Iteration:
        #id: maxiter

    Increases smaller detail.
        
    Phase:
        #id: phase

    Offsets the fractal pattern.
    
    Frequency:
        #id: freq

    Controls the frequency of the fractal pattern.
        
    == Output ==

    Convert To:
        #id: convertto

    Sets what the output of the node should be.
           
    Total Number of Points:
        #id: npts

    Sets the total number of points scattered inside the volume when the output is set to __Points__.
        
    Add Color:
        #id: addcolor

    Adds color(Cd) based on the length of the points positions.
        
    Ramp Color:
        #id: ramp_color

    Drives the Cd attribute.    
        
@examples

    - [Example File|https://github.com/sideeffects/SideFXLabs/tree/Development/hip/examples/mandelbulb_generator/mandelbulb_generator.1.0.hip]