MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Sop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = labs::simple_shapes::1.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -6.5 -38.15
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author sirius@athena.local
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__netbox1.netboxinit"
Content-Type: text/plain

2
2
{
	autofit := 0;
	color := "UT_Color RGB 0.306 0.306 0.306 ";
	comment := "ROUND CORNERS";
	height := 4.6999999999999993;
	minimized := 0;
	width := 6;
	x_position := -2;
	y_position := -22.000000011920928;
}
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__netbox2.netboxinit"
Content-Type: text/plain

2
2
{
	autofit := 0;
	color := "UT_Color RGB 0.306 0.306 0.306 ";
	comment := "SHAPE GENERATOR";
	height := 7.7000000000000002;
	minimized := 0;
	width := 6;
	x_position := 2;
	y_position := -11;
}
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__netbox3.netboxinit"
Content-Type: text/plain

2
2
{
	autofit := 0;
	color := "UT_Color RGB 0.306 0.306 0.306 ";
	comment := "CUT HOLE";
	height := 7.7000000059604723;
	minimized := 0;
	width := 8;
	x_position := 10;
	y_position := -34.000000008940702;
}
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__netbox4.netboxinit"
Content-Type: text/plain

2
2
{
	autofit := 0;
	color := "UT_Color RGB 0.306 0.306 0.306 ";
	comment := "SIDE SEGMENTS";
	height := 4.7000000059604652;
	minimized := 0;
	width := 6;
	x_position := 1.9999999999999998;
	y_position := -29;
}
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.def"
Content-Type: text/plain

sopflags sopflags = 
comment "HDA Code: ssh"
position 3.5 -44.15
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on displaycomment on
outputsNamed3
{
}
inputsNamed3
{
0 	delete_attributes 1 1 "input1"
}
inputs
{
0 	delete_attributes 0 1
}
stat
{
  create -1
  modify -1
  author MAINGEAR@DESKTOP-P98C1VA
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_shape_type.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_shape_type.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -16.1502
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
4 "output1"
}
inputsNamed3
{
5 	ngon 1 1 "input1"
6 	ngon 1 1 "input2"
0 	ngon 1 1 "input3"
1 	switch_star_type 4 1 "input4"
}
inputs
{
0 	ngon 0 1
1 	ngon 0 1
2 	ngon 0 1
3 	switch_star_type 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_shape_type.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../shape\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_shape_type.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_shape_type.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_cut_hole.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_cut_hole.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 5.5 -34.36
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	(__dot2) "" 1 "input1"
1 	cut_hole 1 1 "input2"
}
inputs
{
0 	(__dot2) 0 1
1 	cut_hole 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_cut_hole.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "ch(\"../cuthole\") == 1 && ( ( ch(\"../shape\") < 2 && ch(\"../equilateral\") == 1 || ch(\"../useradius\") == 1 ) || ch(\"../shape\") > 1 )" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_cut_hole.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_cut_hole.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_fill_shape.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_fill_shape.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -37.1502
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	remove_fill 1 1 "input1"
1 	switch_add_uvs 2 1 "input2"
}
inputs
{
0 	remove_fill 0 1
1 	switch_add_uvs 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_fill_shape.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../fillshape\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_fill_shape.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_fill_shape.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_flat_edges.init"
Content-Type: text/plain

type = groupcombine
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_flat_edges.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -25.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight on unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	transfer_groups 2 1 "input1"
}
inputs
{
0 	transfer_groups 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.145 0.667 0.557 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_flat_edges.parm"
Content-Type: text/plain

{
version 0.8
numcombine	[ 0	locks=0 ]	(	1	)
grouptype1	[ 0	locks=0 ]	(	"edges"	)
group1	[ 0	locks=0 ]	(	_ssh_flatedges	)
negate_a1	[ 0	locks=0 ]	(	"off"	)
group_a1	[ 0	locks=0 ]	(	*	)
op_ab1	[ 0	locks=0 ]	(	"sub"	)
negate_b1	[ 0	locks=0 ]	(	"off"	)
group_b1	[ 0	locks=0 ]	(	_ssh_roundedges	)
op_bc1	[ 0	locks=0 ]	(	"sub"	)
negate_c1	[ 0	locks=0 ]	(	"off"	)
group_c1	[ 0	locks=0 ]	(	_ssh_roundedges_concave	)
op_cd1	[ 0	locks=0 ]	(	"sub"	)
negate_d1	[ 0	locks=0 ]	(	"off"	)
group_d1	[ 0	locks=0 ]	(	_ssh_roundedges_convex	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_flat_edges.netbox"
Content-Type: text/plain

__netbox4

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_flat_edges.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_add_uvs.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_add_uvs.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 5.5 -36.1502
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	switch_cut_hole 2 1 "input1"
1 	add_uvs 1 1 "input2"
}
inputs
{
0 	switch_cut_hole 0 1
1 	add_uvs 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_add_uvs.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../adduvs\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_add_uvs.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_add_uvs.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_fill_shape.init"
Content-Type: text/plain

type = add
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_fill_shape.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -7.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	construct_shape 1 1 "input1"
}
inputs
{
0 	construct_shape 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_fill_shape.parm"
Content-Type: text/plain

{
version 0.8
stdswitcher	[ 0	locks=0 ]	(	1	1	1	)
keep	[ 0	locks=0 ]	(	"off"	)
points	[ 0	locks=0 ]	(	0	)
remove	[ 0	locks=0 ]	(	"off"	)
switcher	[ 0	locks=0 ]	(	1	1	)
prims	[ 0	locks=0 ]	(	1	)
group	[ 0	locks=0 ]	(	""	)
add	[ 0	locks=0 ]	(	"all"	)
inc	[ 0	locks=0 ]	(	2	)
attrname	[ 0	locks=0 ]	(	""	)
closedall	[ 0	locks=0 ]	(	"on"	)
addparticlesystem	[ 0	locks=0 ]	(	"off"	)
particlegroup	[ 0	locks=0 ]	(	""	)
appendunusedtoparticlesystem	[ 0	locks=0 ]	(	"off"	)
prim0	[ 0	locks=0 ]	(	""	)
closed0	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_fill_shape.netbox"
Content-Type: text/plain

__netbox2

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_fill_shape.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ngon.init"
Content-Type: text/plain

type = blast
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ngon.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.5 -13.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_square_star 2 1 "input1"
}
inputs
{
0 	switch_square_star 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.98 0.275 0.275 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ngon.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	_ssh_point_corners	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
computenorms	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"on"	)
fillhole	[ 0	locks=0 ]	(	"off"	)
removegrp	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/ngon.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/star.init"
Content-Type: text/plain

type = blast
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/star.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -13.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_square_star 2 1 "input1"
}
inputs
{
0 	switch_square_star 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.98 0.275 0.275 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/star.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	_ssh_point_corners_convex	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
computenorms	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"off"	)
fillhole	[ 0	locks=0 ]	(	"off"	)
removegrp	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/star.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/double_star.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/double_star.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 5.5 -13.155
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_square_star 2 1 "input1"
}
inputs
{
0 	switch_square_star 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.6 0.7 0.77 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/double_star.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/double_star.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_star_type.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_star_type.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 5.5 -15.1502
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
4 "output1"
}
inputsNamed3
{
0 	star 1 1 "input1"
1 	double_star 1 1 "input2"
2 	square_star 1 1 "input3"
}
inputs
{
0 	star 0 1
1 	double_star 0 1
2 	square_star 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_star_type.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../startype\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_star_type.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_star_type.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/separate_corners_groups.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/separate_corners_groups.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.503 -18.151
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_shape_type 4 1 "input1"
}
inputs
{
0 	switch_shape_type 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.145 0.667 0.557 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/separate_corners_groups.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "shape"
        label   "Shape"
        type    ordinal
        default { "0" }
        menu {
            "0" "Triangle"
            "1" "Quad"
            "2" "N-gon / Circle"
            "3" "Star"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "roundcorners"
        label   "Round Corners"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "roundcornersconcave"
        label   "Round Concave Corners"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "roundcornersconvex"
        label   "Round Convex Corners"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/separate_corners_groups.chn"
Content-Type: text/plain

{
    channel roundcorners {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../roundcorners\") }
    }
    channel roundcornersconcave {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../roundcornersconcave\") }
    }
    channel roundcornersconvex {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../roundcornersconvex\") }
    }
    channel shape {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../shape\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/separate_corners_groups.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"int shape = chi(\"shape\");
int roundcorners = chi(\"roundcorners\");
int roundcornersconcave = chi(\"roundcornersconcave\");
int roundcornersconvex = chi(\"roundcornersconvex\");

if (roundcorners == 0) {
    setpointgroup(0, \"_ssh_point_corners\", @ptnum, 0); 
}

if (roundcornersconcave == 0 && shape == 3) {
    setpointgroup(0, \"_ssh_point_corners_concave\", @ptnum, 0); 
}

if (roundcornersconvex == 0 && shape == 3)  {
    setpointgroup(0, \"_ssh_point_corners_convex\", @ptnum, 0); 
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
shape	[ 8	locks=0 ]	(	[ shape	0 ] 	)
roundcorners	[ 0	locks=0 ]	(	[ roundcorners	0 ] 	)
roundcornersconcave	[ 0	locks=0 ]	(	[ roundcornersconcave	0 ] 	)
roundcornersconvex	[ 0	locks=0 ]	(	[ roundcornersconvex	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/separate_corners_groups.netbox"
Content-Type: text/plain

__netbox1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/separate_corners_groups.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_corners.init"
Content-Type: text/plain

type = polybevel::3.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_corners.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -19.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	separate_corners_groups 1 1 "input1"
}
inputs
{
0 	separate_corners_groups 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_corners.chn"
Content-Type: text/plain

{
    channel offset {
      lefttype = extend
      righttype = extend
      default = 0.245
      flags = 0
      segment { length = 0 value = 0.245 0.245 expr = ch(\"../rounddistance\") }
    }
    channel divisions {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../rounddivisions\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_corners.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	_ssh_point_corners	)
grouptype	[ 0	locks=0 ]	(	"points"	)
ignoregroup	[ 0	locks=0 ]	(	0	)
ignorebridgededges	[ 0	locks=0 ]	(	"on"	)
ignoresharededges	[ 0	locks=0 ]	(	"off"	)
ignoreflatedges	[ 0	locks=0 ]	(	"off"	)
ignoreflatpoints	[ 0	locks=0 ]	(	"off"	)
ignoreinlinepoints	[ 0	locks=0 ]	(	"off"	)
flatangle	[ 0	locks=0 ]	(	2	)
offsettingsection	[ 0	locks=0 ]	(	0	)
offset	[ 8	locks=0 ]	(	[ offset	0 ] 	)
useoffsetscale	[ 0	locks=0 ]	(	"unscaled"	)
pointscaleattr	[ 0	locks=0 ]	(	pscale	)
sliding	[ 0	locks=0 ]	(	"auto"	)
asymtol	[ 0	locks=0 ]	(	0.5	)
slideedges	[ 0	locks=0 ]	(	""	)
collisionsandlimits	[ 0	locks=0 ]	(	0	)
detectcollisions	[ 0	locks=0 ]	(	"on"	)
restrictslides	[ 0	locks=0 ]	(	"on"	)
limit	[ 0	locks=0 ]	(	"individually"	)
stopatslideend	[ 0	locks=0 ]	(	"on"	)
stopatpinches	[ 0	locks=0 ]	(	"on"	)
pinchangle	[ 0	locks=0 ]	(	0	)
stopatcollisions	[ 0	locks=0 ]	(	"on"	)
filletsection	[ 0	locks=0 ]	(	0	)
filletshape	[ 0	locks=0 ]	(	"round"	)
divisions	[ 8	locks=0 ]	(	[ divisions	1 ] 	)
profilesampling	[ 0	locks=0 ]	(	"uniform"	)
convexity	[ 0	locks=0 ]	(	1	)
profilesource	[ 0	locks=0 ]	(	"basic"	)
profilegroup	[ 0	locks=0 ]	(	0	)
profilescale	[ 0	locks=0 ]	(	1	)
reverseprofile	[ 0	locks=0 ]	(	"off"	)
symmetrizeprofile	[ 0	locks=0 ]	(	"on"	)
profiledirection	[ 0	locks=0 ]	(	""	)
profileramp	[ 0	locks=0 ]	(	2	)
flatboost	[ 0	locks=0 ]	(	30	)
outputgroupssection	[ 0	locks=0 ]	(	0	)
useptfilletgroup	[ 0	locks=0 ]	(	"off"	)
ptfilletgroup	[ 0	locks=0 ]	(	pointfilletpolys	)
useptfilletedges	[ 0	locks=0 ]	(	"on"	)
ptfilletedges	[ 0	locks=0 ]	(	_ssh_roundedges	)
useedgefilletgroup	[ 0	locks=0 ]	(	"off"	)
edgeprims	[ 0	locks=0 ]	(	edgefilletpolys	)
useoffsetedges	[ 0	locks=0 ]	(	"off"	)
offsetedges	[ 0	locks=0 ]	(	offsetedges	)
useoffsetpoints	[ 0	locks=0 ]	(	"off"	)
offsetpoints	[ 0	locks=0 ]	(	offsetpoints	)
usemergedpoints	[ 0	locks=0 ]	(	"off"	)
mergedpoints	[ 0	locks=0 ]	(	mergedpoints	)
profileramp1pos	[ 0	locks=0 ]	(	0	)
profileramp1value	[ 0	locks=0 ]	(	0.5	)
profileramp1interp	[ 0	locks=0 ]	(	"catmull-rom"	)
profileramp2pos	[ 0	locks=0 ]	(	1	)
profileramp2value	[ 0	locks=0 ]	(	0.5	)
profileramp2interp	[ 0	locks=0 ]	(	"catmull-rom"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_corners.netbox"
Content-Type: text/plain

__netbox1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_corners.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_concave_corners.init"
Content-Type: text/plain

type = polybevel::3.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_concave_corners.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -20.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	round_corners 1 1 "input1"
}
inputs
{
0 	round_corners 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_concave_corners.chn"
Content-Type: text/plain

{
    channel offset {
      lefttype = extend
      righttype = extend
      default = 0.245
      flags = 0
      segment { length = 0 value = 0.245 0.245 expr = ch(\"../rounddistanceconcave\") }
    }
    channel divisions {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../rounddivisionsconcave\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_concave_corners.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	_ssh_point_corners_concave	)
grouptype	[ 0	locks=0 ]	(	"points"	)
ignoregroup	[ 0	locks=0 ]	(	0	)
ignorebridgededges	[ 0	locks=0 ]	(	"on"	)
ignoresharededges	[ 0	locks=0 ]	(	"off"	)
ignoreflatedges	[ 0	locks=0 ]	(	"off"	)
ignoreflatpoints	[ 0	locks=0 ]	(	"off"	)
ignoreinlinepoints	[ 0	locks=0 ]	(	"off"	)
flatangle	[ 0	locks=0 ]	(	2	)
offsettingsection	[ 0	locks=0 ]	(	0	)
offset	[ 8	locks=0 ]	(	[ offset	0 ] 	)
useoffsetscale	[ 0	locks=0 ]	(	"unscaled"	)
pointscaleattr	[ 0	locks=0 ]	(	pscale	)
sliding	[ 0	locks=0 ]	(	"auto"	)
asymtol	[ 0	locks=0 ]	(	0.5	)
slideedges	[ 0	locks=0 ]	(	""	)
collisionsandlimits	[ 0	locks=0 ]	(	0	)
detectcollisions	[ 0	locks=0 ]	(	"on"	)
restrictslides	[ 0	locks=0 ]	(	"on"	)
limit	[ 0	locks=0 ]	(	"individually"	)
stopatslideend	[ 0	locks=0 ]	(	"on"	)
stopatpinches	[ 0	locks=0 ]	(	"on"	)
pinchangle	[ 0	locks=0 ]	(	0	)
stopatcollisions	[ 0	locks=0 ]	(	"on"	)
filletsection	[ 0	locks=0 ]	(	0	)
filletshape	[ 0	locks=0 ]	(	"round"	)
divisions	[ 8	locks=0 ]	(	[ divisions	1 ] 	)
profilesampling	[ 0	locks=0 ]	(	"uniform"	)
convexity	[ 0	locks=0 ]	(	1	)
profilesource	[ 0	locks=0 ]	(	"basic"	)
profilegroup	[ 0	locks=0 ]	(	0	)
profilescale	[ 0	locks=0 ]	(	1	)
reverseprofile	[ 0	locks=0 ]	(	"off"	)
symmetrizeprofile	[ 0	locks=0 ]	(	"on"	)
profiledirection	[ 0	locks=0 ]	(	""	)
profileramp	[ 0	locks=0 ]	(	2	)
flatboost	[ 0	locks=0 ]	(	30	)
outputgroupssection	[ 0	locks=0 ]	(	0	)
useptfilletgroup	[ 0	locks=0 ]	(	"off"	)
ptfilletgroup	[ 0	locks=0 ]	(	pointfilletpolys	)
useptfilletedges	[ 0	locks=0 ]	(	"on"	)
ptfilletedges	[ 0	locks=0 ]	(	_ssh_roundedges_concave	)
useedgefilletgroup	[ 0	locks=0 ]	(	"off"	)
edgeprims	[ 0	locks=0 ]	(	edgefilletpolys	)
useoffsetedges	[ 0	locks=0 ]	(	"off"	)
offsetedges	[ 0	locks=0 ]	(	offsetedges	)
useoffsetpoints	[ 0	locks=0 ]	(	"off"	)
offsetpoints	[ 0	locks=0 ]	(	offsetpoints	)
usemergedpoints	[ 0	locks=0 ]	(	"off"	)
mergedpoints	[ 0	locks=0 ]	(	mergedpoints	)
profileramp1pos	[ 0	locks=0 ]	(	0	)
profileramp1value	[ 0	locks=0 ]	(	0.5	)
profileramp1interp	[ 0	locks=0 ]	(	"catmull-rom"	)
profileramp2pos	[ 0	locks=0 ]	(	1	)
profileramp2value	[ 0	locks=0 ]	(	0.5	)
profileramp2interp	[ 0	locks=0 ]	(	"catmull-rom"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_concave_corners.netbox"
Content-Type: text/plain

__netbox1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_concave_corners.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_convex_corners.init"
Content-Type: text/plain

type = polybevel::3.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_convex_corners.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -21.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	round_concave_corners 1 1 "input1"
}
inputs
{
0 	round_concave_corners 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_convex_corners.chn"
Content-Type: text/plain

{
    channel offset {
      lefttype = extend
      righttype = extend
      default = 0.245
      flags = 0
      segment { length = 0 value = 0.245 0.245 expr = ch(\"../rounddistanceconvex\") }
    }
    channel divisions {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../rounddivisionsconvex\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_convex_corners.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	_ssh_point_corners_convex	)
grouptype	[ 0	locks=0 ]	(	"points"	)
ignoregroup	[ 0	locks=0 ]	(	0	)
ignorebridgededges	[ 0	locks=0 ]	(	"on"	)
ignoresharededges	[ 0	locks=0 ]	(	"off"	)
ignoreflatedges	[ 0	locks=0 ]	(	"off"	)
ignoreflatpoints	[ 0	locks=0 ]	(	"off"	)
ignoreinlinepoints	[ 0	locks=0 ]	(	"off"	)
flatangle	[ 0	locks=0 ]	(	2	)
offsettingsection	[ 0	locks=0 ]	(	1	)
offset	[ 8	locks=0 ]	(	[ offset	0 ] 	)
useoffsetscale	[ 0	locks=0 ]	(	"unscaled"	)
pointscaleattr	[ 0	locks=0 ]	(	pscale	)
sliding	[ 0	locks=0 ]	(	"auto"	)
asymtol	[ 0	locks=0 ]	(	0.5	)
slideedges	[ 0	locks=0 ]	(	""	)
collisionsandlimits	[ 0	locks=0 ]	(	0	)
detectcollisions	[ 0	locks=0 ]	(	"on"	)
restrictslides	[ 0	locks=0 ]	(	"on"	)
limit	[ 0	locks=0 ]	(	"individually"	)
stopatslideend	[ 0	locks=0 ]	(	"on"	)
stopatpinches	[ 0	locks=0 ]	(	"on"	)
pinchangle	[ 0	locks=0 ]	(	0	)
stopatcollisions	[ 0	locks=0 ]	(	"on"	)
filletsection	[ 0	locks=0 ]	(	0	)
filletshape	[ 0	locks=0 ]	(	"round"	)
divisions	[ 8	locks=0 ]	(	[ divisions	1 ] 	)
profilesampling	[ 0	locks=0 ]	(	"uniform"	)
convexity	[ 0	locks=0 ]	(	1	)
profilesource	[ 0	locks=0 ]	(	"basic"	)
profilegroup	[ 0	locks=0 ]	(	0	)
profilescale	[ 0	locks=0 ]	(	1	)
reverseprofile	[ 0	locks=0 ]	(	"off"	)
symmetrizeprofile	[ 0	locks=0 ]	(	"on"	)
profiledirection	[ 0	locks=0 ]	(	""	)
profileramp	[ 0	locks=0 ]	(	2	)
flatboost	[ 0	locks=0 ]	(	30	)
outputgroupssection	[ 0	locks=0 ]	(	0	)
useptfilletgroup	[ 0	locks=0 ]	(	"off"	)
ptfilletgroup	[ 0	locks=0 ]	(	pointfilletpolys	)
useptfilletedges	[ 0	locks=0 ]	(	"on"	)
ptfilletedges	[ 0	locks=0 ]	(	_ssh_roundedges_convex	)
useedgefilletgroup	[ 0	locks=0 ]	(	"off"	)
edgeprims	[ 0	locks=0 ]	(	edgefilletpolys	)
useoffsetedges	[ 0	locks=0 ]	(	"off"	)
offsetedges	[ 0	locks=0 ]	(	offsetedges	)
useoffsetpoints	[ 0	locks=0 ]	(	"off"	)
offsetpoints	[ 0	locks=0 ]	(	offsetpoints	)
usemergedpoints	[ 0	locks=0 ]	(	"off"	)
mergedpoints	[ 0	locks=0 ]	(	mergedpoints	)
profileramp1pos	[ 0	locks=0 ]	(	0	)
profileramp1value	[ 0	locks=0 ]	(	0.5	)
profileramp1interp	[ 0	locks=0 ]	(	"catmull-rom"	)
profileramp2pos	[ 0	locks=0 ]	(	1	)
profileramp2value	[ 0	locks=0 ]	(	0.5	)
profileramp2interp	[ 0	locks=0 ]	(	"catmull-rom"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_convex_corners.netbox"
Content-Type: text/plain

__netbox1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/round_convex_corners.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/construct_shape.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/construct_shape.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.497 -6.151
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	point_groups 1 1 "input1"
}
inputs
{
0 	point_groups 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/construct_shape.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "shape"
        label   "Shape"
        type    ordinal
        default { "0" }
        menu {
            "0" "Triangle"
            "1" "Quad"
            "2" "N-gon"
            "3" "Star"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "startype"
        label   "Star Type"
        type    ordinal
        default { "0" }
        menu {
            "0" "Regular Star"
            "1" "Double Star"
            "2" "Square Star"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "equilateral"
        label   "Equal Sides"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "useradius"
        label   "Set by Radius"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sides"
        label   "Sides"
        type    integer
        default { "6" }
        range   { 3! 12 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "base"
        label   "Base"
        type    float
        default { "1" }
        range   { 0 5 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "height"
        label   "Height"
        type    float
        default { "1" }
        range   { 0 5 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "radius"
        label   "Radius"
        type    float
        default { "1" }
        range   { 0.001 2 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "radiusmiddle"
        label   "Middle Radius"
        type    float
        default { "0.75" }
        range   { 0.001 2 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "radiusinner"
        label   "Inner Radius"
        type    float
        default { "0.5" }
        range   { 0.001 2 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "translate"
        label   "Translate"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { -1 1 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "reversepointorder"
        label   "Reverse Point Order"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "top"
        label   "Top"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "shear"
        label   "Shear"
        type    float
        default { "0" }
        range   { 0 1 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/construct_shape.chn"
Content-Type: text/plain

{
    channel shape {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../shape\") }
    }
    channel startype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../startype\") }
    }
    channel equilateral {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../equilateral\") }
    }
    channel useradius {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../useradius\") }
    }
    channel radius {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../radius\") }
    }
    channel radiusmiddle {
      lefttype = extend
      righttype = extend
      default = 0.75
      flags = 0
      segment { length = 0 value = 0.75 0.75 expr = ch(\"../radiusmiddle\") }
    }
    channel radiusinner {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../radiusinner\") }
    }
    channel sides {
      lefttype = extend
      righttype = extend
      default = 6
      flags = 0
      segment { length = 0 value = 6 6 expr = ch(\"../sides\") }
    }
    channel base {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../base\") }
    }
    channel height {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../height\") }
    }
    channel translatex {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../translatex\") }
    }
    channel translatey {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../translatey\") }
    }
    channel translatez {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../translatez\") }
    }
    channel reversepointorder {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../reversepointorder\") }
    }
    channel top {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../top\") }
    }
    channel shear {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../shear\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/construct_shape.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"// Declaration of Variables
int shape = chi(\"shape\");
int star_type = chi(\"startype\");
int sides = chi(\"sides\");
int segments = @numpt / sides;
int equilateral = chi(\"equilateral\");
int use_radius = chi(\"useradius\");
float radius_main = chf(\"radius\");
float radius_middle = chf(\"radiusmiddle\");
float radius_inner = chf(\"radiusinner\");
float top = chf(\"top\");
float base = chf(\"base\");
float height = chf(\"height\");
float shear = chf(\"shear\");
int reverse_point_order = chi(\"reversepointorder\");
vector translate = chv(\"translate\");
float angle;
float pi = 3.14159265359;
float theta = pi / sides;
float angle_offset;
float radius, xpos, zpos;
vector pos = set(0,0,0);

// Waveform Functions
int waveform_triangle(int input, multiplier, offset) {
    int wavelength = multiplier * 2;
    
    int step = (input + offset) % wavelength;
    step = floor(step / multiplier);
    int output = step < 1 ? 1 - step : -step;
    
    return output;
}

int waveform_square(int input, multiplier, offset) {
    int wavelength = multiplier * 2;
    
    int step = (input + offset) % wavelength;
    step = floor(step / multiplier);
    int output = step < 1 ? 1 - step : 0;
    
    return output;
}

// Point Order
if (!reverse_point_order) {
    angle = (2.0 * pi / @numpt) * @ptnum;
    angle_offset = 1;
} else {
    angle = -(2.0 * pi / @numpt) * @ptnum;
    angle_offset = -1;
}

// Radius for Corners Groups
if (i@group__ssh_point_corners) {
    radius = radius_main;
} else if (i@group__ssh_point_corners_concave) {
    if (star_type == 2) {
        radius = min(radius_inner, radius_main);
    } else {
        radius = radius_inner;
    }
} else if (i@group__ssh_point_corners_convex) {
    radius = radius_middle;
}

// Triangle Settings
if (shape == 0) {
    angle_offset *= pi * 2 * @numpt;
    angle += angle_offset + (pi * 0.5);

    if (use_radius) {
        xpos = cos(angle) * radius;
        zpos = sin(angle) * radius;
    } else {
        if (equilateral) {
            xpos = cos(angle) * base / sqrt(3.0);
            zpos = sin(angle) * sqrt(3.0) * base / 3.0;
        } else {
            xpos = cos(angle) * base / sqrt(3);
            xpos -= (shear * waveform_square(@ptnum, 2, 1)) * sign(angle_offset);
            zpos = sin(angle) * height * 2.0 / 3.0;
        }
    }
}

// Quad Settings 
else if (shape == 1) {   
    if (use_radius) {
        angle_offset *= pi * 0.25;
        angle += angle_offset + (pi * 0.5);
        
        xpos = cos(angle) * radius;
        zpos = sin(angle) * radius;
    } else {
        if (equilateral) {
            xpos = base * 0.5 * waveform_triangle(@ptnum, 2, 0) * -sign(angle_offset);
            zpos = base * 0.5 * waveform_triangle(@ptnum, 2, 1);
        } else {
            xpos = ((top * 0.5 * waveform_square(@ptnum, 2, 1)) + (base * 0.5 * waveform_square(@ptnum, 2, -1))) * waveform_triangle(@ptnum, 2, 0);
            xpos += (shear * waveform_square(@ptnum, 2, 1));
            xpos *= -sign(angle_offset);
            zpos = height * 0.5 * waveform_triangle(@ptnum, 2, 1);
        }
    }
}

// N-gon and Star Settings
else {
    angle_offset *= ((sides + 1) % 2) * (pi / sides);
    angle += angle_offset + (pi * 0.5);

    if (star_type == 2) {
        if (radius_inner < radius_main) {
            f@_ssh_distance = sqrt(pow(radius_main, 2) + pow(radius_inner, 2) - (2.0 * radius_main * radius_inner * cos(theta)));
            f@_ssh_height = max(radius_main, radius_inner * cos(pi / sides)) - (radius_inner * cos(theta));
        } else {
            f@_ssh_distance = sqrt(pow(radius_main, 2) + pow(radius_main, 2) - (2.0 * pow(radius_main, 2) * cos(theta)));
            f@_ssh_height = radius_main - (radius_main * cos(theta));         
        }
    }

    xpos = cos(angle) * radius;
    zpos = sin(angle) * radius;
}

// Construction of Shape
pos = set(-xpos, 0, -zpos);
@P = pos;
@N = normalize(@P + pos);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
shape	[ 8	locks=0 ]	(	[ shape	0 ] 	)
startype	[ 8	locks=0 ]	(	[ startype	0 ] 	)
equilateral	[ 8	locks=0 ]	(	[ equilateral	0 ] 	)
useradius	[ 8	locks=0 ]	(	[ useradius	0 ] 	)
sides	[ 0	locks=0 ]	(	[ sides	6 ] 	)
base	[ 0	locks=0 ]	(	[ base	1 ] 	)
height	[ 0	locks=0 ]	(	[ height	1 ] 	)
radius	[ 0	locks=0 ]	(	[ radius	1 ] 	)
radiusmiddle	[ 0	locks=0 ]	(	[ radiusmiddle	0.75 ] 	)
radiusinner	[ 0	locks=0 ]	(	[ radiusinner	0.5 ] 	)
translate	[ 0	locks=0 ]	(	[ translatex	0 ] 	[ translatey	0 ] 	[ translatez	0 ] 	)
reversepointorder	[ 8	locks=0 ]	(	[ reversepointorder	0 ] 	)
top	[ 0	locks=0 ]	(	[ top	0 ] 	)
shear	[ 0	locks=0 ]	(	[ shear	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/construct_shape.netbox"
Content-Type: text/plain

__netbox2

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/construct_shape.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/point_groups.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/point_groups.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.497 -5.1899
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	points_generation_shape 0 1 "input1"
}
inputs
{
0 	points_generation_shape 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.145 0.667 0.557 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/point_groups.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "shape"
        label   "Shape"
        type    ordinal
        default { "0" }
        menu {
            "0" "Triangle"
            "1" "Quad"
            "2" "N-gon"
            "3" "Star"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "startype"
        label   "Star Type"
        type    ordinal
        default { "0" }
        menu {
            "0" "Regular Star"
            "1" "Double Star"
            "2" "Square Star"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sides"
        label   "Sides"
        type    integer
        default { "6" }
        range   { 3! 12 }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/point_groups.chn"
Content-Type: text/plain

{
    channel shape {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../shape\") }
    }
    channel startype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../startype\") }
    }
    channel sides {
      lefttype = extend
      righttype = extend
      default = 6
      flags = 0
      segment { length = 0 value = 6 6 expr = ch(\"../sides\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/point_groups.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"int shape = chi(\"shape\");
int startype = chi(\"startype\"); 
int sides = chi(\"sides\");
int segments = @numpt / sides;

if (shape < 3) {
    setpointgroup(0, \"_ssh_point_corners\", @ptnum, 1);
    setpointgroup(0, \"_ssh_point_corners_concave\", @ptnum, 0);
    setpointgroup(0, \"_ssh_point_corners_convex\", @ptnum, 0);
    setpointgroup(0, \"_ssh_point_shear\", 0, 1);

    if (shape == 1) {
        setpointgroup(0, \"_ssh_point_shear\", 1, 1);
    }
}

else {
    if (startype == 0) {
        setpointgroup(0, \"_ssh_point_corners\", (int)(@ptnum * segments), 1);
        setpointgroup(0, \"_ssh_point_corners_concave\", (int)(@ptnum * segments) + 1, 1);
        setpointgroup(0, \"_ssh_point_corners_convex\", @ptnum, 0);
    }
    else if (startype == 1) {
        setpointgroup(0, \"_ssh_point_corners\", (int)(@ptnum * segments), 1);
        setpointgroup(0, \"_ssh_point_corners_concave\", (int)(@ptnum * segments * 0.5) + 1, 1);
        setpointgroup(0, \"_ssh_point_corners_convex\", (int)(@ptnum * segments) + 2, 1);
    }
    else {
        setpointgroup(0, \"_ssh_point_corners\", (int)(@ptnum * segments), 1);
        setpointgroup(0, \"_ssh_point_corners_concave\", (int)(@ptnum * segments) + 1, 1);
        setpointgroup(0, \"_ssh_point_corners_convex\", @ptnum, 0);
    }

    setpointgroup(0, \"_ssh_point_shear\", @ptnum, 0);
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
shape	[ 8	locks=0 ]	(	[ shape	0 ] 	)
startype	[ 8	locks=0 ]	(	[ startype	0 ] 	)
sides	[ 0	locks=0 ]	(	[ sides	6 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/point_groups.netbox"
Content-Type: text/plain

__netbox2

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/point_groups.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_shape.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_shape.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.497 -4.1899
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_shape.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "shape"
        label   "Shape"
        type    ordinal
        default { "0" }
        menu {
            "0" "Triangle"
            "1" "Quad"
            "2" "N-gon"
            "3" "Star"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "startype"
        label   "Star Type"
        type    ordinal
        default { "0" }
        menu {
            "0" "Regular Star"
            "1" "Double Star"
            "2" "Square Star"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sides"
        label   "Sides"
        type    integer
        default { "0" }
        range   { 0 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_shape.chn"
Content-Type: text/plain

{
    channel shape {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../shape\") }
    }
    channel startype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../startype\") }
    }
    channel sides {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../sides\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_shape.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"detail"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"int shape = chi(\"shape\");
int startype = chi(\"startype\");
int sides = chi(\"sides\");
int totalpoints;

if (shape == 0) {
    totalpoints = 3;
}

else if (shape == 1) {
    totalpoints = 4;
}

else if (shape == 2) {
    totalpoints = sides;
}

else {
    if (startype == 1) {
        totalpoints = sides * 4;
    }
    else {
        totalpoints = sides * 2;
    }
}

for (int i = 0; i < totalpoints; i++) {
    addpoint(0, 0);
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
shape	[ 8	locks=0 ]	(	[ shape	0 ] 	)
startype	[ 8	locks=0 ]	(	[ startype	0 ] 	)
sides	[ 0	locks=0 ]	(	[ sides	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_shape.netbox"
Content-Type: text/plain

__netbox2

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_shape.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/square_star.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/square_star.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 7.5 -13.155
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_square_star 2 1 "input1"
}
inputs
{
0 	switch_square_star 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.6 0.7 0.77 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/square_star.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/square_star.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/square_star_bevel.init"
Content-Type: text/plain

type = polybevel::3.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/square_star_bevel.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 5.5 -8.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	add_fill_shape 1 1 "input1"
}
inputs
{
0 	add_fill_shape 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.839 0.839 0.839 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/square_star_bevel.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	_ssh_point_corners	)
grouptype	[ 0	locks=0 ]	(	"points"	)
ignoregroup	[ 0	locks=0 ]	(	0	)
ignorebridgededges	[ 0	locks=0 ]	(	"on"	)
ignoresharededges	[ 0	locks=0 ]	(	"off"	)
ignoreflatedges	[ 0	locks=0 ]	(	"off"	)
ignoreflatpoints	[ 0	locks=0 ]	(	"off"	)
ignoreinlinepoints	[ 0	locks=0 ]	(	"off"	)
flatangle	[ 0	locks=0 ]	(	2	)
offsettingsection	[ 0	locks=0 ]	(	0	)
offset	[ 0	locks=0 ]	(	1	)
useoffsetscale	[ 0	locks=0 ]	(	"byattrib"	)
pointscaleattr	[ 0	locks=0 ]	(	_ssh_distance	)
sliding	[ 0	locks=0 ]	(	"auto"	)
asymtol	[ 0	locks=0 ]	(	0.5	)
slideedges	[ 0	locks=0 ]	(	""	)
collisionsandlimits	[ 0	locks=0 ]	(	1	)
detectcollisions	[ 0	locks=0 ]	(	"on"	)
restrictslides	[ 0	locks=0 ]	(	"off"	)
limit	[ 0	locks=0 ]	(	"individually"	)
stopatslideend	[ 0	locks=0 ]	(	"on"	)
stopatpinches	[ 0	locks=0 ]	(	"on"	)
pinchangle	[ 0	locks=0 ]	(	0	)
stopatcollisions	[ 0	locks=0 ]	(	"on"	)
filletsection	[ 0	locks=0 ]	(	1	)
filletshape	[ 0	locks=0 ]	(	"chamfer"	)
divisions	[ 0	locks=0 ]	(	1	)
profilesampling	[ 0	locks=0 ]	(	"uniform"	)
convexity	[ 0	locks=0 ]	(	1	)
profilesource	[ 0	locks=0 ]	(	"basic"	)
profilegroup	[ 0	locks=0 ]	(	0	)
profilescale	[ 0	locks=0 ]	(	1	)
reverseprofile	[ 0	locks=0 ]	(	"off"	)
symmetrizeprofile	[ 0	locks=0 ]	(	"on"	)
profiledirection	[ 0	locks=0 ]	(	""	)
profileramp	[ 0	locks=0 ]	(	2	)
flatboost	[ 0	locks=0 ]	(	30	)
outputgroupssection	[ 0	locks=0 ]	(	0	)
useptfilletgroup	[ 0	locks=0 ]	(	"off"	)
ptfilletgroup	[ 0	locks=0 ]	(	pointfilletpolys	)
useptfilletedges	[ 0	locks=0 ]	(	"off"	)
ptfilletedges	[ 0	locks=0 ]	(	pointfilletedges	)
useedgefilletgroup	[ 0	locks=0 ]	(	"off"	)
edgeprims	[ 0	locks=0 ]	(	edgefilletpolys	)
useoffsetedges	[ 0	locks=0 ]	(	"off"	)
offsetedges	[ 0	locks=0 ]	(	offsetedges	)
useoffsetpoints	[ 0	locks=0 ]	(	"off"	)
offsetpoints	[ 0	locks=0 ]	(	offsetpoints	)
usemergedpoints	[ 0	locks=0 ]	(	"off"	)
mergedpoints	[ 0	locks=0 ]	(	mergedpoints	)
profileramp1pos	[ 0	locks=0 ]	(	0	)
profileramp1value	[ 0	locks=0 ]	(	0.5	)
profileramp1interp	[ 0	locks=0 ]	(	"catmull-rom"	)
profileramp2pos	[ 0	locks=0 ]	(	1	)
profileramp2value	[ 0	locks=0 ]	(	0.5	)
profileramp2interp	[ 0	locks=0 ]	(	"catmull-rom"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/square_star_bevel.netbox"
Content-Type: text/plain

__netbox2

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/square_star_bevel.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/move_square_star_bevels.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/move_square_star_bevels.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 5.497 -9.151
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	square_star_bevel 1 1 "input1"
}
inputs
{
0 	square_star_bevel 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/move_square_star_bevels.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "startype"
        label   "Star Type"
        type    ordinal
        default { "0" }
        menu {
            "0" "Regular Star"
            "1" "Double Star"
            "2" "Square Star"
        }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/move_square_star_bevels.chn"
Content-Type: text/plain

{
    channel startype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../startype\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/move_square_star_bevels.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	_ssh_point_corners	)
grouptype	[ 0	locks=0 ]	(	"points"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"int startype = chi(\"startype\"); 

@P += @N * f@_ssh_height;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
startype	[ 8	locks=0 ]	(	[ startype	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/move_square_star_bevels.netbox"
Content-Type: text/plain

__netbox2

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/move_square_star_bevels.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_square_star.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_square_star.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -10.1502
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	add_fill_shape 1 1 "input1"
1 	move_square_star_bevels 1 1 "input2"
}
inputs
{
0 	add_fill_shape 0 1
1 	move_square_star_bevels 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_square_star.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "ch(\"../shape\") == 3 && ch(\"../startype\") > 1" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_square_star.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_square_star.netbox"
Content-Type: text/plain

__netbox2

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_square_star.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/generate_hole.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/generate_hole.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 11.497 -28.151
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	points_generation_hole 0 1 "input1"
}
inputs
{
0 	points_generation_hole 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/generate_hole.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "shape"
        label   "Shape"
        type    ordinal
        default { "0" }
        menu {
            "0" "Triangle"
            "1" "Quad"
            "2" "N-gon"
            "3" "Star"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "startype"
        label   "Star Type"
        type    ordinal
        default { "0" }
        menu {
            "0" "Regular Star"
            "1" "Double Star"
            "2" "Square Star"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "equilateral"
        label   "Equal Sides"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "useradius"
        label   "Set by Radius"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sides"
        label   "Sides"
        type    integer
        default { "6" }
        range   { 3! 12 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "holesides"
        label   "Hole Sides"
        type    integer
        default { "6" }
        range   { 3! 12 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "radius"
        label   "Radius"
        type    float
        default { "1" }
        range   { 0.001 2 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "radiusmiddle"
        label   "Middle Radius"
        type    float
        default { "0.75" }
        range   { 0.001 2 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "radiusinner"
        label   "Inner Radius"
        type    float
        default { "0.5" }
        range   { 0.001 2 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "translate"
        label   "Translate"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { -1 1 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "holerelativescale"
        label   "Relative Scale"
        type    float
        default { "0.5" }
        range   { 0! 1! }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "base"
        label   "Base"
        type    float
        default { "1" }
        range   { 0 5 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "holerotate"
        label   "Rotate"
        type    float
        default { "0" }
        range   { -360 360! }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "reversepointorder"
        label   "Reverse Point Order"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "use_radius"
        label   "Use Radius"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/generate_hole.chn"
Content-Type: text/plain

{
    channel shape {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../shape\") }
    }
    channel startype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../startype\") }
    }
    channel equilateral {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../equilateral\") }
    }
    channel useradius {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../useradius\") }
    }
    channel translatex {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../translatex\") }
    }
    channel translatey {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../translatey\") }
    }
    channel translatez {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../translatez\") }
    }
    channel holerelativescale {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../holerelativescale\") }
    }
    channel radius {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../radius\") }
    }
    channel radiusmiddle {
      lefttype = extend
      righttype = extend
      default = 0.75
      flags = 0
      segment { length = 0 value = 0.75 0.75 expr = ch(\"../radiusmiddle\") }
    }
    channel radiusinner {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../radiusinner\") }
    }
    channel base {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../base\") }
    }
    channel sides {
      lefttype = extend
      righttype = extend
      default = 6
      flags = 0
      segment { length = 0 value = 6 6 expr = ch(\"../sides\") }
    }
    channel holerotate {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../holerotate\") }
    }
    channel reversepointorder {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../reversepointorder\") }
    }
    channel use_radius {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../useradius\") }
    }
    channel holesides {
      lefttype = extend
      righttype = extend
      default = 6
      flags = 0
      segment { length = 0 value = 6 6 expr = ch(\"../holesides\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/generate_hole.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"// Declaration of Variables
int shape = chi(\"shape\");
int startype = chi(\"startype\");
int sides = chi(\"sides\");
int hole_sides = chi(\"holesides\");
int equilateral = chi(\"equilateral\");
int use_radius = chi(\"use_radius\");
float base = chf(\"base\");
float hole_relative_scale = chf(\"holerelativescale\");
vector translate = chv(\"translate\");
float radius_main = chf(\"radius\");
float radius_middle = chf(\"radiusmiddle\");
float radius_inner = chf(\"radiusinner\");
int reverse_point_order = chi(\"reversepointorder\");
float angle, angle_offset;

float pi = 3.14159265359;
float theta = (pi / hole_sides);
float xpos, zpos, maxscale;
vector pos = set(0,0,0);

if (reverse_point_order == 0) {
    angle = (2.0 * pi / @numpt) * @ptnum;
} else {
    angle = -(2.0 * pi / @numpt) * @ptnum;
}

if (shape == 0) {
    if (use_radius)     {
        maxscale = chf(\"radius\") * cos(pi / 3.0);
    } else {
        if (equilateral) {
            maxscale = base * sqrt(3) / 6.0;
        }
    }    
} else if (shape == 1) {
    if (use_radius) {
        maxscale = chf(\"radius\") * cos(pi / 4.0);
    } else {
        if (equilateral) {
            maxscale = base * 0.5;
        }
    }    
} else if (shape == 2) {
    maxscale = radius_main * cos(pi / sides);
} else {
    if (startype == 1) {
        maxscale = min(radius_main, radius_middle, radius_inner);
    } else {
        maxscale = min(radius_main, radius_inner);
    }
}

hole_relative_scale = fit(hole_relative_scale, 0, 1, 0, maxscale);

// Construction of Shape
angle_offset = ((hole_sides + 1) % 2) * (pi / hole_sides);
angle += angle_offset + (pi * 0.5);

xpos = cos(angle) * hole_relative_scale;
zpos = sin(angle) * hole_relative_scale;

pos = set(xpos, 0, -zpos); 
@P = pos;
setpointgroup(0, \"_ssh_hole_points\", @ptnum, 1);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
shape	[ 8	locks=0 ]	(	[ shape	0 ] 	)
startype	[ 8	locks=0 ]	(	[ startype	0 ] 	)
equilateral	[ 8	locks=0 ]	(	[ equilateral	0 ] 	)
useradius	[ 8	locks=0 ]	(	[ useradius	0 ] 	)
sides	[ 0	locks=0 ]	(	[ sides	6 ] 	)
holesides	[ 0	locks=0 ]	(	[ holesides	6 ] 	)
radius	[ 0	locks=0 ]	(	[ radius	1 ] 	)
radiusmiddle	[ 0	locks=0 ]	(	[ radiusmiddle	0.75 ] 	)
radiusinner	[ 0	locks=0 ]	(	[ radiusinner	0.5 ] 	)
translate	[ 0	locks=0 ]	(	[ translatex	0 ] 	[ translatey	0 ] 	[ translatez	0 ] 	)
holerelativescale	[ 0	locks=0 ]	(	[ holerelativescale	0.5 ] 	)
base	[ 0	locks=0 ]	(	[ base	1 ] 	)
holerotate	[ 0	locks=0 ]	(	[ holerotate	0 ] 	)
reversepointorder	[ 8	locks=0 ]	(	[ reversepointorder	0 ] 	)
use_radius	[ 8	locks=0 ]	(	[ use_radius	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/generate_hole.netbox"
Content-Type: text/plain

__netbox3

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/generate_hole.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_hole.init"
Content-Type: text/plain

type = pointgenerate
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_hole.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 11.5 -27.15
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_hole.chn"
Content-Type: text/plain

{
    channel npts {
      lefttype = extend
      righttype = extend
      default = 16
      flags = 0
      segment { length = 0 value = 16 16 expr = ch(\"../holesides\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_hole.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
keep	[ 0	locks=0 ]	(	"off"	)
ptsperpt	[ 0	locks=0 ]	(	"off"	)
npts	[ 8	locks=0 ]	(	[ npts	5000 ] 	)
nptsperpt	[ 0	locks=0 ]	(	10	)
doattrib	[ 0	locks=0 ]	(	"off"	)
attrib	[ 0	locks=0 ]	(	""	)
seed	[ 0	locks=0 ]	(	0	)
dogroup	[ 0	locks=0 ]	(	"off"	)
ggroup	[ 0	locks=0 ]	(	generated	)
dopointnum	[ 0	locks=0 ]	(	"off"	)
spointnum	[ 0	locks=0 ]	(	pointnum	)
dopointidx	[ 0	locks=0 ]	(	"off"	)
spointidx	[ 0	locks=0 ]	(	pointidx	)
docopyattribs	[ 0	locks=0 ]	(	"off"	)
attribstocopy	[ 0	locks=0 ]	(	*	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_hole.netbox"
Content-Type: text/plain

__netbox3

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/points_generation_hole.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_fill_hole.init"
Content-Type: text/plain

type = add
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_fill_hole.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 11.5 -29.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	generate_hole 1 1 "input1"
}
inputs
{
0 	generate_hole 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_fill_hole.parm"
Content-Type: text/plain

{
version 0.8
stdswitcher	[ 0	locks=0 ]	(	1	1	1	)
keep	[ 0	locks=0 ]	(	"off"	)
points	[ 0	locks=0 ]	(	0	)
remove	[ 0	locks=0 ]	(	"off"	)
switcher	[ 0	locks=0 ]	(	1	1	)
prims	[ 0	locks=0 ]	(	1	)
group	[ 0	locks=0 ]	(	""	)
add	[ 0	locks=0 ]	(	"all"	)
inc	[ 0	locks=0 ]	(	2	)
attrname	[ 0	locks=0 ]	(	""	)
closedall	[ 0	locks=0 ]	(	"on"	)
addparticlesystem	[ 0	locks=0 ]	(	"off"	)
particlegroup	[ 0	locks=0 ]	(	""	)
appendunusedtoparticlesystem	[ 0	locks=0 ]	(	"off"	)
prim0	[ 0	locks=0 ]	(	""	)
closed0	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_fill_hole.netbox"
Content-Type: text/plain

__netbox3

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_fill_hole.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/side_segments.init"
Content-Type: text/plain

type = edgedivide
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/side_segments.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 5.5 -26.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	group_flat_edges 1 1 "input1"
}
inputs
{
0 	group_flat_edges 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/side_segments.chn"
Content-Type: text/plain

{
    channel numdivs {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../sidesegments\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/side_segments.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	_ssh_flatedges	)
numdivs	[ 8	locks=0 ]	(	[ numdivs	2 ] 	)
applytoall	[ 0	locks=0 ]	(	"on"	)
sharedpoints	[ 0	locks=0 ]	(	"off"	)
connectpoints	[ 0	locks=0 ]	(	"off"	)
closepath	[ 0	locks=0 ]	(	"off"	)
tolerance	[ 0	locks=0 ]	(	1.0000000000000001e-05	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/side_segments.netbox"
Content-Type: text/plain

__netbox4

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/side_segments.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_side_segments.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_side_segments.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -27.1502
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	group_flat_edges 1 1 "input1"
1 	side_segments 1 1 "input2"
}
inputs
{
0 	group_flat_edges 0 1
1 	side_segments 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_side_segments.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "ch(\"../sidesegments\") > 1" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_side_segments.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_side_segments.netbox"
Content-Type: text/plain

__netbox4

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_side_segments.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_normals.init"
Content-Type: text/plain

type = normal
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_normals.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -39.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	transform_shape 1 1 "input1"
}
inputs
{
0 	transform_shape 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_normals.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
overridenormal	[ 0	locks=0 ]	(	"off"	)
normalattrib	[ 0	locks=0 ]	(	N	)
construct	[ 0	locks=0 ]	(	0	)
docompute	[ 0	locks=0 ]	(	"on"	)
type	[ 0	locks=0 ]	(	"typevertex"	)
cuspangle	[ 0	locks=0 ]	(	60	)
method	[ 0	locks=0 ]	(	1	)
origifzero	[ 0	locks=0 ]	(	"on"	)
modify	[ 0	locks=0 ]	(	0	)
normalize	[ 0	locks=0 ]	(	"off"	)
reverse	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_normals.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_groups.init"
Content-Type: text/plain

type = groupdelete
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_groups.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -42.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	rename_groups 1 1 "input1"
}
inputs
{
0 	rename_groups 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.98 0.275 0.275 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_groups.parm"
Content-Type: text/plain

{
version 0.8
deletions	[ 0	locks=0 ]	(	1	)
removegrp	[ 0	locks=0 ]	(	"off"	)
enable1	[ 0	locks=0 ]	(	"on"	)
grouptype1	[ 0	locks=0 ]	(	"any"	)
group1	[ 0	locks=0 ]	(	_ssh_*	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_groups.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_attributes.init"
Content-Type: text/plain

type = attribdelete
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_attributes.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.49655 -43.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	delete_groups 1 1 "input1"
}
inputs
{
0 	delete_groups 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.98 0.275 0.275 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_attributes.parm"
Content-Type: text/plain

{
version 0.8
usereference	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"off"	)
doptdel	[ 0	locks=0 ]	(	"on"	)
ptdel	[ 0	locks=0 ]	(	_ssh_*	)
dovtxdel	[ 0	locks=0 ]	(	"off"	)
vtxdel	[ 0	locks=0 ]	(	""	)
doprimdel	[ 0	locks=0 ]	(	"off"	)
primdel	[ 0	locks=0 ]	(	""	)
dodtldel	[ 0	locks=0 ]	(	"off"	)
dtldel	[ 0	locks=0 ]	(	""	)
updatevar	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/delete_attributes.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge_shapes.init"
Content-Type: text/plain

type = merge
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge_shapes.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 11.4988 -32.1469
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	(__dot2) "" 1 "input1"
1 	rotate_hole 1 1 "input2"
}
inputs
{
0 	(__dot2) 0 1
1 	rotate_hole 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge_shapes.parm"
Content-Type: text/plain

{
version 0.8
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge_shapes.netbox"
Content-Type: text/plain

__netbox3

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge_shapes.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cut_hole.init"
Content-Type: text/plain

type = hole
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cut_hole.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 11.5 -33.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	merge_shapes 2 1 "input1"
}
inputs
{
0 	merge_shapes 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cut_hole.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
break	[ 0	locks=0 ]	(	"off"	)
dist	[ 0	locks=0 ]	(	0.001	)
angle	[ 0	locks=0 ]	(	1	)
snap	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cut_hole.netbox"
Content-Type: text/plain

__netbox3

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cut_hole.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_uvs.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_uvs.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 7.497 -35.151
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_cut_hole 2 1 "input1"
}
inputs
{
0 	switch_cut_hole 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.576 0.208 0.475 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_uvs.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "reversepointorder"
        label   "Reverse Point Order"
        type    toggle
        default { "0" }
        range   { 0 10 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_uvs.chn"
Content-Type: text/plain

{
    channel reversepointorder {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../reversepointorder\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_uvs.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"vertex"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"int reverse_point_order = chi(\"reversepointorder\");

@uv.x = @P.x;
@uv.y = -@P.z;

if (reverse_point_order) {
    @uv.x *= -1;
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
reversepointorder	[ 8	locks=0 ]	(	[ reversepointorder	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add_uvs.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/sort_point_numbers.init"
Content-Type: text/plain

type = sort
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/sort_point_numbers.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -28.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_side_segments 2 1 "input1"
}
inputs
{
0 	switch_side_segments 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/sort_point_numbers.chn"
Content-Type: text/plain

{
    channel pointproxz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "point(0, 0, \"P\", 2)" }
    }
    channel pointproxx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "point(0, 0, \"P\", 0)" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/sort_point_numbers.parm"
Content-Type: text/plain

{
version 0.8
pointsfolder	[ 0	locks=0 ]	(	0	)
ptgroup	[ 0	locks=0 ]	(	""	)
ptsort	[ 0	locks=0 ]	(	"vtxord"	)
pointseed	[ 0	locks=0 ]	(	0	)
pointoffset	[ 0	locks=0 ]	(	0	)
pointprox	[ 0	locks=0 ]	(	[ pointproxx	0 ] 	0	[ pointproxz	0 ] 	)
pointobjpath	[ 0	locks=0 ]	(	""	)
pointdir	[ 0	locks=0 ]	(	0	1	0	)
pointexpr	[ 8	locks=0 ]	(	0.35250005125999451	)
pointattrib	[ 0	locks=0 ]	(	""	)
pointattribcomp	[ 0	locks=0 ]	(	0	)
pointreverse	[ 0	locks=0 ]	(	"off"	)
primitivesfolder	[ 0	locks=0 ]	(	0	)
primgroup	[ 0	locks=0 ]	(	""	)
primsort	[ 0	locks=0 ]	(	"none"	)
primseed	[ 0	locks=0 ]	(	0	)
primoffset	[ 0	locks=0 ]	(	0	)
primprox	[ 0	locks=0 ]	(	0	0	0	)
primobjpath	[ 0	locks=0 ]	(	""	)
primdir	[ 0	locks=0 ]	(	0	1	0	)
primexpr	[ 0	locks=0 ]	(	0	)
primattrib	[ 0	locks=0 ]	(	""	)
primattribcomp	[ 0	locks=0 ]	(	0	)
primreverse	[ 0	locks=0 ]	(	"off"	)
vertexprimorder	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/sort_point_numbers.netbox"
Content-Type: text/plain

__netbox4

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/sort_point_numbers.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cut_hole_object.init"
Content-Type: text/plain

type = object_merge
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cut_hole_object.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 15.4987 -28.1485
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cut_hole_object.parm"
Content-Type: text/plain

{
version 0.8
numobj	[ 0	locks=0 ]	(	1	)
_separator	[ 0	locks=0 ]	(	)
xformtype	[ 0	locks=0 ]	(	"object"	)
xformpath	[ 0	locks=0 ]	(	""	)
invertxform	[ 0	locks=0 ]	(	"off"	)
createptgroups	[ 0	locks=0 ]	(	"off"	)
ptgroupprefix	[ 0	locks=0 ]	(	_ptgrp_	)
createprimgroups	[ 0	locks=0 ]	(	"off"	)
primgroupprefix	[ 0	locks=0 ]	(	_primgrp_	)
verbosegroups	[ 0	locks=0 ]	(	"off"	)
suffixfirstgroup	[ 0	locks=0 ]	(	"on"	)
createptstring	[ 0	locks=0 ]	(	"off"	)
createprimstring	[ 0	locks=0 ]	(	"off"	)
pathattrib	[ 0	locks=0 ]	(	objname	)
pack	[ 0	locks=0 ]	(	"off"	)
pivot	[ 0	locks=0 ]	(	"centroid"	)
viewportlod	[ 0	locks=0 ]	(	"full"	)
addpath	[ 0	locks=0 ]	(	"on"	)
enable1	[ 0	locks=0 ]	(	"on"	)
objpath1	[ 0	locks=0 ]	(	`chsop(\"../holepath\")`	)
group1	[ 0	locks=0 ]	(	""	)
expand1	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cut_hole_object.netbox"
Content-Type: text/plain

__netbox3

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cut_hole_object.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transform_shape.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transform_shape.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.497 -38.1121
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_fill_shape 2 1 "input1"
}
inputs
{
0 	switch_fill_shape 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transform_shape.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "orientation"
        label   "Orientation"
        type    ordinal
        default { "0" }
        menu {
            "0" "XY"
            "1" "ZY"
            "2" "XZ"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "translate"
        label   "Translate"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { -1 1 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "rotate"
        label   "Rotate"
        type    float
        default { "0" }
        range   { 0 360 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "reversepointorder"
        label   "Reverse Point Order"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transform_shape.chn"
Content-Type: text/plain

{
    channel translatex {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../translatex\") }
    }
    channel translatey {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../translatey\") }
    }
    channel translatez {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../translatez\") }
    }
    channel rotate {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../rotate\") }
    }
    channel reversepointorder {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../reversepointorder\") }
    }
    channel orientation {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../orientation\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transform_shape.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"// Declaration of Variables
int orientation = chi(\"orientation\");
vector translate = chv(\"translate\");
float rotate = chf(\"rotate\");
int reverse_point_order = chi(\"reversepointorder\");
matrix3 m = ident();
vector axis;

if (orientation == 0) {
    axis = set(1, 0, 0);
    rotate(m, radians(90), axis);
    axis = set(0, 0, 1); 
}
else if (orientation == 1) {
    axis = set(0, 0, -1);
    rotate(m, radians(90), axis);
    axis = set(1, 0, 0);
    rotate(m, radians(90), axis);
    axis = set(1, 0, 0);
} else {
    axis = set(0, 1, 0);
} 

if (reverse_point_order == 1) {
    axis *= -1;
}

rotate(m, radians(rotate), axis); 
@P *= m;
@P += translate;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
orientation	[ 0	locks=0 ]	(	[ orientation	0 ] 	)
translate	[ 0	locks=0 ]	(	[ translatex	0 ] 	[ translatey	0 ] 	[ translatez	0 ] 	)
rotate	[ 0	locks=0 ]	(	[ rotate	0 ] 	)
reversepointorder	[ 8	locks=0 ]	(	[ reversepointorder	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transform_shape.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rotate_hole.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rotate_hole.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 13.497 -31.151
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_hole_shape 2 1 "input1"
}
inputs
{
0 	switch_hole_shape 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rotate_hole.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "rotate"
        label   "Rotate"
        type    float
        default { "0" }
        range   { 0 360 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "reversepointorder"
        label   "Reverse Point Order"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rotate_hole.chn"
Content-Type: text/plain

{
    channel rotate {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../holerotate\") }
    }
    channel reversepointorder {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../reversepointorder\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rotate_hole.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"// Declaration of Variables
float rotate = chf(\"rotate\");
int reverse_point_order = chi(\"reversepointorder\");
matrix3 m = ident();
vector axis = set(0, 1, 0);

if (reverse_point_order == 1) {
    axis *= -1;
}

rotate(m, radians(rotate), axis); 
@P *= m;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
rotate	[ 0	locks=0 ]	(	[ rotate	0 ] 	)
reversepointorder	[ 0	locks=0 ]	(	[ reversepointorder	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rotate_hole.netbox"
Content-Type: text/plain

__netbox3

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rotate_hole.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_groups.init"
Content-Type: text/plain

type = grouprename
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_groups.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -41.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	grouppromote1 1 1 "input1"
}
inputs
{
0 	grouppromote1 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.145 0.667 0.557 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_groups.chn"
Content-Type: text/plain

{
    channel enable1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../outcornerspoints\") }
    }
    channel enable2 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../outconcavecornerspoints\") }
    }
    channel enable3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../outconvexcornerspoints\") }
    }
    channel enable4 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../outflatedges\") }
    }
    channel enable5 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../outcornersedges\") }
    }
    channel enable6 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../outconcavecornersedges\") }
    }
    channel enable7 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../outconvexcornersedges\") }
    }
    channel enable8 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../outholepoints\") }
    }
    channel enable9 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../outholeedges\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_groups.parm"
Content-Type: text/plain

{
version 0.8
renames	[ 0	locks=0 ]	(	9	)
enable1	[ 8	locks=0 ]	(	[ enable1	1 ] 	)
grouptype1	[ 0	locks=0 ]	(	"any"	)
group1	[ 0	locks=0 ]	(	_ssh_point_corners	)
newname1	[ 0	locks=0 ]	(	`chs(\"../cornerspoints\")`	)
enable2	[ 8	locks=0 ]	(	[ enable2	1 ] 	)
grouptype2	[ 0	locks=0 ]	(	"any"	)
group2	[ 0	locks=0 ]	(	_ssh_point_corners_concave	)
newname2	[ 0	locks=0 ]	(	`chs(\"../concavecornerspoints\")`	)
enable3	[ 8	locks=0 ]	(	[ enable3	1 ] 	)
grouptype3	[ 0	locks=0 ]	(	"any"	)
group3	[ 0	locks=0 ]	(	_ssh_point_corners_convex	)
newname3	[ 0	locks=0 ]	(	`chs(\"../convexcornerspoints\")`	)
enable4	[ 8	locks=0 ]	(	[ enable4	1 ] 	)
grouptype4	[ 0	locks=0 ]	(	"any"	)
group4	[ 0	locks=0 ]	(	_ssh_flatedges	)
newname4	[ 0	locks=0 ]	(	`chs(\"../flatedges\")`	)
enable5	[ 8	locks=0 ]	(	[ enable5	1 ] 	)
grouptype5	[ 0	locks=0 ]	(	"any"	)
group5	[ 0	locks=0 ]	(	_ssh_roundedges	)
newname5	[ 0	locks=0 ]	(	`chs(\"../cornersedges\")`	)
enable6	[ 8	locks=0 ]	(	[ enable6	1 ] 	)
grouptype6	[ 0	locks=0 ]	(	"any"	)
group6	[ 0	locks=0 ]	(	_ssh_roundedges_concave	)
newname6	[ 0	locks=0 ]	(	`chs(\"../concavecornersedges\")`	)
enable7	[ 8	locks=0 ]	(	[ enable7	1 ] 	)
grouptype7	[ 0	locks=0 ]	(	"any"	)
group7	[ 0	locks=0 ]	(	_ssh_roundedges_convex	)
newname7	[ 0	locks=0 ]	(	`chs(\"../convexcornersedges\")`	)
enable8	[ 8	locks=0	autoscope=0	autosel=4294967295 ]	(	[ enable8	1 ] 	)
grouptype8	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	"any"	)
group8	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	_ssh_hole_points	)
newname8	[ 0	locks=0	autoscope=0	autosel=4294967295 ]	(	`chs(\"../holepoints\")`	)
enable9	[ 8	locks=0 ]	(	[ enable9	1 ] 	)
grouptype9	[ 0	locks=0 ]	(	"any"	)
group9	[ 0	locks=0 ]	(	_ssh_hole_edges	)
newname9	[ 0	locks=0 ]	(	`chs(\"../holeedges\")`	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_groups.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_hole_shape.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_hole_shape.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 13.5 -30.1502
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	add_fill_hole 1 1 "input1"
1 	group_hole_points 1 1 "input2"
}
inputs
{
0 	add_fill_hole 0 1
1 	group_hole_points 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_hole_shape.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../holeshape\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_hole_shape.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_hole_shape.netbox"
Content-Type: text/plain

__netbox3

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_hole_shape.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transfer_groups.init"
Content-Type: text/plain

type = grouptransfer
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transfer_groups.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -23.15
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	round_convex_corners 1 1 "input1"
1 	switch_shape_type 4 1 "input2"
}
inputs
{
0 	round_convex_corners 0 1
1 	switch_shape_type 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.145 0.667 0.557 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transfer_groups.parm"
Content-Type: text/plain

{
version 0.8
primitives	[ 0	locks=0 ]	(	"off"	)
primgroups	[ 0	locks=0 ]	(	""	)
primnameprefix	[ 0	locks=0 ]	(	""	)
points	[ 0	locks=0 ]	(	"on"	)
pointgroups	[ 0	locks=0 ]	(	"_ssh_point_corners _ssh_point_corners_concave _ssh_point_corners_convex"	)
pointnameprefix	[ 0	locks=0 ]	(	""	)
edges	[ 0	locks=0 ]	(	"off"	)
edgegroups	[ 0	locks=0 ]	(	""	)
edgenameprefix	[ 0	locks=0 ]	(	""	)
groupnameconflict	[ 0	locks=0 ]	(	overwrite	)
threshold	[ 0	locks=0 ]	(	"on"	)
thresholddist	[ 0	locks=0 ]	(	10	)
keepifempty	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transfer_groups.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/grouppromote1.init"
Content-Type: text/plain

type = grouppromote
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/grouppromote1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.5 -40.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight on unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	add_normals 0 1 "input1"
}
inputs
{
0 	add_normals 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.145 0.667 0.557 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/grouppromote1.parm"
Content-Type: text/plain

{
version 0.8
promotions	[ 0	locks=0 ]	(	1	)
enable1	[ 0	locks=0 ]	(	"on"	)
fromtype1	[ 0	locks=0 ]	(	"auto"	)
totype1	[ 0	locks=0 ]	(	"edges"	)
group1	[ 0	locks=0 ]	(	_ssh_hole_points	)
newname1	[ 0	locks=0 ]	(	_ssh_hole_edges	)
preserve1	[ 0	locks=0 ]	(	"on"	)
onlyboundary1	[ 0	locks=0 ]	(	"on"	)
includeunshared1	[ 0	locks=0 ]	(	"on"	)
useconnectivityattrib1	[ 0	locks=0 ]	(	"off"	)
connectivityattrib1	[ 0	locks=0 ]	(	uv	)
primsbyattribbndpts1	[ 0	locks=0 ]	(	"off"	)
onlyfull1	[ 0	locks=0 ]	(	"off"	)
removedegen1	[ 0	locks=0 ]	(	"off"	)
toattrib1	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/grouppromote1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_hole_points.init"
Content-Type: text/plain

type = groupcreate
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_hole_points.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 15.5 -29.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight on unload on savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	cut_hole_object 0 1 "input1"
}
inputs
{
0 	cut_hole_object 0 1
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.145 0.667 0.557 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_hole_points.parm"
Content-Type: text/plain

{
version 0.8
groupname	[ 0	locks=0 ]	(	_ssh_hole_points	)
grouptype	[ 0	locks=0 ]	(	"point"	)
mergeop	[ 0	locks=0 ]	(	"replace"	)
folder0	[ 0	locks=0 ]	(	0	)
groupbase	[ 0	locks=0 ]	(	"on"	)
basegroup	[ 0	locks=0 ]	(	""	)
ordered	[ 0	locks=0 ]	(	"off"	)
geotype	[ 0	locks=0 ]	(	"all"	)
switcher3	[ 0	locks=0 ]	(	0	)
groupbounding	[ 0	locks=0 ]	(	"off"	)
boundtype	[ 0	locks=0 ]	(	"usebbox"	)
size	[ 0	locks=0 ]	(	1	1	1	)
t	[ 0	locks=0 ]	(	0	0	0	)
initbounds	[ 0	locks=0 ]	(	0	)
includenotwhollycontained	[ 0	locks=0 ]	(	"off"	)
iso	[ 0	locks=0 ]	(	0	)
invertvolume	[ 0	locks=0 ]	(	"off"	)
switcher4	[ 0	locks=0 ]	(	0	)
groupnormal	[ 0	locks=0 ]	(	"off"	)
camerapath	[ 0	locks=0 ]	(	""	)
nonplanar	[ 0	locks=0 ]	(	"off"	)
nonplanartol	[ 0	locks=0 ]	(	0.001	)
dir	[ 0	locks=0 ]	(	0	0	1	)
angle	[ 0	locks=0 ]	(	180	)
switcher5	[ 0	locks=0 ]	(	0	)
groupedges	[ 0	locks=0 ]	(	"off"	)
dominedgeangle	[ 0	locks=0 ]	(	"off"	)
minedgeangle	[ 0	locks=0 ]	(	20	)
domaxedgeangle	[ 0	locks=0 ]	(	"off"	)
maxedgeangle	[ 0	locks=0 ]	(	20	)
edgeanglebetweenedges	[ 0	locks=0 ]	(	"off"	)
dominedgelen	[ 0	locks=0 ]	(	"off"	)
minedgelen	[ 0	locks=0 ]	(	0	)
domaxedgelen	[ 0	locks=0 ]	(	"off"	)
maxedgelen	[ 0	locks=0 ]	(	0	)
dodepth	[ 0	locks=0 ]	(	"off"	)
edgestep	[ 0	locks=0 ]	(	0	)
edgeptgrp	[ 0	locks=0 ]	(	0	)
unshared	[ 0	locks=0 ]	(	"off"	)
boundarygroups	[ 0	locks=0 ]	(	"off"	)
switcher6	[ 0	locks=0 ]	(	0	)
grouprandom	[ 0	locks=0 ]	(	"off"	)
globalseed	[ 0	locks=0 ]	(	1	)
useseedattrib	[ 0	locks=0 ]	(	"off"	)
seedattrib	[ 0	locks=0 ]	(	id	)
percent	[ 0	locks=0 ]	(	50	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_hole_points.netbox"
Content-Type: text/plain

__netbox3

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_hole_points.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/remove_fill.init"
Content-Type: text/plain

type = convertline
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/remove_fill.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.5 -36.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(__dot1) "" 1 "input1"
}
inputs
{
0 	(__dot1) 0 1
}
stat
{
  create -1
  modify -1
  author sirius@athena.local
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/remove_fill.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
sepparm2	[ 0	locks=0 ]	(	)
connectpath	[ 0	locks=0 ]	(	"on"	)
closeloops	[ 0	locks=0 ]	(	"off"	)
remove	[ 0	locks=0 ]	(	"off"	)
sepparm	[ 0	locks=0 ]	(	)
computelength	[ 0	locks=0 ]	(	"on"	)
lengthname	[ 0	locks=0 ]	(	restlength	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/remove_fill.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__dot1.networkdotinit"
Content-Type: text/plain

{
	"version":1,
	"posx":1.99999999999999956,
	"posy":-30,
	"pinned":false,
	"color":"FROMOUTPUT",
	"input":"sort_point_numbers 0 1"
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__dot2.networkdotinit"
Content-Type: text/plain

{
	"version":1,
	"posx":6,
	"posy":-30,
	"pinned":false,
	"color":"FROMOUTPUT",
	"input":"sort_point_numbers 0 1"
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

43
output0
switch_shape_type
switch_cut_hole
switch_fill_shape
group_flat_edges
switch_add_uvs
add_fill_shape
ngon
star
double_star
switch_star_type
separate_corners_groups
round_corners
round_concave_corners
round_convex_corners
construct_shape
point_groups
points_generation_shape
square_star
square_star_bevel
move_square_star_bevels
switch_square_star
generate_hole
points_generation_hole
add_fill_hole
side_segments
switch_side_segments
add_normals
delete_groups
delete_attributes
merge_shapes
cut_hole
add_uvs
sort_point_numbers
cut_hole_object
transform_shape
rotate_hole
rename_groups
switch_hole_shape
transfer_groups
grouppromote1
group_hole_points
remove_fill

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
