# Dialog script for labs::volume_texture automatically generated

{
    name	labs::volume_texture
    script	gamedev::rop_volume_texture
    label	"Labs ROP Volume Texture"

    help {
	""
    }

    inputlabel	1	"Input Volume"
    inputlabel	2	"Sub-Network Input #2"
    inputlabel	3	"Sub-Network Input #3"
    inputlabel	4	"Sub-Network Input #4"

    parm {
        name    "render"
        label   "Render"
        type    button
        default { "0" }
    }
    parm {
        name    "trange"
        label   "Valid Frame Range"
        type    ordinal
        default { "off" }
        menu {
            "off"       "Render Current Frame"
            "normal"    "Render Frame Range"
            "on"        "Render Frame Range Only (Strict)"
        }
        parmtag { "autoscope" "0000000000000000" }
    }
    parm {
        name    "f"
        label   "Start/End/Inc"
        type    float
        size    3
        default { [ "$RFSTART" hscript-expr ] [ "$RFEND" hscript-expr ] "1" }
        range   { 0 10 }
        parmtag { "autoscope" "0000000000000000" }
    }
    groupsimple {
        name    "folder2"
        label   "Sampling"
        grouptag { "group_type" "simple" }

        parm {
            name    "up_axis"
            label   "Up Axis"
            type    ordinal
            default { "1" }
            menu {
                "0" "Y"
                "1" "Z"
            }
        }
        parm {
            name    "bFrozenFrame"
            label   "Frame Frozen"
            type    toggle
            invisible
            default { "1" }
        }
        parm {
            name    "frame"
            label   "Frame"
            type    integer
            invisible
            default { [ "$RFSTART" hscript-expr ] }
            disablewhen "{ bFrozenFrame == 0 }"
            range   { 1 240 }
            parmtag { "autoscope" "0000000000000000" }
        }
    }

    groupsimple {
        name    "folder0"
        label   "Slicing"
        grouptag { "group_type" "simple" }

        parm {
            name    "slices"
            label   "Slices (res^3)"
            type    integer
            default { "64" }
            range   { 0 10 }
        }
        parm {
            name    "images_per_line"
            label   "Images Per Line"
            type    integer
            default { "8" }
            range   { 0 10 }
        }
        parm {
            name    "expectedres"
            label   "Expected Resolution"
            type    label
            default { "`int(ch('slices')*ch('images_per_line'))` x `int(ch('slices')*ch('slices')/ch('images_per_line'))`" }
        }
        parm {
            name    "vm_uvunwrapres"
            label   "Resolution"
            type    intvector2
            joinnext
            size    2
            default { "512" "512" }
            range   { -1 1 }
            parmtag { "autoscope" "0000000000000000" }
        }
        parm {
            name    "uvresmenu"
            label   "uvresmenu"
            type    ordinal
            default { [ "256 256" hscript-expr ] }
            menumini {
                "1024 32 32 32"     "1024 x 32"
                "512 512 64 8"      "512 x 512"
                "1000 1000 100 10"  "1000 x 1000"
                "2048 1024 128 16"  "2048 x 1024"
                "2744 2744 196 14"  "2744 x 2744"
                "4096 4096 256 16"  "4096 x 4096"
                "5832 5832 324 18"  "5832 x 5832"
            }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback" "opparm . vm_uvunwrapres (`arg(\"$script_value\", 0)` `arg(\"$script_value\", 1)`; opparm . images_per_line `arg(\"$script_value\", 3)`; opparm . slices `arg(\"$script_value\", 2)`" }
        }
    }

    groupsimple {
        name    "folder1"
        label   "Output"
        grouptag { "group_type" "simple" }

        parm {
            name    "preview"
            label   "Preview"
            type    toggle
            default { "0" }
        }
        parm {
            name    "bInvertValues"
            label   "Invert Values"
            type    toggle
            default { "0" }
        }
        parm {
            name    "output_picture"
            label   "Output Picture"
            type    image
            default { "$HIP/render/${OS}.$F4.exr" }
        }
    }

}
