# Dialog script for labs::fast_remesh::1.1 automatically generated

{
    name	labs::fast_remesh::1.1
    script	labs::fast_remesh::1.0
    label	"Labs Fast Remesh"

    help {
	""
    }

    inputlabel	1	"Input Geo to Divide"
    inputlabel	2	"Sub-Network Input #2"
    inputlabel	3	"Sub-Network Input #3"
    inputlabel	4	"Sub-Network Input #4"
    outputlabel	1	"Remeshed Output Geo"

    groupsimple {
        name    "fd_parallelprocess2"
        label   "Segmentation for Parallel Processing"

        parm {
            name    "connectivitytoggle"
            label   "connectivitytoggle"
            type    toggle
            nolabel
            joinnext
            default { "1" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "connectmenu"
            label   "Connectivity"
            type    ordinal
            default { "2" }
            disablewhen "{ connectivitytoggle == 0 }"
            menu usetokenvalue {
                "1" "3D"
                "2" "3D and UV"
            }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "inputatt"
            label   "Input Attribute"
            type    toggle
            nolabel
            joinnext
            default { "0" }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "export_disable" "1" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "attname"
            label   "Input Attribute"
            type    string
            default { "id" }
            disablewhen "{ inputatt == 0 }"
            menureplace {
                [ "r = []" ]
                [ "node = kwargs['node']" ]
                [ "inputs = node.inputs()" ]
                [ "" ]
                [ "if inputs and inputs[0]:" ]
                [ "" ]
                [ "    geo = inputs[0].geometry()" ]
                [ "    " ]
                [ "    if geo:" ]
                [ "    " ]
                [ "        attrs = geo.primAttribs()" ]
                [ "       " ]
                [ "        for a in attrs:" ]
                [ "            if a.dataType() == hou.attribData.Int and not a.isArrayType() and a.size() == 1:" ]
                [ "                r.extend([a.name(), a.name()])" ]
                [ "                " ]
                [ "return r" ]
                language python
            }
            parmtag { "editor" "0" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "buckettoggle"
            label   "Bucket Toggle"
            type    toggle
            nolabel
            joinnext
            default { "0" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "targetbucket"
            label   "Target Bucket Size"
            type    integer
            default { "2048" }
            disablewhen "{ buckettoggle == 0 }"
            range   { 0 4096 }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "clusterseed"
            label   "Bucket Seed"
            type    float
            default { "1" }
            disablewhen "{ buckettoggle == 0 }"
            range   { 0 10 }
            parmtag { "script_callback_language" "python" }
        }
        groupcollapsible {
            name    "fd_refineclusters2"
            label   "Refine Bucket Boundary"
            hidewhen "{ buckettoggle == 0 }"

            parm {
                name    "enable"
                label   "Enable"
                type    toggle
                default { "0" }
                range   { 0! 10 }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "depth"
                label   "Search Depth"
                type    ordinal
                default { "1" }
                disablewhen "{ enable == 0 }"
                menu {
                    "0" "Immediate Neighbours"
                    "1" "Extended Neighbours"
                }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "extweight"
                label   "Extended Influence"
                type    float
                default { "10" }
                disablewhen "{ enable == 0 }"
                hidewhen "{ depth == 0 }"
                range   { 0! 10 }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "iterations"
                label   "Iterations"
                type    integer
                default { "10" }
                disablewhen "{ enable == 0 }"
                range   { 0! 10 }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
        }

        parm {
            name    "sepparm4"
            label   "Spacer"
            type    separator
            default { "" }
            parmtag { "sidefx::layout_height" "small" }
            parmtag { "sidefx::look" "blank" }
        }
        parm {
            name    "visualizepieces"
            label   "Visualize Segments"
            type    toggle
            default { "0" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "sepparm3"
            label   "Spacer"
            type    separator
            default { "" }
            parmtag { "sidefx::layout_height" "small" }
            parmtag { "sidefx::look" "blank" }
        }
    }

    groupsimple {
        name    "fd_remesh2"
        label   "Remeshing"

        parm {
            name    "remeshtarget"
            label   "Remesh Target Type"
            type    integer
            default { "0" }
            menu {
                "0" "Target Edge Length"
                "1" "Target Output Polycount"
                "2" "Ratio of Average Input Edge Length"
                "3" "Ratio of Input Polycount"
                "5" "Adaptive Remeshing"
            }
            range   { 0 10 }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "targetedgetemp"
            label   "Target Edge Length"
            type    float
            default { "0.3" }
            hidewhen "{ remeshtarget != 0 }"
            range   { 5e-05! 0.5 }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "edgemult"
            label   "Edge Length Ratio"
            type    float
            default { "1" }
            hidewhen "{ remeshtarget != 2 }"
            range   { 0 10 }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "targetpolycount"
            label   "Target Polycount"
            type    integer
            default { "50000" }
            hidewhen "{ remeshtarget != 1 }"
            range   { 0! 2e+06 }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "polymult"
            label   "Polycount Ratio"
            type    float
            default { "1" }
            hidewhen "{ remeshtarget != 3 }"
            range   { 0 10 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "export_disable" "1" }
            parmtag { "script_callback_language" "python" }
        }
        groupsimple {
            name    "fd_adaptive2"
            label   "Adaptive"
            hidewhen "{ remeshtarget != 4 }"
            grouptag { "sidefx::look" "blank" }

            parm {
                name    "targetlengthmin"
                label   "Target Edge Length Min"
                type    float
                default { "0.1" }
                range   { 0.001! 0.5 }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "targetlengthmax"
                label   "Target Edge Length Max"
                type    float
                default { "1" }
                range   { 0.001! 0.5 }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "gradation"
                label   "Gradation"
                type    float
                default { "1" }
                range   { 0! 1! }
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "script_callback_language" "python" }
            }
        }

        parm {
            name    "sepparm"
            label   "Separator"
            type    separator
            default { "" }
        }
        parm {
            name    "remeshiterations"
            label   "Remesh Iterations"
            type    integer
            default { "1" }
            range   { 0! 10 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "smoothing"
            label   "Smoothing"
            type    float
            default { "0" }
            range   { 0! 1 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
    }

    groupsimple {
        name    "fd_post2"
        label   "Post-processing"

        parm {
            name    "remeshseams"
            label   "Remesh Seams"
            type    toggle
            default { "1" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "fusepieces"
            label   "Fuse Remaining Seams"
            type    toggle
            default { "1" }
            disablewhen "{ remeshseams == 1 remeshtargettemp == 2 }"
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "recomputenormals"
            label   "Recompute Normals"
            type    toggle
            default { "1" }
            parmtag { "script_callback_language" "python" }
        }
    }

}
