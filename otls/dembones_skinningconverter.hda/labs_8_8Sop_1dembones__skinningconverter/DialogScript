# Dialog script for labs::dembones_skinningconverter automatically generated

{
    name	labs::dembones_skinningconverter
    script	labs::dembones_skinningconverter
    label	"Labs Dem Bones Skinning Converter"

    help {
	""
    }

    inputlabel	1	"Animated Geometry"
    inputlabel	2	"Sub-Network Input #2"
    inputlabel	3	"Sub-Network Input #3"
    inputlabel	4	"Sub-Network Input #4"

    parm {
        name    "execute"
        label   "Convert and Export"
        type    button
        default { "0" }
        parmtag { "script_callback" "kwargs['node'].hm().Convert(kwargs)" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sExportFile"
        label   "Export File"
        type    file
        default { "$HIP/out/${HIPNAME}_Converted.fbx" }
        parmtag { "script_callback_language" "python" }
    }
    groupsimple {
        name    "fd_conversionsettings"
        label   "Conversion Settings"

        parm {
            name    "f"
            label   "Frame Range"
            type    integer
            size    2
            default { [ "$RFSTART" hscript-expr ] [ "$RFEND" hscript-expr ] }
            range   { 0 10 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "iBindposeFrame"
            label   "Bind Pose Frame"
            type    integer
            default { "$RFSTART" }
            range   { 0 200 }
            parmtag { "script_callback_language" "python" }
        }
        groupsimple {
            name    "fd_bones"
            label   "Bones"

            parm {
                name    "nBones"
                label   "Max Number of Bones"
                type    integer
                default { "30" }
                range   { 1 200 }
                parmtag { "script_callback_language" "python" }
            }
        }

        groupsimple {
            name    "fd_solveiterations"
            label   "Solve Iterations"

            parm {
                name    "nIters"
                label   "Global Iterations"
                type    integer
                default { "50" }
                range   { 10 100 }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "tolerance"
                label   "Error Tolerance"
                type    float
                default { "0.001" }
                range   { 0.0001 0.001 }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "patience"
                label   "Patience"
                type    integer
                default { "5" }
                range   { 3 20 }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "nInitIters"
                label   "Splitting Iterations"
                type    integer
                default { "10" }
                range   { 5 20 }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "nTransIters"
                label   "Transform Iterations"
                type    integer
                default { "5" }
                range   { 3 10 }
                parmtag { "script_callback_language" "python" }
            }
        }

        groupsimple {
            name    "fd_softconstraints"
            label   "Soft Constraints"

            parm {
                name    "transAffine"
                label   "Translations Affinity"
                type    float
                default { "10" }
                range   { 0 10000 }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "transAffineNorm"
                label   "P-Norm"
                type    float
                default { "4" }
                range   { 1 16 }
                parmtag { "script_callback_language" "python" }
            }
        }

        groupsimple {
            name    "fd_weights"
            label   "Weights"

            parm {
                name    "nWeightsIters"
                label   "Weights Iterations"
                type    integer
                default { "3" }
                range   { 1 5 }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "weightsSmooth"
                label   "Smoothness"
                type    float
                default { "0.0001" }
                range   { 0 1 }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "weightsSmoothStep"
                label   "Step Size"
                type    float
                default { "1" }
                range   { 0 1000 }
                parmtag { "script_callback_language" "python" }
            }
            parm {
                name    "nnz"
                label   "Min Non-Zero Weights"
                type    integer
                default { "8" }
                range   { 0 10 }
                parmtag { "script_callback_language" "python" }
            }
        }

    }

    groupcollapsible {
        name    "fd_advanced"
        label   "Advanced"

        parm {
            name    "createroot"
            label   "Create Root"
            type    toggle
            default { "1" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "bHideShell"
            label   "Hide Shell"
            type    toggle
            default { "1" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "sAnimatedCache"
            label   "Animated Cache"
            type    file
            default { "$TEMP/${HIPNAME}_${OS}.abc" }
            menureplace {
                [ "opmenu -l -a rop_alembic1 filename" ]
            }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_pattern" "*.abc" }
        }
        parm {
            name    "sBindPoseFBX"
            label   "Bindpose FBX"
            type    file
            default { "$TEMP/${HIPNAME}_${OS}.fbx" }
            menureplace {
                [ "opmenu -l -a rop_alembic1 filename" ]
            }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "filechooser_pattern" "*.abc" }
        }
        parm {
            name    "executablecache"
            label   "DemBones Folder"
            type    directory
            default { "$HOUDINI_USER_PREF_DIR/SideFXLabs/" }
            parmtag { "script_callback_language" "python" }
        }
    }

}
