MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Lop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = labs::karma::2.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

comment ""
position -1.30618 2.85
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on debug off
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.inp"
Content-Type: text/plain

2
0 -0.11139288135993107 9.883299995213747 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"
1 3.5000000111758709 8.883299995213747 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/karmarenderproperties.init"
Content-Type: text/plain

type = karmarenderproperties
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/karmarenderproperties.def"
Content-Type: text/plain

comment ""
position 1.5 6.85
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on debug off
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	Input_Stage 1 1 "input1"
2 	(1) "" 1 "input2"
}
inputs
{
0 	Input_Stage 0 1
1 	(1) 0 1
}
stat
{
  create -1
  modify -1
  author nobody@nowhere
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/karmarenderproperties.multiparm"
Content-Type: text/plain

22
ocio_enable# ../ocio_enable#
ocio_planes# ../ocio_planes#
ocio_outputspace# ../ocio_outputspace#
ocio_inputspace# ../ocio_inputspace#
ocio_looks# ../ocio_looks#
colorlimit_enable# ../colorlimit_enable#
colorlimit_planes# ../colorlimit_planes#
colorlimit_limit# ../colorlimit_limit#
enable# ../enable#
format# ../format#
multisampled# ../multisampled#
clearvalue# ../clearvalue#
dataType# ../dataType#
sourceName# ../sourceName#
sourceType# ../sourceType#
cryptomatte# ../cryptomatte#
cryptomatterank# ../cryptomatterank#
cryptomattesidecar# ../cryptomattesidecar#
name# ../name#
pixelfilter_# ../pixelfilter_#
filter_# ../filter#
filter# ../filter#

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/karmarenderproperties.chn"
Content-Type: text/plain

{
    channel f1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $FSTART }
    }
    channel f2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $FEND }
    }
    channel oracle_minsamples {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../oracle_minsamples\") }
    }
    channel camera {
      lefttype = extend
      righttype = extend
      defaultString = \"/camera1\"
      flags = 0
      segment { length = 0 expr = chs(\"../camera\") }
    }
    channel resolutionMenu {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../resolutionMenu\") }
    }
    channel aspectRatioConformPolicy {
      lefttype = extend
      righttype = extend
      defaultString = \"expandAperture\"
      flags = 0
      segment { length = 0 expr = chs(\"../aspectRatioConformPolicy\") }
    }
    channel dataWindowNDC1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../dataWindowNDC1\") }
    }
    channel dataWindowNDC2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../dataWindowNDC2\") }
    }
    channel dataWindowNDC3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../dataWindowNDC3\") }
    }
    channel dataWindowNDC4 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../dataWindowNDC4\") }
    }
    channel ocio {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ocio\") }
    }
    channel colorlimits {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../colorlimits\") }
    }
    channel importsecondaryinputvars {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../importsecondaryinputvars\") }
    }
    channel exportcomponents {
      lefttype = extend
      righttype = extend
      defaultString = "\"diffuse reflect coat refract volume sss\""
      flags = 0
      segment { length = 0 expr = chs(\"../exportcomponents\") }
    }
    channel beauty {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../beauty\") }
    }
    channel beautyunshadowed {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../beautyunshadowed\") }
    }
    channel indirectdiffuse {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../indirectdiffuse\") }
    }
    channel indirectglossyreflection {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../indirectglossyreflection\") }
    }
    channel glossytransmission {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../glossytransmission\") }
    }
    channel visiblelights {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../visiblelights\") }
    }
    channel indirectemission {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../indirectemission\") }
    }
    channel indirectvolume {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../indirectvolume\") }
    }
    channel coat {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../coat\") }
    }
    channel sss {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../sss\") }
    }
    channel P {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../P\") }
    }
    channel D {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../D\") }
    }
    channel time {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../time\") }
    }
    channel near {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../near\") }
    }
    channel far {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../far\") }
    }
    channel mask {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mask\") }
    }
    channel contrib {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../contrib\") }
    }
    channel hitP {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../hitP\") }
    }
    channel hitPz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../hitPz\") }
    }
    channel hitstack {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../hitstack\") }
    }
    channel element {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../element\") }
    }
    channel primid {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../primid\") }
    }
    channel hituv {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../hituv\") }
    }
    channel hitdist {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../hitdist\") }
    }
    channel dPdz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../dPdz\") }
    }
    channel hitN {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../hitN\") }
    }
    channel hitNg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../hitNg\") }
    }
    channel flags {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../flags\") }
    }
    channel extrarendervars {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../extrarendervars\") }
    }
    channel force_headlight {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../force_headlight\") }
    }
    channel samplesperpixel {
      lefttype = extend
      righttype = extend
      default = 128
      flags = 0
      segment { length = 0 value = 128 128 expr = ch(\"../samplesperpixel\") }
    }
    channel light_sampling_mode {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../light_sampling_mode\") }
    }
    channel light_sampling_quality {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../light_sampling_quality\") }
    }
    channel head_ao_samples {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../head_ao_samples\") }
    }
    channel head_ao_distance {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../head_ao_distance\") }
    }
    channel randomseed {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../randomseed\") }
    }
    channel oracle {
      lefttype = extend
      righttype = extend
      defaultString = \"variance\"
      flags = 0
      segment { length = 0 expr = chs(\"../oracle\") }
    }
    channel oracle_plane {
      lefttype = extend
      righttype = extend
      defaultString = \"C\"
      flags = 0
      segment { length = 0 expr = chs(\"../oracle_plane\") }
    }
    channel oracle_variance {
      lefttype = extend
      righttype = extend
      default = 0.050000000000000003
      flags = 0
      segment { length = 0 value = 0.050000000000000003 0.050000000000000003 expr = ch(\"../oracle_variance\") }
    }
    channel raybias {
      lefttype = extend
      righttype = extend
      default = 0.001
      flags = 0
      segment { length = 0 value = 0.001 0.001 expr = ch(\"../raybias\") }
    }
    channel usecacheratio {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../usecacheratio\") }
    }
    channel cacheratio {
      lefttype = extend
      righttype = extend
      default = 0.25
      flags = 0
      segment { length = 0 value = 0.25 0.25 expr = ch(\"../cacheratio\") }
    }
    channel cachesize {
      lefttype = extend
      righttype = extend
      default = 1000
      flags = 0
      segment { length = 0 value = 1000 1000 expr = ch(\"../cachesize\") }
    }
    channel offscreenquality {
      lefttype = extend
      righttype = extend
      default = 0.10000000000000001
      flags = 0
      segment { length = 0 value = 0.10000000000000001 0.10000000000000001 expr = ch(\"../offscreenquality\") }
    }
    channel usedicingcamera {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../usedicingcamera\") }
    }
    channel dicingcamera {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../dicingcamera\") }
    }
    channel abortmissingtexture {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../abortmissingtexture\") }
    }
    channel screendoorlimit {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../screendoorlimit\") }
    }
    channel colorlimit {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../colorlimit\") }
    }
    channel diffusecomponents {
      lefttype = extend
      righttype = extend
      defaultString = \"diffuse\"
      flags = 0
      segment { length = 0 expr = chs(\"../diffusecomponents\") }
    }
    channel refractcomponents {
      lefttype = extend
      righttype = extend
      defaultString = \"refract\"
      flags = 0
      segment { length = 0 expr = chs(\"../refractcomponents\") }
    }
    channel volumecomponents {
      lefttype = extend
      righttype = extend
      defaultString = \"volume\"
      flags = 0
      segment { length = 0 expr = chs(\"../volumecomponents\") }
    }
    channel ssscomponents {
      lefttype = extend
      righttype = extend
      defaultString = \"sss\"
      flags = 0
      segment { length = 0 expr = chs(\"../ssscomponents\") }
    }
    channel head_depthcue_colorr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../head_depthcue_colorr\") }
    }
    channel head_depthcue_colorg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../head_depthcue_colorg\") }
    }
    channel head_depthcue_colorb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../head_depthcue_colorb\") }
    }
    channel head_depthcue_alpha {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../head_depthcue_alpha\") }
    }
    channel head_depthcue_z1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../head_depthcue_z1\") }
    }
    channel head_depthcue_z2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../head_depthcue_z2\") }
    }
    channel resolutionx {
      lefttype = extend
      righttype = extend
      default = 720
      flags = 0
      segment { length = 0 value = 720 720 expr = ch(\"../resolutionx\") }
    }
    channel resolutiony {
      lefttype = extend
      righttype = extend
      default = 576
      flags = 0
      segment { length = 0 value = 576 576 expr = ch(\"../resolutiony\") }
    }
    channel pixelAspectRatio {
      lefttype = extend
      righttype = extend
      default = 1.0669999999999999
      flags = 0
      segment { length = 0 value = 1.0669999999999999 1.0669999999999999 expr = ch(\"../pixelAspectRatio\") }
    }
    channel denoiser {
      lefttype = extend
      righttype = extend
      defaultString = \"off\"
      flags = 0
      segment { length = 0 expr = ifs(ch(\"../enable_denoiser\"),chs(\"../denoiser\"),\"off\") }
    }
    channel denoise_usealbedo {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../denoise_usealbedo\") }
    }
    channel denoise_useN {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../denoise_useN\") }
    }
    channel denoise_useGl {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../denoise_useGl\") }
    }
    channel enabledof {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../enabledof\") }
    }
    channel image_artist {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../image_artist\") }
    }
    channel image_comment {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../image_comment\") }
    }
    channel image_hostname {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../image_hostname\") }
    }
    channel image_exr_compression {
      lefttype = extend
      righttype = extend
      defaultString = \"zips\"
      flags = 0
      segment { length = 0 expr = chs(\"../image_exr_compression\") }
    }
    channel image_dwa_compression {
      lefttype = extend
      righttype = extend
      default = 85
      flags = 0
      segment { length = 0 value = 85 85 expr = ch(\"../image_dwa_compression\") }
    }
    channel xformsamples {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../xformsamples\") }
    }
    channel geosamples {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../geosamples\") }
    }
    channel diffuselimit {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../diffuselimit\") }
    }
    channel reflectionlimit {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../reflectionlimit\") }
    }
    channel refractionlimit {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../refractionlimit\") }
    }
    channel volumelimit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../volumelimit\") }
    }
    channel ssslimit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ssslimit\") }
    }
    channel diffusesamples {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../diffusesamples\") }
    }
    channel reflectionsamples {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../reflectionsamples\") }
    }
    channel refractionsamples {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../refractionsamples\") }
    }
    channel volumesamples {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../volumesamples\") }
    }
    channel ssssamples {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../ssssamples\") }
    }
    channel volumesteprate {
      lefttype = extend
      righttype = extend
      default = 0.25
      flags = 0
      segment { length = 0 value = 0.25 0.25 expr = ch(\"../volumesteprate\") }
    }
    channel bucketsize {
      lefttype = extend
      righttype = extend
      default = 64
      flags = 0
      segment { length = 0 value = 64 64 expr = ch(\"../bucketsize\") }
    }
    channel point_style {
      lefttype = extend
      righttype = extend
      defaultString = "\"As spheres\""
      flags = 0
      segment { length = 0 expr = chs(\"../point_style\") }
    }
    channel curve_style {
      lefttype = extend
      righttype = extend
      defaultString = "\"Rounded curves\""
      flags = 0
      segment { length = 0 expr = chs(\"../curve_style\") }
    }
    channel convergence_mode {
      lefttype = extend
      righttype = extend
      defaultString = "\"Path Traced\""
      flags = 0
      segment { length = 0 expr = chs(\"../convergence_mode\") }
    }
    channel outputcheckpoint {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../outputcheckpoint\") }
    }
    channel productName {
      lefttype = extend
      righttype = extend
      defaultString = \"$HIP/render/$HIPNAME.$OS.$F4.checkpoint\"
      flags = 0
      segment { length = 0 expr = chs(\"../productName\") }
    }
    channel savefrequency {
      lefttype = extend
      righttype = extend
      default = 60
      flags = 0
      segment { length = 0 value = 60 60 expr = "ch(\"../savefrequency\") * 60" }
    }
    channel resume {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../resume\") }
    }
    channel dicingqualityscale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../dicingqualityscale\") }
    }
    channel russianroulette_cutoff {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../russianroulette_cutoff\") }
    }
    channel pixelfilter {
      lefttype = extend
      righttype = extend
      defaultString = \"box\"
      flags = 0
      segment { length = 0 expr = chs(\"../pixelfilter\") }
    }
    channel pixelfiltersize {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../pixelfiltersize\") }
    }
    channel varianceaa_minsamples {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../varianceaa_minsamples\") }
    }
    channel varianceaa_maxsamples {
      lefttype = extend
      righttype = extend
      default = 9
      flags = 0
      segment { length = 0 value = 9 9 expr = ch(\"../varianceaa_maxsamples\") }
    }
    channel varianceaa_thresh {
      lefttype = extend
      righttype = extend
      default = 0.01
      flags = 0
      segment { length = 0 value = 0.01 0.01 expr = ch(\"../varianceaa_thresh\") }
    }
    channel combineddiffuse {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../combineddiffuse\") }
    }
    channel directdiffuse {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../directdiffuse\") }
    }
    channel combineddiffuseunshadowed {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../combineddiffuseunshadowed\") }
    }
    channel directdiffuseunshadowed {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../directdiffuseunshadowed\") }
    }
    channel indirectdiffuseunshadowed {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../indirectdiffuseunshadowed\") }
    }
    channel combinedglossyreflection {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../combinedglossyreflection\") }
    }
    channel directglossyreflection {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../directglossyreflection\") }
    }
    channel combinedemission {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../combinedemission\") }
    }
    channel directemission {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../directemission\") }
    }
    channel combinedvolume {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../combinedvolume\") }
    }
    channel directvolume {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../directvolume\") }
    }
    channel denoise_aovs {
      lefttype = extend
      righttype = extend
      defaultString = \"C\"
      flags = 0
      segment { length = 0 expr = chs(\"../denoise_aovs\") }
    }
    channel oracle_ociomode {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../oracle_ociomode\") }
    }
    channel oracle_ociodisplay {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../oracle_ociodisplay\") }
    }
    channel oracle_ocioview {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../oracle_ocioview\") }
    }
    channel oracle_ociocolorspace {
      lefttype = extend
      righttype = extend
      defaultString = \"default\"
      flags = 0
      segment { length = 0 expr = chs(\"../oracle_ociocolorspace\") }
    }
    channel guiding_enable {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../guiding_enable\") }
    }
    channel guiding_samples {
      lefttype = extend
      righttype = extend
      default = 64
      flags = 0
      segment { length = 0 value = 64 64 expr = ch(\"../guiding_samples\") }
    }
    channel importsecondaryproducts {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../importsecondaryproducts\") }
    }
    channel bucketorder {
      lefttype = extend
      righttype = extend
      defaultString = \"Middle\"
      flags = 0
      segment { length = 0 expr = chs(\"../bucketorder\") }
    }
    channel imagemode {
      lefttype = extend
      righttype = extend
      defaultString = \"Progressive\"
      flags = 0
      segment { length = 0 expr = chs(\"../imagemode\") }
    }
    channel primpath {
      lefttype = extend
      righttype = extend
      defaultString = \"/Render/rendersettings\"
      flags = 0
      segment { length = 0 expr = chs(\"../primpath\") }
    }
    channel dcm {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../dcm\") }
    }
    channel dcmfilename {
      lefttype = extend
      righttype = extend
      defaultString = \"$HIP/render/$HIPNAME.$OS.dcm.$F4.exr\"
      flags = 0
      segment { length = 0 expr = chs(\"../dcmfilename\") }
    }
    channel dcmvars {
      lefttype = extend
      righttype = extend
      defaultString = \"/Render/Products/Vars/*\"
      flags = 0
      segment { length = 0 expr = chs(\"../dcmvars\") }
    }
    channel albedo {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../albedo\") }
    }
    channel engine {
      lefttype = extend
      righttype = extend
      defaultString = \"cpu\"
      flags = 0
      segment { length = 0 expr = chs(\"../engine\") }
    }
    channel causticsenable {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../causticsenable\") }
    }
    channel causticsroughnessclamp {
      lefttype = extend
      righttype = extend
      default = 0.20000000000000001
      flags = 0
      segment { length = 0 value = 0.20000000000000001 0.20000000000000001 expr = ch(\"../causticsroughnessclamp\") }
    }
    channel colorlimitindlinked {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = !ch(\"../colorlimitindlinked\") }
    }
    channel colorlimitindirect {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../colorlimitindirect\") }
    }
    channel lpeaovlimit {
      lefttype = extend
      righttype = extend
      default = 100
      flags = 0
      segment { length = 0 value = 100 100 expr = ch(\"../lpeaovlimit\") }
    }
    channel doomitlpes {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../doomitlpes\") }
    }
    channel omitlpes {
      lefttype = extend
      righttype = extend
      defaultString = \"Untagged_Lights\"
      flags = 0
      segment { length = 0 expr = chs(\"../omitlpes\") }
    }
    channel beautyunshadowedperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../beautyunshadowedperlpe\") }
    }
    channel combineddiffuseperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../combineddiffuseperlpe\") }
    }
    channel directdiffuseperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../directdiffuseperlpe\") }
    }
    channel indirectdiffuseperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../indirectdiffuseperlpe\") }
    }
    channel combineddiffuseunshadowedperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../combineddiffuseunshadowedperlpe\") }
    }
    channel directdiffuseunshadowedperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../directdiffuseunshadowedperlpe\") }
    }
    channel indirectdiffuseunshadowedperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../indirectdiffuseunshadowedperlpe\") }
    }
    channel combinedglossyreflectionperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../combinedglossyreflectionperlpe\") }
    }
    channel directglossyreflectionperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../directglossyreflectionperlpe\") }
    }
    channel indirectglossyreflectionperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../indirectglossyreflectionperlpe\") }
    }
    channel glossytransmissionperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../glossytransmissionperlpe\") }
    }
    channel visiblelightsperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../visiblelightsperlpe\") }
    }
    channel combinedvolumeperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../combinedvolumeperlpe\") }
    }
    channel directvolumeperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../directvolumeperlpe\") }
    }
    channel indirectvolumeperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../indirectvolumeperlpe\") }
    }
    channel constrainmaxrough {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../constrainmaxrough\") }
    }
    channel curve_basis {
      lefttype = extend
      righttype = extend
      defaultString = "\"Rounded curves\""
      flags = 0
      segment { length = 0 expr = chs(\"../curve_basis\") }
    }
    channel cull_backface {
      lefttype = extend
      righttype = extend
      defaultString = \"Off\"
      flags = 0
      segment { length = 0 expr = chs(\"../cull_backface\") }
    }
    channel volumevblurscale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../volumevblurscale\") }
    }
    channel progressivepasses {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../progressivepasses\") }
    }
    channel beautyperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../beautyperlpe\") }
    }
    channel coatperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../coatperlpe\") }
    }
    channel sssperlpe {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../sssperlpe\") }
    }
    channel autoheadlight {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../autoheadlight\") }
    }
    channel enablemblur {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = "ch(\"../mblur\") || ch(\"../dovblur\") || ch(\"../doinstance_vblur\")" }
    }
    channel mblur {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = if(ch(\"../mblur\"),1,2) }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/karmarenderproperties.parm"
Content-Type: text/plain

{
version 0.8
primpath	[ 0	locks=0 ]	(	[ primpath	/Render/rendersettings ] 	)
picture	[ 0	locks=0 ]	(	`chs(\"../picture\")`	)
camera	[ 0	locks=0 ]	(	[ camera	/cameras/camera1 ] 	)
resolution	[ 8	locks=0 ]	(	[ resolutionx	1280 ] 	[ resolutiony	720 ] 	)
resolutionMenu	[ 0	locks=0 ]	(	[ resolutionMenu	0 ] 	)
cachefileattributes	[ 0	locks=0 ]	(	"on"	)
f	[ 0	locks=0 ]	(	[ f1	0 ] 	[ f2	0 ] 	1	)
sepparm2	[ 0	locks=0 ]	(	)
engine	[ 0	locks=0 ]	(	[ engine	cpu ] 	)
force_headlight	[ 0	locks=0 ]	(	[ force_headlight	0 ] 	)
samplesperpixel	[ 0	locks=0 ]	(	[ samplesperpixel	9 ] 	)
sepparm9	[ 0	locks=0 ]	(	)
folder2_1_1	[ 0	locks=0 ]	(	0	0	0	0	0	)
head_ao_samples	[ 0	locks=0 ]	(	[ head_ao_samples	1 ] 	)
head_ao_distance	[ 0	locks=0 ]	(	[ head_ao_distance	1 ] 	)
head_addfog	[ 0	locks=0 ]	(	"on"	)
head_depthcue_z	[ 0	locks=0 ]	(	[ head_depthcue_z1	0 ] 	[ head_depthcue_z2	0 ] 	)
head_depthcue_color	[ 0	locks=0 ]	(	[ head_depthcue_colorr	0 ] 	[ head_depthcue_colorg	0 ] 	[ head_depthcue_colorb	0 ] 	)
head_depthcue_alpha	[ 0	locks=0 ]	(	[ head_depthcue_alpha	1 ] 	)
folder9	[ 0	locks=0 ]	(	2	2	2	2	)
__indirectsampling	[ 0	locks=0 ]	(	1	)
convergence_mode	[ 0	locks=0 ]	(	[ convergence_mode	Variance ] 	)
varianceaa_minsamples	[ 0	locks=0 ]	(	[ varianceaa_minsamples	1 ] 	)
varianceaa_maxsamples	[ 0	locks=0 ]	(	[ varianceaa_maxsamples	9 ] 	)
diffusesamples	[ 0	locks=0 ]	(	[ diffusesamples	4 ] 	)
reflectionsamples	[ 0	locks=0 ]	(	[ reflectionsamples	4 ] 	)
refractionsamples	[ 0	locks=0 ]	(	[ refractionsamples	4 ] 	)
volumesamples	[ 0	locks=0 ]	(	[ volumesamples	4 ] 	)
ssssamples	[ 0	locks=0 ]	(	[ ssssamples	4 ] 	)
lightsquality	[ 0	locks=0 ]	(	"Lights Quality"	)
light_sampling_mode	[ 0	locks=0 ]	(	[ light_sampling_mode	1 ] 	)
light_sampling_quality	[ 0	locks=0 ]	(	[ light_sampling_quality	1 ] 	)
folder15	[ 0	locks=0 ]	(	1	)
screendoorlimit	[ 0	locks=0 ]	(	[ screendoorlimit	4 ] 	)
volumesteprate	[ 0	locks=0 ]	(	[ volumesteprate	0.25 ] 	)
diffuselimit	[ 0	locks=0 ]	(	[ diffuselimit	1 ] 	)
reflectionlimit	[ 0	locks=0 ]	(	[ reflectionlimit	4 ] 	)
refractionlimit	[ 0	locks=0 ]	(	[ refractionlimit	4 ] 	)
volumelimit	[ 0	locks=0 ]	(	[ volumelimit	0 ] 	)
ssslimit	[ 0	locks=0 ]	(	[ ssslimit	0 ] 	)
colorlimit	[ 0	locks=0 ]	(	[ colorlimit	10 ] 	)
colorlimitindlinked	[ 0	locks=0 ]	(	[ colorlimitindlinked	1 ] 	)
colorlimitindirect	[ 0	locks=0 ]	(	[ colorlimitindirect	10 ] 	)
russianroulette_cutoff	[ 0	locks=0 ]	(	[ russianroulette_cutoff	2 ] 	)
enabledof	[ 8	locks=0 ]	(	[ enabledof	1 ] 	)
enablemblur	[ 8	locks=0 ]	(	[ enablemblur	1 ] 	)
folder16	[ 0	locks=0 ]	(	0	)
mblur	[ 8	locks=0 ]	(	[ mblur	1 ] 	)
xformsamples	[ 8	locks=0 ]	(	[ xformsamples	2 ] 	)
geosamples	[ 8	locks=0 ]	(	[ geosamples	2 ] 	)
vblur	[ 0	locks=0 ]	(	"`ifs(ch(\"../dovblur\"),chs(\"../vblur\"),\"No Velocity Blur\")`"	)
instance_vblur	[ 0	locks=0 ]	(	"`ifs(ch(\"../doinstance_vblur\"),chs(\"../instance_vblur\"),\"No Velocity Blur\")`"	)
volumevblurscale	[ 0	locks=0 ]	(	[ volumevblurscale	1 ] 	)
point_style	[ 0	locks=0 ]	(	[ point_style	Spheres ] 	)
curve_style	[ 0	locks=0 ]	(	[ curve_style	"Rounded Curves" ] 	)
curve_basis	[ 0	locks=0 ]	(	[ curve_basis	0 ] 	)
cull_backface	[ 0	locks=0 ]	(	[ cull_backface	Off ] 	)
causticsenable	[ 0	locks=0 ]	(	[ causticsenable	0 ] 	)
folder11	[ 0	locks=0 ]	(	1	)
causticsroughnessclamp	[ 0	locks=0 ]	(	[ causticsroughnessclamp	0.20000000000000001 ] 	)
__shading	[ 0	locks=0 ]	(	1	)
raybias	[ 0	locks=0 ]	(	[ raybias	0.001 ] 	)
constrainmaxrough	[ 0	locks=0 ]	(	[ constrainmaxrough	1 ] 	)
autoheadlight	[ 0	locks=0 ]	(	[ autoheadlight	1 ] 	)
__dicing	[ 0	locks=0 ]	(	1	)
usedicingcamera	[ 0	locks=0 ]	(	[ usedicingcamera	0 ] 	)
dicingcamera	[ 0	locks=0 ]	(	[ dicingcamera	"" ] 	)
offscreenquality	[ 0	locks=0 ]	(	[ offscreenquality	0.10000000000000001 ] 	)
dicingqualityscale	[ 0	locks=0 ]	(	[ dicingqualityscale	1 ] 	)
__imageoutput	[ 0	locks=0 ]	(	0	0	0	0	0	)
importsecondaryinputvars	[ 0	locks=0 ]	(	[ importsecondaryinputvars	0 ] 	)
importsecondaryproducts	[ 0	locks=0 ]	(	[ importsecondaryproducts	0 ] 	)
pixelfilter	[ 0	locks=0 ]	(	[ pixelfilter	gauss ] 	)
pixelfiltersize	[ 0	locks=0 ]	(	[ pixelfiltersize	2 ] 	)
__lpe	[ 0	locks=0 ]	(	1	)
lpeaovlimit	[ 0	locks=0 ]	(	[ lpeaovlimit	100 ] 	)
doomitlpes	[ 0	locks=0 ]	(	[ doomitlpes	0 ] 	)
omitlpes	[ 0	locks=0 ]	(	[ omitlpes	Untagged_Lights ] 	)
folder0	[ 0	locks=0 ]	(	1	)
beauty	[ 0	locks=0 ]	(	[ beauty	1 ] 	)
labelparm2	[ 0	locks=0 ]	(	""	)
beautyperlpe	[ 0	locks=0 ]	(	[ beautyperlpe	0 ] 	)
beautyfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
beautyprecision	[ 0	locks=0 ]	(	color4h	)
sepparm	[ 0	locks=0 ]	(	)
beautyunshadowed	[ 0	locks=0 ]	(	[ beautyunshadowed	0 ] 	)
labelparm3	[ 0	locks=0 ]	(	""	)
beautyunshadowedperlpe	[ 0	locks=0 ]	(	[ beautyunshadowedperlpe	0 ] 	)
beautyunshadowedfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
beautyunshadowedprecision	[ 0	locks=0 ]	(	color3h	)
folder1	[ 0	locks=0 ]	(	0	)
combineddiffuse	[ 0	locks=0 ]	(	[ combineddiffuse	0 ] 	)
labelparm	[ 0	locks=0 ]	(	""	)
combineddiffuseperlpe	[ 0	locks=0 ]	(	[ combineddiffuseperlpe	0 ] 	)
combineddiffusefilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
combineddiffuseprecision	[ 0	locks=0 ]	(	color3h	)
sepparm32	[ 0	locks=0 ]	(	)
directdiffuse	[ 0	locks=0 ]	(	[ directdiffuse	0 ] 	)
labelparm4	[ 0	locks=0 ]	(	""	)
directdiffuseperlpe	[ 0	locks=0 ]	(	[ directdiffuseperlpe	0 ] 	)
directdiffusefilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
directdiffuseprecision	[ 0	locks=0 ]	(	color3h	)
sepparm4	[ 0	locks=0 ]	(	)
indirectdiffuse	[ 0	locks=0 ]	(	[ indirectdiffuse	0 ] 	)
labelparm5	[ 0	locks=0 ]	(	""	)
indirectdiffuseperlpe	[ 0	locks=0 ]	(	[ indirectdiffuseperlpe	0 ] 	)
indirectdiffusefilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
indirectdiffuseprecision	[ 0	locks=0 ]	(	color3h	)
sepparm3	[ 0	locks=0 ]	(	)
combineddiffuseunshadowed	[ 0	locks=0 ]	(	[ combineddiffuseunshadowed	0 ] 	)
labelparm6	[ 0	locks=0 ]	(	""	)
combineddiffuseunshadowedperlpe	[ 0	locks=0 ]	(	[ combineddiffuseunshadowedperlpe	0 ] 	)
combineddiffuseunshadowedfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
combineddiffuseunshadowedprecision	[ 0	locks=0 ]	(	color3h	)
sepparm5	[ 0	locks=0 ]	(	)
directdiffuseunshadowed	[ 0	locks=0 ]	(	[ directdiffuseunshadowed	0 ] 	)
labelparm7	[ 0	locks=0 ]	(	""	)
directdiffuseunshadowedperlpe	[ 0	locks=0 ]	(	[ directdiffuseunshadowedperlpe	0 ] 	)
directdiffuseunshadowedfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
directdiffuseunshadowedprecision	[ 0	locks=0 ]	(	color3h	)
sepparm34	[ 0	locks=0 ]	(	)
indirectdiffuseunshadowed	[ 0	locks=0 ]	(	[ indirectdiffuseunshadowed	0 ] 	)
labelparm8	[ 0	locks=0 ]	(	""	)
indirectdiffuseunshadowedperlpe	[ 0	locks=0 ]	(	[ indirectdiffuseunshadowedperlpe	0 ] 	)
indirectdiffuseunshadowedfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
indirectdiffuseunshadowedprecision	[ 0	locks=0 ]	(	color3h	)
folder2	[ 0	locks=0 ]	(	0	)
combinedglossyreflection	[ 0	locks=0 ]	(	[ combinedglossyreflection	0 ] 	)
labelparm9	[ 0	locks=0 ]	(	""	)
combinedglossyreflectionperlpe	[ 0	locks=0 ]	(	[ combinedglossyreflectionperlpe	0 ] 	)
combinedglossyreflectionfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
combinedglossyreflectionprecision	[ 0	locks=0 ]	(	color3h	)
sepparm35	[ 0	locks=0 ]	(	)
directglossyreflection	[ 0	locks=0 ]	(	[ directglossyreflection	0 ] 	)
labelparm10	[ 0	locks=0 ]	(	""	)
directglossyreflectionperlpe	[ 0	locks=0 ]	(	[ directglossyreflectionperlpe	0 ] 	)
directglossyreflectionfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
directglossyreflectionprecision	[ 0	locks=0 ]	(	color3h	)
sepparm6	[ 0	locks=0 ]	(	)
indirectglossyreflection	[ 0	locks=0 ]	(	[ indirectglossyreflection	0 ] 	)
labelparm11	[ 0	locks=0 ]	(	""	)
indirectglossyreflectionperlpe	[ 0	locks=0 ]	(	[ indirectglossyreflectionperlpe	0 ] 	)
indirectglossyreflectionfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
indirectglossyreflectionprecision	[ 0	locks=0 ]	(	color3h	)
sepparm7	[ 0	locks=0 ]	(	)
glossytransmission	[ 0	locks=0 ]	(	[ glossytransmission	0 ] 	)
labelparm12	[ 0	locks=0 ]	(	""	)
glossytransmissionperlpe	[ 0	locks=0 ]	(	[ glossytransmissionperlpe	0 ] 	)
glossytransmissionfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
glossytransmissionprecision	[ 0	locks=0 ]	(	color3h	)
sepparm8	[ 0	locks=0 ]	(	)
coat	[ 0	locks=0 ]	(	[ coat	0 ] 	)
labelparm13	[ 0	locks=0 ]	(	""	)
coatperlpe	[ 0	locks=0 ]	(	[ coatperlpe	0 ] 	)
coatfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
coatprecision	[ 0	locks=0 ]	(	color3h	)
folder5	[ 0	locks=0 ]	(	0	)
combinedemission	[ 0	locks=0 ]	(	[ combinedemission	0 ] 	)
labelparm14	[ 0	locks=0 ]	(	""	)
combinedemissionfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
combinedemissionprecision	[ 0	locks=0 ]	(	color3h	)
sepparm10	[ 0	locks=0 ]	(	)
directemission	[ 0	locks=0 ]	(	[ directemission	0 ] 	)
labelparm15	[ 0	locks=0 ]	(	""	)
directemissionfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
directemissionprecision	[ 0	locks=0 ]	(	color3h	)
sepparm36	[ 0	locks=0 ]	(	)
indirectemission	[ 0	locks=0 ]	(	[ indirectemission	0 ] 	)
labelparm16	[ 0	locks=0 ]	(	""	)
indirectemissionfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
indirectemissionprecision	[ 0	locks=0 ]	(	color3h	)
sepparm14	[ 0	locks=0 ]	(	)
visiblelights	[ 0	locks=0 ]	(	[ visiblelights	0 ] 	)
labelparm17	[ 0	locks=0 ]	(	""	)
visiblelightsperlpe	[ 0	locks=0 ]	(	[ visiblelightsperlpe	0 ] 	)
visiblelightsfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
visiblelightsprecision	[ 0	locks=0 ]	(	color3h	)
folder6	[ 0	locks=0 ]	(	0	)
combinedvolume	[ 0	locks=0 ]	(	[ combinedvolume	0 ] 	)
labelparm18	[ 0	locks=0 ]	(	""	)
combinedvolumeperlpe	[ 0	locks=0 ]	(	[ combinedvolumeperlpe	0 ] 	)
combinedvolumefilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
combinedvolumeprecision	[ 0	locks=0 ]	(	color3h	)
sepparm12	[ 0	locks=0 ]	(	)
directvolume	[ 0	locks=0 ]	(	[ directvolume	0 ] 	)
labelparm19	[ 0	locks=0 ]	(	""	)
directvolumeperlpe	[ 0	locks=0 ]	(	[ directvolumeperlpe	0 ] 	)
directvolumefilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
directvolumeprecision	[ 0	locks=0 ]	(	color3h	)
sepparm37	[ 0	locks=0 ]	(	)
indirectvolume	[ 0	locks=0 ]	(	[ indirectvolume	0 ] 	)
labelparm20	[ 0	locks=0 ]	(	""	)
indirectvolumeperlpe	[ 0	locks=0 ]	(	[ indirectvolumeperlpe	0 ] 	)
indirectvolumefilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
indirectvolumeprecision	[ 0	locks=0 ]	(	color3h	)
folder7	[ 0	locks=0 ]	(	1	)
sss	[ 0	locks=0 ]	(	[ sss	0 ] 	)
labelparm21	[ 0	locks=0 ]	(	""	)
sssperlpe	[ 0	locks=0 ]	(	[ sssperlpe	0 ] 	)
sssfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
sssprecision	[ 0	locks=0 ]	(	color3h	)
folder10	[ 0	locks=0 ]	(	1	)
albedo	[ 0	locks=0 ]	(	[ albedo	0 ] 	)
labelparm22	[ 0	locks=0 ]	(	""	)
albedofilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
albedoprecision	[ 0	locks=0 ]	(	color3h	)
__ray	[ 0	locks=0 ]	(	0	)
P	[ 0	locks=0 ]	(	[ P	0 ] 	)
labelparm23	[ 0	locks=0 ]	(	""	)
Pfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
Pprecision	[ 0	locks=0 ]	(	half3	)
sepparm15	[ 0	locks=0 ]	(	)
D	[ 0	locks=0 ]	(	[ D	0 ] 	)
labelparm24	[ 0	locks=0 ]	(	""	)
Dfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
Dprecision	[ 0	locks=0 ]	(	half3	)
sepparm16	[ 0	locks=0 ]	(	)
time	[ 0	locks=0 ]	(	[ time	0 ] 	)
labelparm25	[ 0	locks=0 ]	(	""	)
timefilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
timeprecision	[ 0	locks=0 ]	(	half	)
sepparm17	[ 0	locks=0 ]	(	)
near	[ 0	locks=0 ]	(	[ near	0 ] 	)
labelparm26	[ 0	locks=0 ]	(	""	)
nearfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
nearprecision	[ 0	locks=0 ]	(	half	)
sepparm18	[ 0	locks=0 ]	(	)
far	[ 0	locks=0 ]	(	[ far	0 ] 	)
labelparm27	[ 0	locks=0 ]	(	""	)
farfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
farprecision	[ 0	locks=0 ]	(	half	)
sepparm19	[ 0	locks=0 ]	(	)
mask	[ 0	locks=0 ]	(	[ mask	0 ] 	)
labelparm28	[ 0	locks=0 ]	(	""	)
maskfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
maskprecision	[ 0	locks=0 ]	(	half	)
sepparm20	[ 0	locks=0 ]	(	)
contrib	[ 0	locks=0 ]	(	[ contrib	0 ] 	)
labelparm29	[ 0	locks=0 ]	(	""	)
contribfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
contribprecision	[ 0	locks=0 ]	(	color3h	)
sepparm21	[ 0	locks=0 ]	(	)
hitP	[ 0	locks=0 ]	(	[ hitP	0 ] 	)
labelparm30	[ 0	locks=0 ]	(	""	)
hitPfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
hitPprecision	[ 0	locks=0 ]	(	float3	)
sepparm22	[ 0	locks=0 ]	(	)
hitPz	[ 0	locks=0 ]	(	[ hitPz	0 ] 	)
labelparm31	[ 0	locks=0 ]	(	""	)
hitPzfilter	[ 0	locks=0 ]	(	[\"minmax\",{\"mode\":\"zmin\"}]	)
hitPzprecision	[ 0	locks=0 ]	(	float	)
sepparm23	[ 0	locks=0 ]	(	)
hitstack	[ 0	locks=0 ]	(	[ hitstack	0 ] 	)
labelparm32	[ 0	locks=0 ]	(	""	)
hitstackfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
hitstackprecision	[ 0	locks=0 ]	(	half	)
sepparm24	[ 0	locks=0 ]	(	)
element	[ 0	locks=0 ]	(	[ element	0 ] 	)
labelparm33	[ 0	locks=0 ]	(	""	)
elementfilter	[ 0	locks=0 ]	(	[\"minmax\",{\"mode\":\"idcover\"}]	)
elementprecision	[ 0	locks=0 ]	(	float	)
sepparm25	[ 0	locks=0 ]	(	)
primid	[ 0	locks=0 ]	(	[ primid	0 ] 	)
labelparm34	[ 0	locks=0 ]	(	""	)
primidfilter	[ 0	locks=0 ]	(	[\"minmax\",{\"mode\":\"idcover\"}]	)
primidprecision	[ 0	locks=0 ]	(	float	)
sepparm26	[ 0	locks=0 ]	(	)
hituv	[ 0	locks=0 ]	(	[ hituv	0 ] 	)
labelparm35	[ 0	locks=0 ]	(	""	)
hituvfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
hituvprecision	[ 0	locks=0 ]	(	float3	)
sepparm27	[ 0	locks=0 ]	(	)
hitdist	[ 0	locks=0 ]	(	[ hitdist	0 ] 	)
labelparm36	[ 0	locks=0 ]	(	""	)
hitdistfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
hitdistprecision	[ 0	locks=0 ]	(	float	)
sepparm28	[ 0	locks=0 ]	(	)
dPdz	[ 0	locks=0 ]	(	[ dPdz	0 ] 	)
labelparm37	[ 0	locks=0 ]	(	""	)
dPdzfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
dPdzprecision	[ 0	locks=0 ]	(	half	)
sepparm29	[ 0	locks=0 ]	(	)
hitN	[ 0	locks=0 ]	(	[ hitN	0 ] 	)
labelparm61	[ 0	locks=0 ]	(	""	)
hitNfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
hitNprecision	[ 0	locks=0 ]	(	half3	)
sepparm30	[ 0	locks=0 ]	(	)
hitNg	[ 0	locks=0 ]	(	[ hitNg	0 ] 	)
labelparm63	[ 0	locks=0 ]	(	""	)
hitNgfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
hitNgprecision	[ 0	locks=0 ]	(	half3	)
sepparm31	[ 0	locks=0 ]	(	)
flags	[ 0	locks=0 ]	(	[ flags	0 ] 	)
labelparm65	[ 0	locks=0 ]	(	""	)
flagsfilter	[ 0	locks=0 ]	(	[\"ubox\",{}]	)
flagsprecision	[ 0	locks=0 ]	(	half	)
__extrarendervars	[ 0	locks=0 ]	(	1	)
extrarendervars	[ 0	locks=0 ]	(	[ extrarendervars	0 ] 	)
folder3	[ 0	locks=0 ]	(	0	)
denoiser	[ 0	locks=0 ]	(	[ denoiser	off ] 	)
denoise_usealbedo	[ 0	locks=0 ]	(	[ denoise_usealbedo	1 ] 	)
denoise_useN	[ 0	locks=0 ]	(	[ denoise_useN	1 ] 	)
denoise_useGl	[ 0	locks=0 ]	(	[ denoise_useGl	0 ] 	)
denoise_aovs	[ 0	locks=0 ]	(	[ denoise_aovs	C ] 	)
ocio	[ 0	locks=0 ]	(	[ ocio	0 ] 	)
folder4	[ 0	locks=0 ]	(	0	)
colorlimits	[ 0	locks=0 ]	(	[ colorlimits	0 ] 	)
aspectRatioConformPolicy	[ 0	locks=0 ]	(	[ aspectRatioConformPolicy	expandAperture ] 	)
dataWindowNDC	[ 0	locks=0 ]	(	[ dataWindowNDC1	0 ] 	[ dataWindowNDC2	0 ] 	[ dataWindowNDC3	1 ] 	[ dataWindowNDC4	1 ] 	)
pixelAspectRatio	[ 8	locks=0 ]	(	[ pixelAspectRatio	1 ] 	)
image_artist	[ 0	locks=0 ]	(	[ image_artist	"" ] 	)
image_comment	[ 0	locks=0 ]	(	[ image_comment	"" ] 	)
image_hostname	[ 0	locks=0 ]	(	[ image_hostname	"" ] 	)
image_exr_compression	[ 0	locks=0 ]	(	[ image_exr_compression	zips ] 	)
image_dwa_compression	[ 0	locks=0 ]	(	[ image_dwa_compression	85 ] 	)
__imageoutput_5	[ 0	locks=0 ]	(	0	)
dcm	[ 0	locks=0 ]	(	[ dcm	0 ] 	)
folder8	[ 0	locks=0 ]	(	1	)
dcmfilename	[ 0	locks=0 ]	(	[ dcmfilename	$HIP/render/$HIPNAME.$OS.dcm.$F4.exr ] 	)
dcmvars	[ 0	locks=0 ]	(	[ dcmvars	/Render/Products/Vars/* ] 	)
rendering8	[ 0	locks=0 ]	(	0	0	0	0	0	0	)
varianceaa_thresh	[ 0	locks=0 ]	(	[ varianceaa_thresh	0.01 ] 	)
guiding_enable	[ 0	locks=0 ]	(	[ guiding_enable	0 ] 	)
guiding_samples	[ 0	locks=0 ]	(	[ guiding_samples	64 ] 	)
__variance	[ 0	locks=0 ]	(	1	)
oracle	[ 0	locks=0 ]	(	[ oracle	variance ] 	)
oracle_minsamples	[ 0	locks=0 ]	(	[ oracle_minsamples	0 ] 	)
oracle_plane	[ 0	locks=0 ]	(	[ oracle_plane	C ] 	)
oracle_variance	[ 0	locks=0 ]	(	[ oracle_variance	0.01 ] 	)
randomseed	[ 0	locks=0 ]	(	[ randomseed	0 ] 	)
oracle_ociomode	[ 0	locks=0 ]	(	[ oracle_ociomode	0 ] 	)
oracle_ociodisplay	[ 0	locks=0 ]	(	[ oracle_ociodisplay	"" ] 	)
oracle_ocioview	[ 0	locks=0 ]	(	[ oracle_ocioview	"" ] 	)
oracle_ociocolorspace	[ 0	locks=0 ]	(	[ oracle_ociocolorspace	default ] 	)
outputcheckpoint	[ 0	locks=0 ]	(	[ outputcheckpoint	0 ] 	)
productName	[ 0	locks=0 ]	(	[ productName	$HIP/render/$HIPNAME.$OS.$F4.checkpoint ] 	)
savefrequency	[ 0	locks=0 ]	(	[ savefrequency	60 ] 	)
resume	[ 0	locks=0 ]	(	[ resume	1 ] 	)
bucketsize	[ 0	locks=0 ]	(	[ bucketsize	32 ] 	)
bucketorder	[ 0	locks=0 ]	(	[ bucketorder	Middle ] 	)
usecacheratio	[ 0	locks=0 ]	(	[ usecacheratio	1 ] 	)
cacheratio	[ 0	locks=0 ]	(	[ cacheratio	0.25 ] 	)
cachesize	[ 0	locks=0 ]	(	[ cachesize	1000 ] 	)
imagemode	[ 0	locks=0 ]	(	[ imagemode	Progressive ] 	)
progressivepasses	[ 0	locks=0 ]	(	[ progressivepasses	0 ] 	)
abortmissingtexture	[ 0	locks=0 ]	(	[ abortmissingtexture	0 ] 	)
exportcomponents	[ 0	locks=0 ]	(	[ exportcomponents	"diffuse reflect coat refract volume sss" ] 	)
diffusecomponents	[ 0	locks=0 ]	(	[ diffusecomponents	diffuse ] 	)
refractcomponents	[ 0	locks=0 ]	(	[ refractcomponents	refract ] 	)
volumecomponents	[ 0	locks=0 ]	(	[ volumecomponents	volume ] 	)
ssscomponents	[ 0	locks=0 ]	(	[ ssscomponents	sss ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/karmarenderproperties.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rop_usdrender.init"
Content-Type: text/plain

type = usdrender_rop
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rop_usdrender.def"
Content-Type: text/plain

comment ""
position 3.5 4.85
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	karmarenderproperties 1 1 "input1"
}
inputs
{
0 	karmarenderproperties 0 1
}
stat
{
  create -1
  modify -1
  author nobody@nowhere
  access 0777
}
color UT_Color RGB 0.65 0.4 0.5 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rop_usdrender.multiparm"
Content-Type: text/plain

4
optionname# ../optionname#
optiontype# ../optiontype#
optionstrvalue# ../optionstrvalue#
optionfloatvalue# ../optionfloatvalue#

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rop_usdrender.chn"
Content-Type: text/plain

{
    channel f1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "if(ch(\"../trange\")== 0 && ch(\"../useframeoverride\"),ch(\"../frameoverride\"),ch(\"../f1\"))" }
    }
    channel f2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "if(ch(\"../trange\")== 0 && ch(\"../useframeoverride\"),ch(\"../frameoverride\"),ch(\"../f2\"))" }
    }
    channel execute {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../execute\") }
    }
    channel optioncount {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../optioncount\") }
    }
    channel tprerender {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tprerender\") }
    }
    channel prerender {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../prerender\") }
    }
    channel lprerender {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../lprerender\") }
    }
    channel tpreframe {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tpreframe\") }
    }
    channel preframe {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../preframe\") }
    }
    channel lpreframe {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../lpreframe\") }
    }
    channel tpostframe {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tpostframe\") }
    }
    channel postframe {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../postframe\") }
    }
    channel lpostframe {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../lpostframe\") }
    }
    channel tpostrender {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tpostrender\") }
    }
    channel postrender {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../postrender\") }
    }
    channel lpostrender {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../lpostrender\") }
    }
    channel initsim {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../initsim\") }
    }
    channel mkpath {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mkpath\") }
    }
    channel alfprogress {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../alfprogress\") }
    }
    channel reportnetwork {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../reportnetwork\") }
    }
    channel soho_foreground {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../soho_foreground\") }
    }
    channel renderpreview {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../renderpreview\") }
    }
    channel resolvercontext {
      lefttype = extend
      righttype = extend
      defaultString = "chs(strcat(opcreator(chs(\"loppath\")), \"/resolvercontextassetpath\"))"
      flags = 0
      segment { length = 0 expr = chs(\"../resolvercontext\") }
    }
    channel striplayerbreaks {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../striplayerbreaks\") }
    }
    channel rendersettings {
      lefttype = extend
      righttype = extend
      defaultString = \"/Render/rendersettings\"
      flags = 0
      segment { length = 0 expr = chs(\"../primpath\") }
    }
    channel savetodirectory_directory {
      lefttype = extend
      righttype = extend
      defaultString = \"$HOUDINI_TEMP_DIR/usd_renders/$RENDERID\"
      flags = 0
      segment { length = 0 expr = hou.text.expandString(hou.parm(\"../savetodirectory\").getReferencedParm().rawValue()) language = python }
    }
    channel husk_mplay {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../enablemplaymonitor\") }
    }
    channel husk_mplayname {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../mplayname\") }
    }
    channel husk_mplayzoom {
      lefttype = extend
      righttype = extend
      default = 66
      flags = 0
      segment { length = 0 value = 66 66 expr = ch(\"../previewscale\") }
    }
    channel husk_usdtrace {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../usdtrace\") }
    }
    channel husk_log {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../log\") }
    }
    channel husk_logappend {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../logappend\") }
    }
    channel husk_stdout {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../stdout\") }
    }
    channel husk_stderr {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../stderr\") }
    }
    channel husk_dotimelimit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../addtimelimit\") }
    }
    channel husk_timelimit {
      lefttype = extend
      righttype = extend
      default = 300
      flags = 0
      segment { length = 0 value = 300 300 expr = ch(\"../timelimit\") }
    }
    channel runcommand {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../runcommand\") }
    }
    channel trange {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "(ch(\"../timedependent\") && ch(\"../trange\")) || (ch(\"../timedependent\") && !ch(\"../trange\") && ch(\"../useframeoverride\"))" }
    }
    channel f3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../f3\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rop_usdrender.parm"
Content-Type: text/plain

{
version 0.8
execute	[ 0	locks=0 ]	(	[ execute	0 ] 	)
renderpreview	[ 0	locks=0 ]	(	[ renderpreview	0 ] 	)
executebackground	[ 0	locks=0 ]	(	0	)
renderdialog	[ 0	locks=0 ]	(	0	)
trange	[ 0	locks=0 ]	(	[ trange	0 ] 	)
f	[ 0	locks=0 ]	(	[ f1	1 ] 	[ f2	240 ] 	[ f3	1 ] 	)
foffset	[ 0	locks=0 ]	(	0	0	1	)
allframesatonce	[ 0	locks=0 ]	(	"off"	)
take	[ 0	locks=0 ]	(	_current_	)
renderer	[ 0	locks=0 ]	(	BRAY_HdKarma	)
loppath	[ 0	locks=0 ]	(	../karmarenderproperties	)
rendersettings	[ 0	locks=0 ]	(	[ rendersettings	"" ] 	)
outputimage	[ 0	locks=0 ]	(	`chs(\"../picture\")`	)
_tabs	[ 0	locks=0 ]	(	0	0	0	0	)
_husk_tabs	[ 0	locks=0 ]	(	1	1	1	1	1	)
husk_instantshutter	[ 0	locks=0 ]	(	"off"	)
husk_purpose	[ 0	locks=0 ]	(	`pythonexprs(\"','.join(hou.pwd().evalParm('../purpose').split())\")`	)
husk_complexity	[ 0	locks=0 ]	(	`chs(\"../complexity\")`	)
husk_delegateprod	[ 0	locks=0 ]	(	"on"	)
husk_restartdelegate	[ 0	locks=0 ]	(	"off"	)
husk_restartdelegateframes	[ 0	locks=0 ]	(	1	)
dosnapshot	[ 8	locks=0 ]	(	"on"	)
snapshotinterval	[ 0	locks=0 ]	(	300	)
husk_dotimelimit	[ 8	locks=0 ]	(	[ husk_dotimelimit	0 ] 	)
husk_timelimit	[ 0	locks=0 ]	(	[ husk_timelimit	300 ] 	)
husk_timelimitperimage	[ 0	locks=0 ]	(	"on"	)
husk_mplayname	[ 0	locks=0 ]	(	[ husk_mplayname	"" ] 	)
husk_mplay	[ 8	locks=0 ]	(	[ husk_mplay	0 ] 	)
husk_mplayaovs	[ 0	locks=0 ]	(	`chs(\"../previewchannels\")`	)
husk_mplayzoom	[ 0	locks=0 ]	(	[ husk_mplayzoom	100 ] 	)
husk_mplayzoommenu	[ 0	locks=0 ]	(	0	)
husk_tprerender	[ 0	locks=0 ]	(	"on"	)
husk_prerender	[ 0	locks=0 ]	(	""	)
husk_tpreframe	[ 0	locks=0 ]	(	"on"	)
husk_preframe	[ 0	locks=0 ]	(	""	)
husk_tpostframe	[ 0	locks=0 ]	(	"on"	)
husk_postframe	[ 0	locks=0 ]	(	""	)
husk_tpostrender	[ 0	locks=0 ]	(	"on"	)
husk_postrender	[ 0	locks=0 ]	(	""	)
husk_tile	[ 0	locks=0 ]	(	"off"	)
husk_tilecount	[ 0	locks=0 ]	(	4	4	)
husk_tileindex	[ 0	locks=0 ]	(	0	)
husk_tilesuffix	[ 0	locks=0 ]	(	_tile%02d	)
husk_debug	[ 0	locks=0 ]	(	"off"	)
verbosity	[ 0	locks=0 ]	(	""	)
husk_usdtrace	[ 0	locks=0 ]	(	[ husk_usdtrace	"" ] 	)
husk_chromefile	[ 0	locks=0 ]	(	""	)
husk_log	[ 0	locks=0 ]	(	[ husk_log	0 ] 	)
husk_logappend	[ 0	locks=0 ]	(	[ husk_logappend	0 ] 	)
husk_stdout	[ 0	locks=0 ]	(	[ husk_stdout	"" ] 	)
husk_stderr	[ 0	locks=0 ]	(	[ husk_stderr	"" ] 	)
resolvercontext	[ 0	locks=0 ]	(	[ resolvercontext	"`chs(strcat(opcreator(chs(\"loppath\")), \"/resolvercontextassetpath\"))`" ] 	)
striplayerbreaks	[ 0	locks=0 ]	(	[ striplayerbreaks	0 ] 	)
strippostlayers	[ 0	locks=0 ]	(	"off"	)
separator_contextoptions	[ 0	locks=0 ]	(	)
contextoptions_group	[ 0	locks=0 ]	(	1	)
optioncount	[ 0	locks=0 ]	(	[ optioncount	0 ] 	)
runcommand	[ 0	locks=0 ]	(	[ runcommand	1 ] 	)
rendercommand	[ 0	locks=0 ]	(	"husk --optimize-offline `ch(\"../offlineoptimization\")` -j `ch(\"../threads\")` -V`chs(\"../vexprofiling\")``ifs(ch(\"../alfprogress\"), \"a\", \"A\")``ifs(ch(\"../timestamps\"), \"t\", \"T\")``ch(\"../verbose\")` --windows-console `chs(\"../windowsconsole\")`"	)
soho_foreground	[ 0	locks=0 ]	(	[ soho_foreground	0 ] 	)
alfprogress	[ 0	locks=0 ]	(	[ alfprogress	0 ] 	)
mkpath	[ 0	locks=0 ]	(	[ mkpath	1 ] 	)
savetodirectory_directory	[ 0	locks=0 ]	(	[ savetodirectory_directory	$HOUDINI_TEMP_DIR/usd_renders/$RENDERID ] 	)
domaxthreads	[ 0	locks=0 ]	(	"off"	)
maxthreads	[ 0	locks=0 ]	(	-1	)
initsim	[ 0	locks=0 ]	(	[ initsim	0 ] 	)
reportnetwork	[ 0	locks=0 ]	(	[ reportnetwork	0 ] 	)
tprerender	[ 0	locks=0 ]	(	[ tprerender	1 ] 	)
prerender	[ 0	locks=0 ]	(	[ prerender	"" ] 	)
lprerender	[ 0	locks=0 ]	(	[ lprerender	hscript ] 	)
tpreframe	[ 0	locks=0 ]	(	[ tpreframe	1 ] 	)
preframe	[ 0	locks=0 ]	(	[ preframe	"" ] 	)
lpreframe	[ 0	locks=0 ]	(	[ lpreframe	hscript ] 	)
tpostframe	[ 0	locks=0 ]	(	[ tpostframe	1 ] 	)
postframe	[ 0	locks=0 ]	(	[ postframe	"" ] 	)
lpostframe	[ 0	locks=0 ]	(	[ lpostframe	hscript ] 	)
tpostrender	[ 0	locks=0 ]	(	[ tpostrender	1 ] 	)
postrender	[ 0	locks=0 ]	(	[ postrender	"" ] 	)
lpostrender	[ 0	locks=0 ]	(	[ lpostrender	hscript ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rop_usdrender.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.def"
Content-Type: text/plain

comment ""
position 4.16334e-17 4.41305
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on debug off
outputsNamed3
{
}
inputsNamed3
{
0 	karmarenderproperties 1 1 "input1"
}
inputs
{
0 	karmarenderproperties 0 1
}
stat
{
  create -1
  modify -1
  author nobody@nowhere
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
modifiedprims	[ 0	locks=0 ]	(	"`lopinputprims(\".\", 0)`"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Input_Stage.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Input_Stage.def"
Content-Type: text/plain

comment ""
position -0.111393 8.714
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on debug off
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author nobody@nowhere
  access 0777
}
color UT_Color RGB 0.6 0.7 0.77 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Input_Stage.parm"
Content-Type: text/plain

{
version 0.8
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Input_Stage.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render.init"
Content-Type: text/plain

type = topnet
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render.def"
Content-Type: text/plain

comment ""
position -4.5 7.9098
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render.parm"
Content-Type: text/plain

{
version 0.8
cookcontrolssection	[ 0	locks=0 ]	(	0	)
generatestatic	[ 0	locks=0 ]	(	0	)
cookbutton	[ 0	locks=0 ]	(	0	)
dirtybutton	[ 0	locks=0 ]	(	0	)
cancelbutton	[ 0	locks=0 ]	(	0	)
taskgraphsection	[ 0	locks=0 ]	(	0	)
savetaskgraph	[ 0	locks=0 ]	(	0	)
loadtaskgraph	[ 0	locks=0 ]	(	0	)
taskgraphfile	[ 0	locks=0 ]	(	$HIP/$HIPNAME.taskgraph.$F.py	)
taskgraphautosave	[ 0	locks=0 ]	(	"off"	)
taskgraphsaverate	[ 0	locks=0 ]	(	10	)
schedulersection	[ 0	locks=0 ]	(	0	)
topscheduler	[ 0	locks=0 ]	(	`ifs(!ch(\"../usecustomtopscheduler\"),\"localscheduler\",chsop(\"../topscheduler\"))`	)
usedefaultlabel	[ 0	locks=0 ]	(	"off"	)
defaultlabel	[ 0	locks=0 ]	(	$OS.`@pdg_index`	)
sep1	[ 0	locks=0 ]	(	)
regenerationtype	[ 0	locks=0 ]	(	"0"	)
evaluationtime	[ 0	locks=0 ]	(	"0"	)
customtime	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/output0.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/output0.def"
Content-Type: text/plain

comment ""
position -4.5 -1.99929
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	karma1 0 1 "input1"
}
inputs
{
0 	karma1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/localscheduler.init"
Content-Type: text/plain

type = localscheduler
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/localscheduler.def"
Content-Type: text/plain

comment ""
position 3.5 1.85
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render on highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.478 0.478 0.478 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/localscheduler.chn"
Content-Type: text/plain

{
    channel local_single {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../filecacheversioned1_/local_single\") }
    }
    channel maxprocs {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../numlogicalcores\") }
    }
    channel local_is_CPU_number_set {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_is_CPU_number_set\") }
    }
    channel local_CPUs_to_use {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../local_CPUs_to_use\") }
    }
    channel local_houdinimaxthreads {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../local_CPUs_to_use\") }
    }
    channel local_useminfreemem {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../local_useminfreemem\") }
    }
    channel local_minfreemem {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../local_minfreemem\") }
    }
    channel local_minfreemempct {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../local_minfreemempct\") }
    }
    channel local_usehoudinimaxthreads {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../local_is_CPU_number_set\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/localscheduler.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
folder5	[ 0	locks=0 ]	(	0	)
maxprocsmenu	[ 8	locks=0 ]	(	"1"	)
maxprocs	[ 0	locks=0 ]	(	[ maxprocs	1 ] 	)
verbose	[ 0	locks=0 ]	(	"off"	)
pdg_waitforfailures	[ 0	locks=0 ]	(	"off"	)
folder4	[ 0	locks=0 ]	(	0	)
pdg_workingdir	[ 0	locks=0 ]	(	$HIP	)
pdg_workitemdatasource	[ 0	locks=0 ]	(	"0"	)
pdg_compressworkitemdata	[ 0	locks=0 ]	(	"on"	)
pdg_validateoutputs	[ 0	locks=0 ]	(	"on"	)
pdg_checkexpectedoutputs	[ 0	locks=0 ]	(	"on"	)
sepparm2	[ 0	locks=0 ]	(	)
pdg_mapmode	[ 0	locks=0 ]	(	"0"	)
pdg_usemapzone	[ 0	locks=0 ]	(	"off"	)
pdg_mapzone	[ 0	locks=0 ]	(	$PDG_PATHMAP_ZONE	)
sepparm3	[ 0	locks=0 ]	(	)
folder1	[ 0	locks=0 ]	(	0	)
tempdirmenu	[ 0	locks=0 ]	(	"1"	)
tempdirappendpid	[ 0	locks=0 ]	(	"on"	)
tempdircustom	[ 0	locks=0 ]	(	$HOUDINI_TEMP_DIR/$HIPNAME/pdgtemp	)
socketcallbacks	[ 0	locks=0 ]	(	1	)
folder0_2	[ 0	locks=0 ]	(	0	)
local_single	[ 8	locks=0 ]	(	[ local_single	0 ] 	)
local_is_CPU_number_set	[ 0	locks=0 ]	(	[ local_is_CPU_number_set	0 ] 	)
local_CPUs_to_use	[ 0	locks=0 ]	(	[ local_CPUs_to_use	1 ] 	)
folder6	[ 0	locks=0 ]	(	0	)
local_useminfreemem	[ 0	locks=0 ]	(	[ local_useminfreemem	0 ] 	)
local_minfreemem	[ 0	locks=0 ]	(	[ local_minfreemem	0 ] 	)
local_minfreemempct	[ 0	locks=0 ]	(	[ local_minfreemempct	0 ] 	)
folder2	[ 0	locks=0 ]	(	0	)
local_enabletimeout	[ 0	locks=0 ]	(	"off"	)
local_maxtime	[ 0	locks=0 ]	(	0	)
local_handletimeout	[ 0	locks=0 ]	(	"0"	)
sepparm4	[ 0	locks=0 ]	(	)
local_echandleby	[ 0	locks=0 ]	(	"0"	)
local_echandleall	[ 0	locks=0 ]	(	"on"	)
local_eccustomcode	[ 0	locks=0 ]	(	1	)
sepparm	[ 0	locks=0 ]	(	)
local_maximumretries	[ 0	locks=0 ]	(	3	)
local_addfailcountattr	[ 0	locks=0 ]	(	"off"	)
local_failcountattr	[ 0	locks=0 ]	(	failurecount	)
folder3	[ 0	locks=0 ]	(	0	)
local_usehoudinimaxthreads	[ 8	locks=0 ]	(	[ local_usehoudinimaxthreads	0 ] 	)
local_houdinimaxthreads	[ 0	locks=0 ]	(	[ local_houdinimaxthreads	0 ] 	)
local_requireswindow	[ 0	locks=0 ]	(	"off"	)
local_skippackages	[ 0	locks=0 ]	(	"on"	)
local_envunset	[ 0	locks=0 ]	(	""	)
local_envmulti	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/localscheduler.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/karma1.init"
Content-Type: text/plain

type = labs::ropkarma::2.0
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/karma1.def"
Content-Type: text/plain

comment ""
position -4.5 1.9098
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/karma1.multiparm"
Content-Type: text/plain

10
attrib# ../../attrib#
wedgetype# ../../wedgetype#
minvalue# ../../minvalue#
maxvalue# ../../maxvalue#
randomseed# ../../randomseed#
batchsize# ../../batchsize#
periodsize# ../../periodsize#
geopath# ../../geopath#
values# ../../values#
valuesdefault# ../../valuesdefault#

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/karma1.spareparmdef"
Content-Type: text/plain

    parm {
        name    "filemethod"
        baseparm
        label   "File Method"
        joinnext
        export  none
    }
    parm {
        name    "timedependent"
        baseparm
        label   "Time Dependent Render"
        export  none
    }
    parm {
        name    "basename"
        baseparm
        label   "Base Name"
        joinnext
        export  none
    }
    parm {
        name    "filetype"
        baseparm
        label   "File Type"
        nolabel
        export  none
    }
    parm {
        name    "file"
        baseparm
        label   "Image File"
        joinnext
        export  none
    }
    parm {
        name    "openfiledir"
        baseparm
        label   "Open Directory"
        nolabel
        export  none
    }
    parm {
        name    "basedir"
        baseparm
        label   "Base Folder"
        joinnext
        export  none
    }
    parm {
        name    "openbasedir"
        baseparm
        label   "Open Directory"
        nolabel
        joinnext
        export  none
    }
    parm {
        name    "opensequence"
        baseparm
        label   "Open Sequence"
        nolabel
        export  none
    }
    parm {
        name    "enableversion"
        baseparm
        label   "Enable Version"
        nolabel
        joinnext
        export  none
    }
    parm {
        name    "version"
        baseparm
        label   "Version"
        joinnext
        export  none
    }
    parm {
        name    "versiondown"
        baseparm
        label   "Down Version"
        nolabel
        joinnext
        export  none
    }
    parm {
        name    "versionup"
        baseparm
        label   "Up Version"
        nolabel
        export  none
    }
    parm {
        name    "sepparm3"
        baseparm
        label   "Spacer"
        export  none
    }
    group {
        name    "folder3"
        label   "Caching"

        groupcollapsible {
            name    "folder5"
            label   "Karma"
            grouptag { "group_default" "1" }
            grouptag { "group_type" "collapsible" }
            grouptag { "sidefx::header_parm" "pdg_cachemode" }

            parm {
                name    "loppath"
                baseparm
                label   "LOP Path"
                export  none
            }
            parm {
                name    "pdg_cachemode"
                baseparm
                label   "Cache Mode"
                export  none
            }
        }

        groupcollapsible {
            name    "folder8"
            label   "Sequence"
            hidewhentab "{ timedependent != 1 }"
            grouptag { "group_default" "1" }
            grouptag { "group_type" "collapsible" }

            parm {
                name    "trange"
                baseparm
                label   "Evaluate As"
                export  none
            }
            parm {
                name    "f"
                baseparm
                label   "Frame Range"
                joinnext
                export  none
            }
            parm {
                name    "fmenu"
                baseparm
                label   "F Menu"
                export  none
            }
            parm {
                name    "useframeoverride"
                baseparm
                label   "Override Frame"
                nolabel
                joinnext
                export  none
            }
            parm {
                name    "frameoverride"
                baseparm
                label   "Override Frame"
                export  none
            }
            parm {
                name    "specificrange"
                baseparm
                label   "List of Frames"
                export  none
            }
        }

        groupcollapsible {
            name    "folder9"
            label   "Wedging"
            grouptag { "group_type" "collapsible" }
            grouptag { "sidefx::header_parm" "wedgecount" }
            grouptag { "sidefx::header_toggle" "enablewedging" }

            parm {
                name    "enablewedging"
                baseparm
                label   "Enable Wedging"
                export  none
            }
            parm {
                name    "wrange"
                baseparm
                label   "Evaluate As"
                export  none
            }
            parm {
                name    "wedgeoverride"
                baseparm
                label   "Single Wedge"
                export  none
            }
            parm {
                name    "wedgerange"
                baseparm
                label   "Wedge Range"
                export  none
            }
            parm {
                name    "specificwedges"
                baseparm
                label   "List of Wedges"
                export  none
            }
            parm {
                name    "wedgecount"
                baseparm
                label   "Wedge Count"
                export  none
            }
            multiparm {
                name    "nwedgeattribs"
                label    "Number of Attributes"
                baseparm
                default 0
                disablewhen "{ enablewedging != 1 }"
                parmtag { "autoscope" "0000000000000000" }
                parmtag { "autoselect" "0000000000000000" }
                parmtag { "multistartoffset" "1" }

                parm {
                    name    "attrib#"
                    baseparm
                    label   "Attribute Name"
                    export  none
                }
                parm {
                    name    "wedgetype#"
                    baseparm
                    label   "Wedge Type"
                    nolabel
                    export  none
                }
                parm {
                    name    "minvalue#"
                    baseparm
                    label   "Min Value"
                    export  none
                }
                parm {
                    name    "maxvalue#"
                    baseparm
                    label   "Max Value"
                    export  none
                }
                parm {
                    name    "randomseed#"
                    baseparm
                    label   "Seed"
                    export  none
                }
                parm {
                    name    "batchsize#"
                    baseparm
                    label   "Batch Size"
                    export  none
                }
                parm {
                    name    "periodsize#"
                    baseparm
                    label   "Period Size"
                    export  none
                }
                parm {
                    name    "values#"
                    baseparm
                    label   "List of Values"
                    export  none
                }
                parm {
                    name    "geopath#"
                    baseparm
                    label   "Geometry Path"
                    export  none
                }
                parm {
                    name    "valuesdefault#"
                    baseparm
                    label   "Default Value"
                    export  none
                }
            }

        }

        groupcollapsible {
            name    "folder10"
            label   "Load"
            hidewhen "{ trange == static enablewedging == 0 }"
            grouptag { "group_type" "collapsible" }

            parm {
                name    "domergeframes"
                baseparm
                label   "Merge Frames"
                nolabel
                joinnext
                export  none
            }
            parm {
                name    "mergeframes"
                baseparm
                label   "Merge Frames"
                export  none
            }
            parm {
                name    "mergeframerange"
                baseparm
                label   "Frame Range"
                export  none
            }
            parm {
                name    "mergesubsteps"
                baseparm
                label   "Substeps"
                export  none
            }
            parm {
                name    "mergespecificrange"
                baseparm
                label   "List of Frames"
                export  none
            }
            parm {
                name    "domergewedges"
                baseparm
                label   "Merge Wedges"
                nolabel
                joinnext
                export  none
            }
            parm {
                name    "mergewedges"
                baseparm
                label   "Merge Wedges"
                export  none
            }
            parm {
                name    "mergewedgeidxrange"
                baseparm
                label   "Wedge Range"
                export  none
            }
            parm {
                name    "mergespecificwedges"
                baseparm
                label   "List of Wedges"
                export  none
            }
        }

    }

    group {
        name    "folder3_1"
        label   "Scheduling"

        groupcollapsible {
            name    "folder11"
            label   "Scheduler"
            grouptag { "group_default" "1" }
            grouptag { "group_type" "collapsible" }

            parm {
                name    "topscheduler"
                baseparm
                label   "Scheduler Override"
                export  none
            }
            parm {
                name    "priorityoverride"
                baseparm
                label   "Override Priority"
                nolabel
                joinnext
                export  none
            }
            parm {
                name    "pdg_workitempriorityexpr"
                baseparm
                label   "Node Priority"
                export  none
            }
        }

        groupcollapsible {
            name    "local2"
            label   "Local"
            grouptag { "group_default" "1" }
            grouptag { "group_type" "collapsible" }

            parm {
                name    "cookwhen"
                baseparm
                label   "Cook Batch When"
                export  none
            }
            parm {
                name    "framesperbatch"
                baseparm
                label   "Frames per Batch"
                joinnext
                export  none
            }
            parm {
                name    "local_single"
                label   "One Batch at a Time"
                type    toggle
                default { "0" }
                help    "Enabling this will force one work item to be executed at a time."
                disablewhen "{ timedependent == 0 } { timedependent == 1 cachesim == 1 }"
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            parm {
                name    "local_is_CPU_number_set"
                label   "local_is_CPU_number_set"
                type    toggle
                nolabel
                joinnext
                default { "0" }
                help    "Enabling this will use the CPUs per Task value when deciding the number of CPUs to use per work item. Otherwise the work item will be assumed to consume one CPU."
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            parm {
                name    "local_CPUs_to_use"
                label   "Slots Per Work Item"
                type    integer
                default { "1" }
                help    "The number of Slots consumed by each work item.  This work item will only be run by the scheduler if at least this number of Slots are available.  The total number of Slots available is specified by the 'Total Slots' parm on the scheduler node."
                disablewhen "{ local_is_CPU_number_set == 0 }"
                range   { 1! 64 }
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            parm {
                name    "local_usehoudinimaxthreads"
                label   "local_usehoudinimaxthreads"
                type    toggle
                nolabel
                joinnext
                default { "0" }
                help    "Enabling this will set the HOUDINI_MAXTHREADS environment variable to the value specified in Houdini Max Threads."
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            parm {
                name    "local_houdinimaxthreads"
                label   "Houdini Max Threads"
                type    integer
                default { "0" }
                help    "Maximum number of threads to use for each work item in Houdini. This sets the HOUDINI_MAXTHREADS environment variable value."
                disablewhen "{ local_usehoudinimaxthreads == 0 }"
                range   { 0 10 }
                parmtag { "pdg::scheduler" "" }
                parmtag { "spare_category" "Local" }
            }
            groupsimple {
                name    "folder13"
                label   "Minimum Available Memory"
                grouptag { "group_type" "simple" }

                parm {
                    name    "local_useminfreemem"
                    label   "Rule"
                    type    ordinal
                    default { "0" }
                    menu {
                        "0" "No Minimum"
                        "1" "MB Available"
                        "2" "Percent Available"
                    }
                    parmtag { "pdg::scheduler" "" }
                    parmtag { "script_callback_language" "python" }
                    parmtag { "spare_category" "Local" }
                }
                parm {
                    name    "local_minfreemem"
                    label   "Minimum MB"
                    type    float
                    default { "0" }
                    help    "The minimum available memory in Megabytes.  Available memory is the amount of memory that can be used by a process without going into swap."
                    disablewhen "{ local_useminfreemem != 1 }"
                    range   { 0 128000 }
                    parmtag { "pdg::scheduler" "" }
                    parmtag { "script_callback_language" "python" }
                    parmtag { "spare_category" "Local" }
                }
                parm {
                    name    "local_minfreemempct"
                    label   "Minimum Percent"
                    type    float
                    default { "0" }
                    help    "The minimum available memory as a percentage of the system's total memory."
                    disablewhen "{ local_useminfreemem != 2 }"
                    range   { 0 1 }
                    parmtag { "pdg::scheduler" "" }
                    parmtag { "script_callback_language" "python" }
                    parmtag { "spare_category" "Local" }
                }
            }

        }

    }

    group {
        name    "folder3_2"
        label   "Advanced"

        groupcollapsible {
            name    "folder14"
            label   "Path Construction"
            grouptag { "group_type" "collapsible" }

            parm {
                name    "frame"
                baseparm
                label   "Frame"
                export  none
            }
            parm {
                name    "framestr"
                baseparm
                label   "Frame String"
                export  none
            }
            parm {
                name    "versionstr"
                baseparm
                label   "Version String"
                export  none
            }
            parm {
                name    "wedgestr"
                baseparm
                label   "Wedge String"
                export  none
            }
            parm {
                name    "sepparm2"
                baseparm
                label   "Spacer"
                export  none
            }
            parm {
                name    "cachedir"
                baseparm
                label   "Cache Folder"
                export  none
            }
            parm {
                name    "cachename"
                baseparm
                label   "Cache Name"
                export  none
            }
            parm {
                name    "picture"
                baseparm
                label   "Output File"
                export  none
            }
            parm {
                name    "sepparm6"
                baseparm
                label   "Spacer"
                export  none
            }
            parm {
                name    "descriptivelabel"
                baseparm
                label   "Descriptive Label"
                export  none
            }
        }

    }


--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/karma1.chn"
Content-Type: text/plain

{
    channel f1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../f1\") }
    }
    channel f2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../f2\") }
    }
    channel wedgerangemax {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../wedgerangemax\") }
    }
    channel mergeframerange1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"f1\") }
    }
    channel mergeframerange2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"f2\") }
    }
    channel mergeframerange3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"f3\") }
    }
    channel mergesubsteps {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"substeps\") }
    }
    channel frame {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../frame\") }
    }
    channel picture {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../picture\") }
    }
    channel descriptivelabel {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../descriptivelabel\") }
    }
    channel filemethod {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../filemethod\") }
    }
    channel timedependent {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../timedependent\") }
    }
    channel basename {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../basename\") }
    }
    channel filetype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../filetype\") }
    }
    channel file {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../file\") }
    }
    channel basedir {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../basedir\") }
    }
    channel enableversion {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../enableversion\") }
    }
    channel version {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../version\") }
    }
    channel pdg_cachemode {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = if(ch(\"../../overwriteexisting\")==1,2,0) }
    }
    channel trange {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../trange\") }
    }
    channel f3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../f3\") }
    }
    channel useframeoverride {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../useframeoverride\") }
    }
    channel frameoverride {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../frameoverride\") }
    }
    channel specificrange {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../specificrange\") }
    }
    channel enablewedging {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../enablewedging\") }
    }
    channel wedgerangemin {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../wedgerangemin\") }
    }
    channel specificwedges {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../specificwedges\") }
    }
    channel wedgecount {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../wedgecount\") }
    }
    channel nwedgeattribs {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 value = 1 0 expr = ch(\"../../nwedgeattribs\") }
    }
    channel framesperbatch {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../framesperbatch\") }
    }
    channel framestr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../framestr\") }
    }
    channel versionstr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../versionstr\") }
    }
    channel wedgestr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../wedgestr\") }
    }
    channel cachedir {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../cachedir\") }
    }
    channel cachename {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../../cachename\") }
    }
    channel local_single {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_single\") }
    }
    channel local_is_CPU_number_set {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_is_CPU_number_set\") }
    }
    channel local_CPUs_to_use {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_CPUs_to_use\") }
    }
    channel local_usehoudinimaxthreads {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_is_CPU_number_set\") }
    }
    channel local_houdinimaxthreads {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_CPUs_to_use\") }
    }
    channel local_useminfreemem {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_useminfreemem\") }
    }
    channel local_minfreemem {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_minfreemem\") }
    }
    channel local_minfreemempct {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../local_minfreemempct\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/karma1.parm"
Content-Type: text/plain

{
version 0.8
filemethod	[ 0	locks=0	autoscope=0 ]	(	[ filemethod	0 ] 	)
timedependent	[ 0	locks=0	autoscope=0 ]	(	[ timedependent	1 ] 	)
basename	[ 0	locks=0	autoscope=1 ]	(	[ basename	$OS ] 	)
filetype	[ 0	locks=0	autoscope=0 ]	(	[ filetype	0 ] 	)
file	[ 0	locks=0	autoscope=1 ]	(	[ file	$HIP/render/$OS/$HIPNAME.$OS.$F4.exr ] 	)
openfiledir	[ 0	locks=0 ]	(	0	)
basedir	[ 0	locks=0	autoscope=1 ]	(	[ basedir	$HIP/render ] 	)
openbasedir	[ 0	locks=0 ]	(	0	)
opensequence	[ 0	locks=0 ]	(	0	)
enableversion	[ 0	locks=0	autoscope=0 ]	(	[ enableversion	1 ] 	)
version	[ 0	locks=0	autoscope=0 ]	(	[ version	1 ] 	)
versiondown	[ 0	locks=0 ]	(	0	)
versionup	[ 0	locks=0 ]	(	0	)
sepparm3	[ 0	locks=0 ]	(	)
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	0	)
folder2	[ 0	locks=0	autoscope=0 ]	(	1	)
loppath	[ 0	locks=0	autoscope=0 ]	(	../..	)
pdg_cachemode	[ 0	locks=0	autoscope=0 ]	(	[ pdg_cachemode	0 ] 	)
folder4	[ 0	locks=0	autoscope=0 ]	(	1	)
trange	[ 0	locks=0	autoscope=0 ]	(	[ trange	1 ] 	)
f	[ 0	locks=0	autoscope=0 ]	(	[ f1	0 ] 	[ f2	0 ] 	[ f3	1 ] 	)
fmenu	[ 0	locks=0	autoscope=0 ]	(	"fstartend"	)
useframeoverride	[ 0	locks=0	autoscope=0 ]	(	[ useframeoverride	0 ] 	)
frameoverride	[ 0	locks=0	autoscope=0 ]	(	[ frameoverride	1 ] 	)
specificrange	[ 0	locks=0	autoscope=1 ]	(	[ specificrange	`chs(\"f1\")`-`chs(\"f2\")`:`chs(\"f3\")` ] 	)
folder7	[ 0	locks=0	autoscope=0 ]	(	0	)
enablewedging	[ 0	locks=0	autoscope=0 ]	(	[ enablewedging	0 ] 	)
wrange	[ 0	locks=0	autoscope=0 ]	(	"all"	)
wedgeoverride	[ 0	locks=0	autoscope=0 ]	(	0	)
wedgerange	[ 0	locks=0	autoscope=0 ]	(	[ wedgerangemin	0 ] 	[ wedgerangemax	0 ] 	)
specificwedges	[ 0	locks=0	autoscope=1 ]	(	[ specificwedges	0-`chs(\"wedgecount\")-1` ] 	)
wedgecount	[ 0	locks=0	autoscope=0 ]	(	[ wedgecount	1 ] 	)
nwedgeattribs	[ 0	locks=0	autoscope=0 ]	(	[ nwedgeattribs	0 ] 	)
folder6	[ 0	locks=0	autoscope=0 ]	(	0	)
domergeframes	[ 0	locks=0	autoscope=0 ]	(	"on"	)
mergeframes	[ 0	locks=0	autoscope=0 ]	(	"all"	)
mergeframerange	[ 0	locks=0	autoscope=0 ]	(	[ mergeframerange1	0 ] 	[ mergeframerange2	0 ] 	[ mergeframerange3	0 ] 	)
mergesubsteps	[ 0	locks=0	autoscope=0 ]	(	[ mergesubsteps	0 ] 	)
mergespecificrange	[ 0	locks=0	autoscope=0 ]	(	`chs(\"f1\")`-`chs(\"f2\")`:`chs(\"f3\")`	)
domergewedges	[ 0	locks=0	autoscope=0 ]	(	"off"	)
mergewedges	[ 0	locks=0	autoscope=0 ]	(	"all"	)
mergewedgeidxrange	[ 0	locks=0	autoscope=0 ]	(	0	1	)
mergespecificwedges	[ 0	locks=0	autoscope=0 ]	(	0-1	)
folder1	[ 0	locks=0	autoscope=0 ]	(	1	)
topscheduler	[ 0	locks=0	autoscope=0 ]	(	""	)
priorityoverride	[ 0	locks=0	autoscope=0 ]	(	"off"	)
pdg_workitempriorityexpr	[ 0	locks=0	autoscope=0 ]	(	0	)
local	[ 0	locks=0	autoscope=0 ]	(	1	)
cookwhen	[ 0	locks=0	autoscope=0 ]	(	"1"	)
framesperbatch	[ 0	locks=0	autoscope=0 ]	(	[ framesperbatch	1 ] 	)
folder12	[ 0	locks=0	autoscope=0 ]	(	0	)
frame	[ 0	locks=0	autoscope=0 ]	(	[ frame	0 ] 	)
framestr	[ 0	locks=0	autoscope=1 ]	(	[ framestr	"`ifs(ch(\"timedependent\"),\".\" + padzero(4,floor(ch(\"frame\"))) + ifs(frac(abs(ch(\"frame\"))) > 0, \".\" + substr(ftoa(frac(ch(\"frame\"))) + \"000\", 2, 3),\"\"),\"\")`" ] 	)
versionstr	[ 0	locks=0	autoscope=1 ]	(	[ versionstr	v`chs(\"version\")` ] 	)
wedgestr	[ 0	locks=0	autoscope=1 ]	(	[ wedgestr	"w`pdgattrib(\"wedgeindex\", 0)`" ] 	)
sepparm2	[ 0	locks=0 ]	(	)
cachedir	[ 0	locks=0	autoscope=1 ]	(	[ cachedir	"`chs(\"basedir\") + \"/\" + chs(\"basename\")``ifs(ch(\"enableversion\"), \"/\" + chs(\"versionstr\"),\"\")``ifs(ch(\"enablewedging\"), \"/\" + chs(\"wedgestr\"),\"\")`" ] 	)
cachename	[ 0	locks=0	autoscope=1 ]	(	[ cachename	"`chs(\"basename\")``ifs(ch(\"enableversion\"), \"_\" + chs(\"versionstr\"),\"\")``ifs(ch(\"enablewedging\"), \"_\" + chs(\"wedgestr\"),\"\")``chs(\"framestr\")``chs(\"filetype\")`" ] 	)
picture	[ 0	locks=0	autoscope=1 ]	(	[ picture	"ifs(ch('filemethod'),chs('file'),chs('cachedir') + '/' + chs('cachename'))" ] 	)
sepparm6	[ 0	locks=0 ]	(	)
descriptivelabel	[ 0	locks=0	autoscope=1 ]	(	[ descriptivelabel	"ifs(ch(\"filemethod\"),chsraw(\"file\"),strreplace(strreplace(chs(\"cachename\"),chs(\"basename\"),chsraw(\"basename\")),chs(\"framestr\"),\".\" + '$F' + 4))" ] 	)
folder3	[ 0	locks=0	autoscope=0 ]	(	0	0	0	)
folder5	[ 0	locks=0	autoscope=0 ]	(	1	)
folder8	[ 0	locks=0	autoscope=0 ]	(	1	)
folder9	[ 0	locks=0	autoscope=0 ]	(	0	)
folder10	[ 0	locks=0	autoscope=0 ]	(	1	)
folder11	[ 0	locks=0	autoscope=0 ]	(	1	)
local2	[ 0	locks=0	autoscope=0 ]	(	1	)
local_single	[ 0	locks=0	autoscope=0 ]	(	[ local_single	0 ] 	)
local_is_CPU_number_set	[ 0	locks=0	autoscope=0 ]	(	[ local_is_CPU_number_set	0 ] 	)
local_CPUs_to_use	[ 0	locks=0	autoscope=0 ]	(	[ local_CPUs_to_use	1 ] 	)
local_usehoudinimaxthreads	[ 0	locks=0	autoscope=0 ]	(	[ local_usehoudinimaxthreads	0 ] 	)
local_houdinimaxthreads	[ 0	locks=0	autoscope=0 ]	(	[ local_houdinimaxthreads	0 ] 	)
folder13	[ 0	locks=0	autoscope=0 ]	(	0	)
local_useminfreemem	[ 0	locks=0	autoscope=0 ]	(	[ local_useminfreemem	0 ] 	)
local_minfreemem	[ 0	locks=0	autoscope=0 ]	(	[ local_minfreemem	0 ] 	)
local_minfreemempct	[ 0	locks=0	autoscope=0 ]	(	[ local_minfreemempct	0 ] 	)
folder14	[ 0	locks=0	autoscope=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render/karma1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render.order"
Content-Type: text/plain

3
output0
localscheduler
karma1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_render.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display.init"
Content-Type: text/plain

type = topnet
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display.def"
Content-Type: text/plain

comment ""
position -4.5 4.85
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display.parm"
Content-Type: text/plain

{
version 0.8
cookcontrolssection	[ 0	locks=0 ]	(	0	)
generatestatic	[ 0	locks=0 ]	(	0	)
cookbutton	[ 0	locks=0 ]	(	0	)
dirtybutton	[ 0	locks=0 ]	(	0	)
cancelbutton	[ 0	locks=0 ]	(	0	)
taskgraphsection	[ 0	locks=0 ]	(	0	)
savetaskgraph	[ 0	locks=0 ]	(	0	)
loadtaskgraph	[ 0	locks=0 ]	(	0	)
taskgraphfile	[ 0	locks=0 ]	(	$HIP/$HIPNAME.taskgraph.$F.py	)
taskgraphautosave	[ 0	locks=0 ]	(	"off"	)
taskgraphsaverate	[ 0	locks=0 ]	(	10	)
schedulersection	[ 0	locks=0 ]	(	0	)
topscheduler	[ 0	locks=0 ]	(	localscheduler	)
usedefaultlabel	[ 0	locks=0 ]	(	"off"	)
defaultlabel	[ 0	locks=0 ]	(	$OS.`@pdg_index`	)
sep1	[ 0	locks=0 ]	(	)
regenerationtype	[ 0	locks=0 ]	(	"0"	)
evaluationtime	[ 0	locks=0 ]	(	"0"	)
customtime	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/localscheduler.init"
Content-Type: text/plain

type = localscheduler
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/localscheduler.def"
Content-Type: text/plain

comment ""
position 0 0
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render on highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.478 0.478 0.478 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/localscheduler.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
folder5	[ 0	locks=0 ]	(	0	)
maxprocsmenu	[ 0	locks=0 ]	(	"1"	)
maxprocs	[ 0	locks=0 ]	(	128	)
verbose	[ 0	locks=0 ]	(	"off"	)
pdg_waitforfailures	[ 0	locks=0 ]	(	"off"	)
folder4	[ 0	locks=0 ]	(	0	)
pdg_workingdir	[ 0	locks=0 ]	(	$HIP	)
pdg_workitemdatasource	[ 0	locks=0 ]	(	"0"	)
pdg_compressworkitemdata	[ 0	locks=0 ]	(	"on"	)
pdg_validateoutputs	[ 0	locks=0 ]	(	"on"	)
pdg_checkexpectedoutputs	[ 0	locks=0 ]	(	"on"	)
sepparm2	[ 0	locks=0 ]	(	)
pdg_mapmode	[ 0	locks=0 ]	(	"0"	)
pdg_usemapzone	[ 0	locks=0 ]	(	"off"	)
pdg_mapzone	[ 0	locks=0 ]	(	$PDG_PATHMAP_ZONE	)
sepparm3	[ 0	locks=0 ]	(	)
folder1	[ 0	locks=0 ]	(	0	)
tempdirmenu	[ 0	locks=0 ]	(	"1"	)
tempdirappendpid	[ 0	locks=0 ]	(	"on"	)
tempdircustom	[ 0	locks=0 ]	(	$HOUDINI_TEMP_DIR/$HIPNAME/pdgtemp	)
socketcallbacks	[ 0	locks=0 ]	(	1	)
folder0_2	[ 0	locks=0 ]	(	0	)
local_single	[ 0	locks=0 ]	(	"off"	)
local_is_CPU_number_set	[ 0	locks=0 ]	(	"off"	)
local_CPUs_to_use	[ 0	locks=0 ]	(	1	)
folder6	[ 0	locks=0 ]	(	0	)
local_useminfreemem	[ 0	locks=0 ]	(	"0"	)
local_minfreemem	[ 0	locks=0 ]	(	0	)
local_minfreemempct	[ 0	locks=0 ]	(	0	)
folder2	[ 0	locks=0 ]	(	0	)
local_enabletimeout	[ 0	locks=0 ]	(	"off"	)
local_maxtime	[ 0	locks=0 ]	(	0	)
local_handletimeout	[ 0	locks=0 ]	(	"0"	)
sepparm4	[ 0	locks=0 ]	(	)
local_echandleby	[ 0	locks=0 ]	(	"0"	)
local_echandleall	[ 0	locks=0 ]	(	"on"	)
local_eccustomcode	[ 0	locks=0 ]	(	1	)
sepparm	[ 0	locks=0 ]	(	)
local_maximumretries	[ 0	locks=0 ]	(	3	)
local_addfailcountattr	[ 0	locks=0 ]	(	"off"	)
local_failcountattr	[ 0	locks=0 ]	(	failurecount	)
folder3	[ 0	locks=0 ]	(	0	)
local_usehoudinimaxthreads	[ 0	locks=0 ]	(	"off"	)
local_houdinimaxthreads	[ 0	locks=0 ]	(	0	)
local_requireswindow	[ 0	locks=0 ]	(	"off"	)
local_skippackages	[ 0	locks=0 ]	(	"on"	)
local_envunset	[ 0	locks=0 ]	(	""	)
local_envmulti	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/localscheduler.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/wedge1.init"
Content-Type: text/plain

type = labs::wedge::1.0
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/wedge1.def"
Content-Type: text/plain

comment ""
position -4.5 -0.0902
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	genericgenerator1 0 1 "input1"
}
inputs
{
0 	genericgenerator1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/wedge1.multiparm"
Content-Type: text/plain

10
attrib# ../../attrib#
wedgetype# ../../wedgetype#
minvalue# ../../minvalue#
maxvalue# ../../maxvalue#
randomseed# ../../randomseed#
batchsize# ../../batchsize#
periodsize# ../../periodsize#
geopath# ../../geopath#
values# ../../values#
valuesdefault# ../../valuesdefault#

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/wedge1.chn"
Content-Type: text/plain

{
    channel wedgecount {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../wedgecount\") }
    }
    channel nwedgeattribs {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../nwedgeattribs\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/wedge1.parm"
Content-Type: text/plain

{
version 0.8
wedgecount	[ 0	locks=0 ]	(	[ wedgecount	1 ] 	)
nwedgeattribs	[ 0	locks=0 ]	(	[ nwedgeattribs	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/wedge1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/genericgenerator1.init"
Content-Type: text/plain

type = genericgenerator
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/genericgenerator1.def"
Content-Type: text/plain

comment ""
position -6.5 2.85
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/genericgenerator1.parm"
Content-Type: text/plain

{
version 0.8
processor_0	[ 0	locks=0 ]	(	0	0	0	)
pdg_workitemgeneration	[ 0	locks=0 ]	(	"2"	)
pdg_cachemode	[ 0	locks=0 ]	(	"0"	)
sequential	[ 0	locks=0 ]	(	"off"	)
copyinputs	[ 0	locks=0 ]	(	"off"	)
flattenindices	[ 0	locks=0 ]	(	"off"	)
sepparm2	[ 0	locks=0 ]	(	)
itemcount	[ 0	locks=0 ]	(	1	)
useindex	[ 0	locks=0 ]	(	"off"	)
index	[ 0	locks=0 ]	(	0	)
useframe	[ 0	locks=0 ]	(	"off"	)
frame	[ 0	locks=0 ]	(	0	)
usepriority	[ 0	locks=0 ]	(	"off"	)
priority	[ 0	locks=0 ]	(	0	)
sepparm	[ 0	locks=0 ]	(	)
folder0	[ 0	locks=0 ]	(	0	0	)
usedelay	[ 0	locks=0 ]	(	"off"	)
delay	[ 0	locks=0 ]	(	1	)
pdg_command	[ 0	locks=0 ]	(	""	)
basecommand	[ 0	locks=0 ]	(	""	)
shellcommand	[ 0	locks=0 ]	(	"off"	)
sepparm3	[ 0	locks=0 ]	(	)
extraargs	[ 0	locks=0 ]	(	0	)
expectedoutputsfrom	[ 0	locks=0 ]	(	"0"	)
expectedoutputattr	[ 0	locks=0 ]	(	""	)
useexpectedoutputtag	[ 0	locks=0 ]	(	"off"	)
expectedoutputtag	[ 0	locks=0 ]	(	file	)
expectedoutputfiles	[ 0	locks=0 ]	(	0	)
topscheduler	[ 0	locks=0 ]	(	""	)
addjobparms	[ 0	locks=0 ]	(	0	)
sepparm4	[ 0	locks=0 ]	(	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
pdg_workitempriority	[ 0	locks=0 ]	(	"0"	)
pdg_workitempriorityexpr	[ 0	locks=0 ]	(	0	)
pdgnodedeps	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/genericgenerator1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/switch1.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/switch1.def"
Content-Type: text/plain

comment ""
position -6.5 -3.0902
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	genericgenerator1 0 1 "input1"
1 	wedge1 1 1 "input2"
}
inputs
{
0 	genericgenerator1 0 1
1 	wedge1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/switch1.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 untie  iv ov is os ia oa }

	 length = 0 expr = ch(\"../../enablewedging\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/switch1.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/switch1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.def"
Content-Type: text/plain

comment ""
position -6.5 -7.15
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render off highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	switch1 2 1 "input1"
}
inputs
{
0 	switch1 0 1
}
stat
{
  create -1
  modify -1
  author ati@pop-os.localdomain
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
pdg_workitemlabel	[ 0	locks=0 ]	(	"0"	)
pdg_workitemlabelexpr	[ 0	locks=0 ]	(	""	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display.order"
Content-Type: text/plain

5
localscheduler
wedge1
genericgenerator1
switch1
output0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/topnet_display.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

6
karmarenderproperties
rop_usdrender
output0
Input_Stage
topnet_render
topnet_display

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
