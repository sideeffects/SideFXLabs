MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Driver

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = labs::3d_facebook_image
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

comment ""
position -0.473642 4.50615
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1.init"
Content-Type: text/plain

type = cop2net
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1.def"
Content-Type: text/plain

comment ""
position 2.8329 2.6955
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@LAPTOP-P8R7FBPF
  access 0777
}
color UT_Color RGB 0.5 0.5 0.35 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1.parm"
Content-Type: text/plain

{
version 0.8
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/OpenGL_Bake.init"
Content-Type: text/plain

type = file
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/OpenGL_Bake.def"
Content-Type: text/plain

comment ""
position -4.0587 2.25225
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault off exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@LAPTOP-P8R7FBPF
  access 0777
}
color UT_Color RGB 0.5 0.7 0.6 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/OpenGL_Bake.chn"
Content-Type: text/plain

{
    channel aspect {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $CPIXA }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/OpenGL_Bake.parm"
Content-Type: text/plain

{
version 0.8
stdswitcher	[ 0	locks=0 ]	(	0	0	0	0	)
filename	[ 0	locks=0 ]	(	`chs(\"../../opengl3/picture\")`	"cinspace lin cinlut \"\" cinwhite 685 cingamma 0.6"	)
nodename	[ 0	locks=0 ]	(	"userdef"	)
reload	[ 0	locks=0 ]	(	0	)
subframes	[ 0	locks=0 ]	(	"off"	)
overridesize	[ 0	locks=0 ]	(	"natural"	)
size	[ 0	locks=0 ]	(	1280	720	)
sizemenu	[ 0	locks=0 ]	(	0	)
filter	[ 0	locks=0 ]	(	box	)
overrideaspect	[ 0	locks=0 ]	(	"off"	)
aspect	[ 0	locks=0 ]	(	[ aspect	0 ] 	)
flipy	[ 0	locks=0 ]	(	"off"	)
overridedepth	[ 0	locks=0 ]	(	"natural"	)
linearize	[ 0	locks=0 ]	(	"on"	)
colorspace	[ 0	locks=0 ]	(	"auto"	)
depth	[ 0	locks=0 ]	(	"float32"	)
depthmenu	[ 0	locks=0 ]	(	0	)
usebwpoints	[ 0	locks=0 ]	(	"off"	)
bwpoints	[ 0	locks=0 ]	(	0	1	)
detectrange	[ 0	locks=0 ]	(	"off"	)
manualdetect	[ 0	locks=0 ]	(	0	)
singleimage	[ 0	locks=0 ]	(	"on"	)
startframe	[ 0	locks=0 ]	(	1	)
start	[ 0	locks=0 ]	(	1	)
length	[ 0	locks=0 ]	(	240	)
missingfr	[ 0	locks=0 ]	(	"closest"	)
warnmissing	[ 0	locks=0 ]	(	"on"	)
proxyenable	[ 0	locks=0 ]	(	"on"	)
proxy2	[ 0	locks=0 ]	(	""	)
proxy4	[ 0	locks=0 ]	(	""	)
proxy8	[ 0	locks=0 ]	(	""	)
customprx1	[ 0	locks=0 ]	(	"z16"	)
customfile1	[ 0	locks=0 ]	(	""	)
customprx2	[ 0	locks=0 ]	(	"z32"	)
customfile2	[ 0	locks=0 ]	(	""	)
customprx3	[ 0	locks=0 ]	(	"z3"	)
customfile3	[ 0	locks=0 ]	(	""	)
effectamount	[ 0	locks=0 ]	(	1	)
maskplane	[ 0	locks=0 ]	(	A	)
maskresize	[ 0	locks=0 ]	(	"off"	)
maskinvert	[ 0	locks=0 ]	(	"off"	)
preextend	[ 0	locks=0 ]	(	"black"	)
prehold	[ 0	locks=0 ]	(	0	)
postextend	[ 0	locks=0 ]	(	"black"	)
posthold	[ 0	locks=0 ]	(	0	)
projdepth	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/OpenGL_Bake.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/OpenGL_Bake.cop2"
Content-Type: text/plain

2
30
0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/OUT_Depth.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/OUT_Depth.def"
Content-Type: text/plain

comment ""
position -2.58838 -3.82031
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display on render off highlight off unload off savedata off compress off colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	equalize1 1 1 "input1"
}
inputs
{
0 	equalize1 0 1
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@LAPTOP-P8R7FBPF
  access 0777
}
color UT_Color RGB 0.7 0.7 0.5 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/OUT_Depth.parm"
Content-Type: text/plain

{
version 0.8
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/OUT_Depth.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/OUT_Depth.cop2"
Content-Type: text/plain

2
0
0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/delete1.init"
Content-Type: text/plain

type = delete
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/delete1.def"
Content-Type: text/plain

comment ""
position -2.58838 -0.820314
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch1 1 1 "input1"
}
inputs
{
0 	switch1 0 1
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@LAPTOP-P8R7FBPF
  access 0777
}
color UT_Color RGB 0.7 0.7 0.5 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/delete1.parm"
Content-Type: text/plain

{
version 0.8
stdswitcher	[ 0	locks=0 ]	(	0	)
delete	[ 0	locks=0 ]	(	"nonscoped"	)
scope	[ 0	locks=0 ]	(	Pz	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/delete1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/delete1.cop2"
Content-Type: text/plain

2
0
0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/Mantra_Bake.init"
Content-Type: text/plain

type = file
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/Mantra_Bake.def"
Content-Type: text/plain

comment ""
position 0.120194 2.25225
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault off exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@LAPTOP-P8R7FBPF
  access 0777
}
color UT_Color RGB 0.5 0.7 0.6 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/Mantra_Bake.chn"
Content-Type: text/plain

{
    channel aspect {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $CPIXA }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/Mantra_Bake.parm"
Content-Type: text/plain

{
version 0.8
stdswitcher	[ 0	locks=0 ]	(	0	0	0	0	)
filename	[ 0	locks=0 ]	(	`chs(\"../../mantra1/vm_picture\")`	`chs(\"../../mantra1/vm_picture\")`	)
nodename	[ 0	locks=0 ]	(	"userdef"	)
reload	[ 0	locks=0 ]	(	0	)
subframes	[ 0	locks=0 ]	(	"off"	)
overridesize	[ 0	locks=0 ]	(	"natural"	)
size	[ 0	locks=0 ]	(	1280	720	)
sizemenu	[ 0	locks=0 ]	(	0	)
filter	[ 0	locks=0 ]	(	box	)
overrideaspect	[ 0	locks=0 ]	(	"off"	)
aspect	[ 0	locks=0 ]	(	[ aspect	0 ] 	)
flipy	[ 0	locks=0 ]	(	"off"	)
overridedepth	[ 0	locks=0 ]	(	"natural"	)
linearize	[ 0	locks=0 ]	(	"on"	)
colorspace	[ 0	locks=0 ]	(	"auto"	)
depth	[ 0	locks=0 ]	(	"float32"	)
depthmenu	[ 0	locks=0 ]	(	0	)
usebwpoints	[ 0	locks=0 ]	(	"off"	)
bwpoints	[ 0	locks=0 ]	(	0	1	)
detectrange	[ 0	locks=0 ]	(	"off"	)
manualdetect	[ 0	locks=0 ]	(	0	)
singleimage	[ 0	locks=0 ]	(	"on"	)
startframe	[ 0	locks=0 ]	(	1	)
start	[ 0	locks=0 ]	(	1	)
length	[ 0	locks=0 ]	(	240	)
missingfr	[ 0	locks=0 ]	(	"closest"	)
warnmissing	[ 0	locks=0 ]	(	"on"	)
proxyenable	[ 0	locks=0 ]	(	"on"	)
proxy2	[ 0	locks=0 ]	(	""	)
proxy4	[ 0	locks=0 ]	(	""	)
proxy8	[ 0	locks=0 ]	(	""	)
customprx1	[ 0	locks=0 ]	(	"z16"	)
customfile1	[ 0	locks=0 ]	(	""	)
customprx2	[ 0	locks=0 ]	(	"z32"	)
customfile2	[ 0	locks=0 ]	(	""	)
customprx3	[ 0	locks=0 ]	(	"z3"	)
customfile3	[ 0	locks=0 ]	(	""	)
effectamount	[ 0	locks=0 ]	(	1	)
maskplane	[ 0	locks=0 ]	(	A	)
maskresize	[ 0	locks=0 ]	(	"off"	)
maskinvert	[ 0	locks=0 ]	(	"off"	)
preextend	[ 0	locks=0 ]	(	"black"	)
prehold	[ 0	locks=0 ]	(	0	)
postextend	[ 0	locks=0 ]	(	"black"	)
posthold	[ 0	locks=0 ]	(	0	)
projdepth	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/Mantra_Bake.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/Mantra_Bake.cop2"
Content-Type: text/plain

2
231
0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/switch1.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/switch1.def"
Content-Type: text/plain

comment ""
position -2.58838 0.179686
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	OpenGL_Bake 0 1 "input1"
2 	Mantra_Bake 0 1 "input2"
}
inputs
{
0 	OpenGL_Bake 0 1
1 	Mantra_Bake 0 1
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@LAPTOP-P8R7FBPF
  access 0777
}
color UT_Color RGB 0.7 0.7 0.5 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/switch1.chn"
Content-Type: text/plain

{
    channel index {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../mRenderEngine\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/switch1.parm"
Content-Type: text/plain

{
version 0.8
stdswitcher	[ 0	locks=0 ]	(	0	)
index	[ 0	locks=0 ]	(	[ index	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/switch1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/switch1.cop2"
Content-Type: text/plain

2
1
0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/equalize1.init"
Content-Type: text/plain

type = equalize
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/equalize1.def"
Content-Type: text/plain

comment ""
position -2.58838 -2.82031
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render on highlight off unload off savedata off compress off colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	rename1 1 1 "input1"
}
inputs
{
0 	rename1 0 1
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/equalize1.parm"
Content-Type: text/plain

{
version 0.8
stdswitcher	[ 0	locks=0 ]	(	0	0	0	)
op	[ 0	locks=0 ]	(	"histogram"	)
fit	[ 0	locks=0 ]	(	"scale"	)
lum	[ 0	locks=0 ]	(	"lum"	)
black	[ 0	locks=0 ]	(	1	)
white	[ 0	locks=0 ]	(	0	)
average	[ 0	locks=0 ]	(	0.5	)
before	[ 0	locks=0 ]	(	1	)
after	[ 0	locks=0 ]	(	1	)
effect	[ 0	locks=0 ]	(	1	)
effectamount	[ 0	locks=0 ]	(	1	)
maskinput	[ 0	locks=0 ]	(	"mask"	)
maskplane	[ 0	locks=0 ]	(	A	)
maskresize	[ 0	locks=0 ]	(	"off"	)
maskinvert	[ 0	locks=0 ]	(	"off"	)
scopergba	[ 0	locks=0 ]	(	7	)
pscope	[ 0	locks=0 ]	(	""	)
fscope	[ 0	locks=0 ]	(	"all"	)
frange	[ 0	locks=0 ]	(	1	1	)
fdropoff	[ 0	locks=0 ]	(	0	0	)
fdropfunc	[ 0	locks=0 ]	(	"linear"	)
foutside	[ 0	locks=0 ]	(	0	)
flist	[ 0	locks=0 ]	(	*	)
fmenu	[ 0	locks=0 ]	(	"scopeall"	)
fautoadjust	[ 0	locks=0 ]	(	"on"	)
currange	[ 0	locks=0 ]	(	1	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/equalize1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/equalize1.cop2"
Content-Type: text/plain

2
0
0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/mantra_color.init"
Content-Type: text/plain

type = rop_comp
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/mantra_color.def"
Content-Type: text/plain

comment ""
position 0.120194 -4.82031
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	Mantra_Bake 0 1 "input1"
}
inputs
{
0 	Mantra_Bake 0 1
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.65 0.4 0.5 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/mantra_color.parm"
Content-Type: text/plain

{
version 0.8
execute	[ 0	locks=0 ]	(	0	)
renderdialog	[ 0	locks=0 ]	(	0	)
trange	[ 0	locks=0 ]	(	"off"	)
f	[ 0	locks=0 ]	(	1	240	1	)
take	[ 0	locks=0 ]	(	_current_	)
copswitcher	[ 0	locks=0 ]	(	0	0	0	0	0	)
coppath	[ 0	locks=0 ]	(	../../cop2net1/Mantra_Bake	)
tres	[ 0	locks=0 ]	(	"natural"	)
res	[ 0	locks=0 ]	(	1280	720	)
resmenu	[ 0	locks=0 ]	(	0	)
copoutput	[ 0	locks=0 ]	(	`chs(\"../../picture\")`	)
mkpath	[ 0	locks=0 ]	(	"on"	)
color	[ 0	locks=0 ]	(	C	)
alpha	[ 0	locks=0 ]	(	""	)
scopeplanes	[ 0	locks=0 ]	(	"C A"	)
convertcolorspace	[ 0	locks=0 ]	(	"on"	)
gamma	[ 0	locks=0 ]	(	1	)
lut	[ 0	locks=0 ]	(	""	)
framedepend	[ 0	locks=0 ]	(	"off"	)
batchmode	[ 0	locks=0 ]	(	"off"	)
batchsize	[ 0	locks=0 ]	(	2	)
reloadfiles	[ 0	locks=0 ]	(	"on"	)
outputarea	[ 0	locks=0 ]	(	"frame"	)
pixelcrop	[ 0	locks=0 ]	(	0	0	1279	719	)
uvcrop	[ 0	locks=0 ]	(	0	0	1	1	)
limitcanvaspixels	[ 0	locks=0 ]	(	"on"	)
canvaspixels	[ 0	locks=0 ]	(	64	)
limitcanvaspercent	[ 0	locks=0 ]	(	"off"	)
canvaspercent	[ 0	locks=0 ]	(	10	)
copaux1	[ 0	locks=0 ]	(	""	)
color1	[ 0	locks=0 ]	(	C	)
alpha1	[ 0	locks=0 ]	(	A	)
scopeplanes1	[ 0	locks=0 ]	(	"C A"	)
copaux2	[ 0	locks=0 ]	(	""	)
color2	[ 0	locks=0 ]	(	C	)
alpha2	[ 0	locks=0 ]	(	A	)
scopeplanes2	[ 0	locks=0 ]	(	"C A"	)
copaux3	[ 0	locks=0 ]	(	""	)
color3	[ 0	locks=0 ]	(	C	)
alpha3	[ 0	locks=0 ]	(	A	)
scopeplanes3	[ 0	locks=0 ]	(	"C A"	)
copaux4	[ 0	locks=0 ]	(	""	)
color4	[ 0	locks=0 ]	(	C	)
alpha4	[ 0	locks=0 ]	(	A	)
scopeplanes4	[ 0	locks=0 ]	(	"C A"	)
copaux5	[ 0	locks=0 ]	(	""	)
color5	[ 0	locks=0 ]	(	C	)
alpha5	[ 0	locks=0 ]	(	A	)
scopeplanes5	[ 0	locks=0 ]	(	"C A"	)
vm_image_artist	[ 0	locks=0 ]	(	""	)
vm_image_comment	[ 0	locks=0 ]	(	""	)
vm_image_hostname	[ 0	locks=0 ]	(	""	)
vm_image_mplay_label	[ 0	locks=0 ]	(	""	)
vm_image_mplay_gamma	[ 0	locks=0 ]	(	1	)
vm_image_jpeg_quality	[ 0	locks=0 ]	(	100	)
vm_image_tiff_compression	[ 0	locks=0 ]	(	"LZW"	)
vm_image_exr_compression	[ 0	locks=0 ]	(	"piz"	)
pngtga_alpha_multiplication	[ 0	locks=0 ]	(	"premult"	)
tprerender	[ 0	locks=0 ]	(	"on"	)
prerender	[ 0	locks=0 ]	(	""	)
lprerender	[ 0	locks=0 ]	(	hscript	)
tpreframe	[ 0	locks=0 ]	(	"on"	)
preframe	[ 0	locks=0 ]	(	""	)
lpreframe	[ 0	locks=0 ]	(	hscript	)
tpostframe	[ 0	locks=0 ]	(	"on"	)
postframe	[ 0	locks=0 ]	(	""	)
lpostframe	[ 0	locks=0 ]	(	hscript	)
tpostrender	[ 0	locks=0 ]	(	"on"	)
postrender	[ 0	locks=0 ]	(	""	)
lpostrender	[ 0	locks=0 ]	(	hscript	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/mantra_color.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/depth.init"
Content-Type: text/plain

type = rop_comp
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/depth.def"
Content-Type: text/plain

comment ""
position -2.58838 -4.82031
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	OUT_Depth 1 1 "input1"
}
inputs
{
0 	OUT_Depth 0 1
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.65 0.4 0.5 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/depth.chn"
Content-Type: text/plain

{
    channel copoutput {
      lefttype = extend
      righttype = extend
      defaultString = \"$HIP/render/$HIPNAME.$OS.$F4.exr\"
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = "import hou

destination = hou.parm(\"../../picture\").evalAsString()
extension = destination.split(\".\")

return \".\".join(extension[:-1])+\"_depth.\"+extension[-1]" language = python }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/depth.parm"
Content-Type: text/plain

{
version 0.8
execute	[ 0	locks=0 ]	(	0	)
renderdialog	[ 0	locks=0 ]	(	0	)
trange	[ 0	locks=0 ]	(	"off"	)
f	[ 0	locks=0 ]	(	1	240	1	)
take	[ 0	locks=0 ]	(	_current_	)
copswitcher	[ 0	locks=0 ]	(	0	0	0	0	0	)
coppath	[ 0	locks=0 ]	(	../../cop2net1/OUT_Depth	)
tres	[ 0	locks=0 ]	(	"natural"	)
res	[ 0	locks=0 ]	(	1280	720	)
resmenu	[ 0	locks=0 ]	(	0	)
copoutput	[ 0	locks=0	autoscope=1	autosel=4294967295 ]	(	[ copoutput	$HIP/render/$HIPNAME.$OS.$F4.exr ] 	)
mkpath	[ 0	locks=0 ]	(	"on"	)
color	[ 0	locks=0 ]	(	C	)
alpha	[ 0	locks=0 ]	(	A	)
scopeplanes	[ 0	locks=0 ]	(	"C A"	)
convertcolorspace	[ 0	locks=0 ]	(	"on"	)
gamma	[ 0	locks=0 ]	(	1	)
lut	[ 0	locks=0 ]	(	""	)
framedepend	[ 0	locks=0 ]	(	"off"	)
batchmode	[ 0	locks=0 ]	(	"off"	)
batchsize	[ 0	locks=0 ]	(	2	)
reloadfiles	[ 0	locks=0 ]	(	"on"	)
outputarea	[ 0	locks=0 ]	(	"frame"	)
pixelcrop	[ 0	locks=0 ]	(	0	0	1279	719	)
uvcrop	[ 0	locks=0 ]	(	0	0	1	1	)
limitcanvaspixels	[ 0	locks=0 ]	(	"on"	)
canvaspixels	[ 0	locks=0 ]	(	64	)
limitcanvaspercent	[ 0	locks=0 ]	(	"off"	)
canvaspercent	[ 0	locks=0 ]	(	10	)
copaux1	[ 0	locks=0 ]	(	""	)
color1	[ 0	locks=0 ]	(	C	)
alpha1	[ 0	locks=0 ]	(	A	)
scopeplanes1	[ 0	locks=0 ]	(	"C A"	)
copaux2	[ 0	locks=0 ]	(	""	)
color2	[ 0	locks=0 ]	(	C	)
alpha2	[ 0	locks=0 ]	(	A	)
scopeplanes2	[ 0	locks=0 ]	(	"C A"	)
copaux3	[ 0	locks=0 ]	(	""	)
color3	[ 0	locks=0 ]	(	C	)
alpha3	[ 0	locks=0 ]	(	A	)
scopeplanes3	[ 0	locks=0 ]	(	"C A"	)
copaux4	[ 0	locks=0 ]	(	""	)
color4	[ 0	locks=0 ]	(	C	)
alpha4	[ 0	locks=0 ]	(	A	)
scopeplanes4	[ 0	locks=0 ]	(	"C A"	)
copaux5	[ 0	locks=0 ]	(	""	)
color5	[ 0	locks=0 ]	(	C	)
alpha5	[ 0	locks=0 ]	(	A	)
scopeplanes5	[ 0	locks=0 ]	(	"C A"	)
vm_image_artist	[ 0	locks=0 ]	(	""	)
vm_image_comment	[ 0	locks=0 ]	(	""	)
vm_image_hostname	[ 0	locks=0 ]	(	""	)
vm_image_mplay_label	[ 0	locks=0 ]	(	""	)
vm_image_mplay_gamma	[ 0	locks=0 ]	(	1	)
vm_image_jpeg_quality	[ 0	locks=0 ]	(	100	)
vm_image_tiff_compression	[ 0	locks=0 ]	(	"LZW"	)
vm_image_exr_compression	[ 0	locks=0 ]	(	"piz"	)
pngtga_alpha_multiplication	[ 0	locks=0 ]	(	"premult"	)
tprerender	[ 0	locks=0 ]	(	"on"	)
prerender	[ 0	locks=0 ]	(	""	)
lprerender	[ 0	locks=0 ]	(	hscript	)
tpreframe	[ 0	locks=0 ]	(	"on"	)
preframe	[ 0	locks=0 ]	(	""	)
lpreframe	[ 0	locks=0 ]	(	hscript	)
tpostframe	[ 0	locks=0 ]	(	"on"	)
postframe	[ 0	locks=0 ]	(	""	)
lpostframe	[ 0	locks=0 ]	(	hscript	)
tpostrender	[ 0	locks=0 ]	(	"on"	)
postrender	[ 0	locks=0 ]	(	""	)
lpostrender	[ 0	locks=0 ]	(	hscript	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/depth.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/rename1.init"
Content-Type: text/plain

type = rename
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/rename1.def"
Content-Type: text/plain

comment ""
position -2.58838 -1.82031
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	delete1 1 1 "input1"
}
inputs
{
0 	delete1 0 1
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.7 0.7 0.5 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/rename1.parm"
Content-Type: text/plain

{
version 0.8
stdswitcher	[ 0	locks=0 ]	(	0	)
from	[ 0	locks=0 ]	(	Pz	)
to	[ 0	locks=0 ]	(	C	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/rename1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1/rename1.cop2"
Content-Type: text/plain

2
0
0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1.order"
Content-Type: text/plain

9
OpenGL_Bake
OUT_Depth
delete1
Mantra_Bake
switch1
equalize1
mantra_color
depth
rename1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/cop2net1.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/opengl2.init"
Content-Type: text/plain

type = opengl
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/opengl2.def"
Content-Type: text/plain

comment ""
position -0.827471 4.92897
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	opengl3 1 1 "input1"
}
inputs
{
0 	opengl3 0 1
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@LAPTOP-P8R7FBPF
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/opengl2.chn"
Content-Type: text/plain

{
    channel picture {
      lefttype = extend
      righttype = extend
      defaultString = \"$HIP/temp/color.exr\"
      flags = 0
      segment { length = 0 expr = chs(\"../picture\") }
    }
    channel scenepath {
      lefttype = extend
      righttype = extend
      defaultString = \"/obj\"
      flags = 0
      segment { length = 0 expr = chsop(\"../scenepath\") }
    }
    channel sopsource {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../sopsource\") }
    }
    channel vobjects {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chsop(\"../vobjects\") }
    }
    channel forceobjects {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../forceobjects\") }
    }
    channel excludeobjects {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../excludeobjects\") }
    }
    channel alights {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chsop(\"../alights\") }
    }
    channel forcelights {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../forcelights\") }
    }
    channel excludelights {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../excludelights\") }
    }
    channel soho_initsim {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../soho_initsim\") }
    }
    channel soho_viewport_menu {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../soho_viewport_menu\") }
    }
    channel tres {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../tres\") }
    }
    channel res1 {
      lefttype = extend
      righttype = extend
      default = 640
      flags = 0
      segment { length = 0 value = 640 640 expr = ch(\"../res1\") }
    }
    channel res2 {
      lefttype = extend
      righttype = extend
      default = 480
      flags = 0
      segment { length = 0 value = 480 480 expr = ch(\"../res2\") }
    }
    channel resmenu {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../resmenu\") }
    }
    channel aspect {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../aspect\") }
    }
    channel bgimage {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../bgimage\") }
    }
    channel vpcomment {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../vpcomment\") }
    }
    channel mkpath {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../mkpath\") }
    }
    channel saveretry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../saveretry\") }
    }
    channel imagetype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../imagetype\") }
    }
    channel colorcorrect {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../colorcorrect\") }
    }
    channel gamma {
      lefttype = extend
      righttype = extend
      default = 2.2000000000000002
      flags = 0
      segment { length = 0 value = 2.2000000000000002 2.2000000000000002 expr = ch(\"../gamma\") }
    }
    channel lut {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../lut\") }
    }
    channel ociocolorspace {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../ociocolorspace\") }
    }
    channel ociolooks {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../ociolooks\") }
    }
    channel vm_image_artist {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_image_artist\") }
    }
    channel vm_image_comment {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_image_comment\") }
    }
    channel vm_image_hostname {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_image_hostname\") }
    }
    channel vm_image_mplay_label {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_image_mplay_label\") }
    }
    channel vm_image_mplay_gamma {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_image_mplay_gamma\") }
    }
    channel vm_image_jpeg_quality {
      lefttype = extend
      righttype = extend
      default = 100
      flags = 0
      segment { length = 0 value = 100 100 expr = ch(\"../vm_image_jpeg_quality\") }
    }
    channel vm_image_tiff_compression {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_image_tiff_compression\") }
    }
    channel vm_image_exr_compression {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../vm_image_exr_compression\") }
    }
    channel aamode {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../aamode\") }
    }
    channel usehdr {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../usehdr\") }
    }
    channel stereo {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../stereo\") }
    }
    channel shadingmode {
      lefttype = extend
      righttype = extend
      default = 6
      flags = 0
      segment { length = 0 value = 6 6 expr = ch(\"../shadingmode\") }
    }
    channel usetextures {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../usetextures\") }
    }
    channel hqlighting {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../hqlighting\") }
    }
    channel lightsamples {
      lefttype = extend
      righttype = extend
      default = 8
      flags = 0
      segment { length = 0 value = 8 8 expr = ch(\"../lightsamples\") }
    }
    channel shadows {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../shadows\") }
    }
    channel shadowquality {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../shadowquality\") }
    }
    channel shadowmap {
      lefttype = extend
      righttype = extend
      default = 2048
      flags = 0
      segment { length = 0 value = 2048 2048 expr = ch(\"../shadowmap\") }
    }
    channel ambocclusion {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ambocclusion\") }
    }
    channel ambquality {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../ambquality\") }
    }
    channel transparency {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../transparency\") }
    }
    channel transquality {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../transquality\") }
    }
    channel dof {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../dof\") }
    }
    channel motionblur {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../motionblur\") }
    }
    channel motionblurframes {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../motionblurframes\") }
    }
    channel displacement {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../displacement\") }
    }
    channel displacequality {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../displacequality\") }
    }
    channel reflection {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../reflection\") }
    }
    channel minreflection {
      lefttype = extend
      righttype = extend
      default = 0.050000000000000003
      flags = 0
      segment { length = 0 value = 0.050000000000000003 0.050000000000000003 expr = ch(\"../minreflection\") }
    }
    channel hdrreflection {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../hdrreflection\") }
    }
    channel reflectionsize {
      lefttype = extend
      righttype = extend
      default = 512
      flags = 0
      segment { length = 0 value = 512 512 expr = ch(\"../reflectionsize\") }
    }
    channel volumequality {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../volumequality\") }
    }
    channel lod {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../lod\") }
    }
    channel wirewidth {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../wirewidth\") }
    }
    channel wireblend {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../wireblend\") }
    }
    channel particle {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../particle\") }
    }
    channel pointsize {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../pointsize\") }
    }
    channel discsize {
      lefttype = extend
      righttype = extend
      default = 0.050000000000000003
      flags = 0
      segment { length = 0 value = 0.050000000000000003 0.050000000000000003 expr = ch(\"../discsize\") }
    }
    channel orientton {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../orientton\") }
    }
    channel usesprites {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../usesprites\") }
    }
    channel usegeocolor {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../usegeocolor\") }
    }
    channel tex2dlimit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../tex2dlimit\") }
    }
    channel tex2dres {
      lefttype = extend
      righttype = extend
      default = 2048
      flags = 0
      segment { length = 0 value = 2048 2048 expr = ch(\"../tex2dres\") }
    }
    channel tex2dformat {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tex2dformat\") }
    }
    channel tex3dlimit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../tex3dlimit\") }
    }
    channel tex3dres {
      lefttype = extend
      righttype = extend
      default = 384
      flags = 0
      segment { length = 0 value = 384 384 expr = ch(\"../tex3dres\") }
    }
    channel tex3dformat {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../tex3dformat\") }
    }
    channel texmemlimit {
      lefttype = extend
      righttype = extend
      default = 512
      flags = 0
      segment { length = 0 value = 512 512 expr = ch(\"../texmemlimit\") }
    }
    channel spritetexmaxresx {
      lefttype = extend
      righttype = extend
      default = 128
      flags = 0
      segment { length = 0 value = 128 128 expr = ch(\"../spritetexmaxresx\") }
    }
    channel spritetexmaxresy {
      lefttype = extend
      righttype = extend
      default = 128
      flags = 0
      segment { length = 0 value = 128 128 expr = ch(\"../spritetexmaxresy\") }
    }
    channel instancepercent {
      lefttype = extend
      righttype = extend
      default = 100
      flags = 0
      segment { length = 0 value = 100 100 expr = ch(\"../instancepercent\") }
    }
    channel instancelimit {
      lefttype = extend
      righttype = extend
      default = 20
      flags = 0
      segment { length = 0 value = 20 20 expr = ch(\"../instancelimit\") }
    }
    channel instancestandin {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../instancestandin\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/opengl2.parm"
Content-Type: text/plain

{
version 0.8
execute	[ 0	locks=0 ]	(	0	)
renderdialog	[ 0	locks=0 ]	(	0	)
trange	[ 0	locks=0 ]	(	"off"	)
f	[ 0	locks=0 ]	(	1	240	1	)
take	[ 0	locks=0 ]	(	_current_	)
stdswitch	[ 0	locks=0 ]	(	0	0	0	0	0	0	0	)
opsource	[ 0	locks=0 ]	(	"obj"	)
camera	[ 0	locks=0 ]	(	`chsop(\"../camera\")`	)
scenepath	[ 0	locks=0 ]	(	[ scenepath	/obj ] 	)
sopsource	[ 0	locks=0 ]	(	[ sopsource	1 ] 	)
vobjects	[ 0	locks=0 ]	(	[ vobjects	* ] 	)
forceobjects	[ 0	locks=0 ]	(	[ forceobjects	"" ] 	)
excludeobjects	[ 0	locks=0 ]	(	[ excludeobjects	"" ] 	)
alights	[ 0	locks=0 ]	(	[ alights	* ] 	)
forcelights	[ 0	locks=0 ]	(	[ forcelights	"" ] 	)
excludelights	[ 0	locks=0 ]	(	[ excludelights	"" ] 	)
loppath	[ 0	locks=0 ]	(	""	)
cameraprim	[ 0	locks=0 ]	(	""	)
purposerender	[ 0	locks=0 ]	(	"off"	)
purposeproxy	[ 0	locks=0 ]	(	"on"	)
purposeguide	[ 0	locks=0 ]	(	"off"	)
soho_initsim	[ 0	locks=0 ]	(	[ soho_initsim	0 ] 	)
soho_viewport_menu	[ 0	locks=0 ]	(	[ soho_viewport_menu	1 ] 	)
tres	[ 0	locks=0 ]	(	[ tres	0 ] 	)
res	[ 0	locks=0 ]	(	[ res1	1280 ] 	[ res2	720 ] 	)
resmenu	[ 0	locks=0 ]	(	[ resmenu	0 ] 	)
aspect	[ 0	locks=0 ]	(	[ aspect	1 ] 	)
tsheet	[ 0	locks=0 ]	(	"off"	)
sheetsize	[ 0	locks=0 ]	(	2	2	)
bgimage	[ 0	locks=0 ]	(	[ bgimage	"" ] 	)
vpcomment	[ 0	locks=0 ]	(	[ vpcomment	"" ] 	)
picture	[ 0	locks=0 ]	(	[ picture	ip ] 	)
mkpath	[ 0	locks=0 ]	(	[ mkpath	1 ] 	)
saveretry	[ 0	locks=0 ]	(	[ saveretry	0 ] 	)
imagetype	[ 0	locks=0 ]	(	[ imagetype	0 ] 	)
colorcorrect	[ 0	locks=0 ]	(	[ colorcorrect	1 ] 	)
gamma	[ 0	locks=0 ]	(	[ gamma	1 ] 	)
lut	[ 0	locks=0 ]	(	[ lut	"" ] 	)
ociocolorspace	[ 0	locks=0 ]	(	[ ociocolorspace	"" ] 	)
ociolooks	[ 0	locks=0 ]	(	[ ociolooks	"" ] 	)
vm_image_artist	[ 0	locks=0 ]	(	[ vm_image_artist	"" ] 	)
vm_image_comment	[ 0	locks=0 ]	(	[ vm_image_comment	"" ] 	)
vm_image_hostname	[ 0	locks=0 ]	(	[ vm_image_hostname	"" ] 	)
vm_image_mplay_label	[ 0	locks=0 ]	(	[ vm_image_mplay_label	"" ] 	)
vm_image_mplay_gamma	[ 0	locks=0 ]	(	[ vm_image_mplay_gamma	1 ] 	)
vm_image_jpeg_quality	[ 0	locks=0 ]	(	[ vm_image_jpeg_quality	100 ] 	)
vm_image_tiff_compression	[ 0	locks=0 ]	(	[ vm_image_tiff_compression	1 ] 	)
vm_image_exr_compression	[ 0	locks=0 ]	(	[ vm_image_exr_compression	4 ] 	)
aamode	[ 0	locks=0 ]	(	[ aamode	2 ] 	)
usehdr	[ 0	locks=0 ]	(	[ usehdr	1 ] 	)
stereo	[ 0	locks=0 ]	(	[ stereo	1 ] 	)
shadingmode	[ 0	locks=0 ]	(	[ shadingmode	6 ] 	)
usetextures	[ 0	locks=0 ]	(	[ usetextures	1 ] 	)
hqlighting	[ 0	locks=0 ]	(	[ hqlighting	1 ] 	)
lightsamples	[ 0	locks=0 ]	(	[ lightsamples	8 ] 	)
shadows	[ 0	locks=0 ]	(	[ shadows	1 ] 	)
shadowquality	[ 0	locks=0 ]	(	[ shadowquality	3 ] 	)
shadowmap	[ 0	locks=0 ]	(	[ shadowmap	2048 ] 	)
ambocclusion	[ 0	locks=0 ]	(	[ ambocclusion	0 ] 	)
ambquality	[ 0	locks=0 ]	(	[ ambquality	2 ] 	)
transparency	[ 0	locks=0 ]	(	[ transparency	1 ] 	)
transquality	[ 0	locks=0 ]	(	[ transquality	3 ] 	)
motionblur	[ 0	locks=0 ]	(	[ motionblur	0 ] 	)
motionblurframes	[ 0	locks=0 ]	(	[ motionblurframes	5 ] 	)
displacement	[ 0	locks=0 ]	(	[ displacement	1 ] 	)
displacequality	[ 0	locks=0 ]	(	[ displacequality	1 ] 	)
reflection	[ 0	locks=0 ]	(	[ reflection	0 ] 	)
minreflection	[ 0	locks=0 ]	(	[ minreflection	0.050000000000000003 ] 	)
hdrreflection	[ 0	locks=0 ]	(	[ hdrreflection	1 ] 	)
reflectionsize	[ 0	locks=0 ]	(	[ reflectionsize	512 ] 	)
backfacecull	[ 0	locks=0 ]	(	"off"	)
fognode	[ 0	locks=0 ]	(	""	)
uniformfog	[ 0	locks=0 ]	(	"off"	)
fogdensity	[ 0	locks=0 ]	(	0.001	)
fogopacity	[ 0	locks=0 ]	(	1	)
fogcolor	[ 0	locks=0 ]	(	0.5	0.5	0.5	)
fogrange	[ 0	locks=0 ]	(	0	1000	)
fogclipdistance	[ 0	locks=0 ]	(	1000000	)
fogheightmode	[ 0	locks=0 ]	(	"off"	)
fogheight	[ 0	locks=0 ]	(	100	)
fogheightfalloff	[ 0	locks=0 ]	(	100	)
fogsunenable	[ 0	locks=0 ]	(	"on"	)
fogsunbloom	[ 0	locks=0 ]	(	5	)
fogintensity	[ 0	locks=0 ]	(	1	)
volumefog	[ 0	locks=0 ]	(	"off"	)
vfogquality	[ 0	locks=0 ]	(	"volumehigh"	)
vfogdensity	[ 0	locks=0 ]	(	0.001	)
vfogopacity	[ 0	locks=0 ]	(	1	)
vfogcolor	[ 0	locks=0 ]	(	0.5	0.5	0.5	)
vfogrange	[ 0	locks=0 ]	(	1	200	)
vfogheightmode	[ 0	locks=0 ]	(	"off"	)
vfogheight	[ 0	locks=0 ]	(	100	)
vfogheightfalloff	[ 0	locks=0 ]	(	100	)
vfogintensity	[ 0	locks=0 ]	(	1	)
vfogscatter	[ 0	locks=0 ]	(	1	1	)
bloom	[ 0	locks=0 ]	(	"off"	)
bloomscale	[ 0	locks=0 ]	(	10	)
bloomintensity	[ 0	locks=0 ]	(	1	)
bloomthreshold	[ 0	locks=0 ]	(	0.94999999999999996	)
dof	[ 0	locks=0 ]	(	[ dof	0 ] 	)
bokeh	[ 0	locks=0 ]	(	"none"	)
bokehfile	[ 0	locks=0 ]	(	$HH/pic/circle.pic	)
bokehcop	[ 0	locks=0 ]	(	""	)
bokehaspect	[ 0	locks=0 ]	(	1	)
bokehboost	[ 0	locks=0 ]	(	1	)
volumequality	[ 0	locks=0 ]	(	[ volumequality	3 ] 	)
lod	[ 0	locks=0 ]	(	[ lod	1 ] 	)
wirewidth	[ 0	locks=0 ]	(	[ wirewidth	1 ] 	)
wireblend	[ 0	locks=0 ]	(	[ wireblend	0.5 ] 	)
particle	[ 0	locks=0 ]	(	[ particle	0 ] 	)
pointsize	[ 0	locks=0 ]	(	[ pointsize	3 ] 	)
discsize	[ 0	locks=0 ]	(	[ discsize	0.050000000000000003 ] 	)
orientton	[ 0	locks=0 ]	(	[ orientton	0 ] 	)
usesprites	[ 0	locks=0 ]	(	[ usesprites	1 ] 	)
usegeocolor	[ 0	locks=0 ]	(	[ usegeocolor	1 ] 	)
tex2dlimit	[ 0	locks=0 ]	(	[ tex2dlimit	0 ] 	)
tex2dres	[ 0	locks=0 ]	(	[ tex2dres	2048 ] 	)
tex2dformat	[ 0	locks=0 ]	(	[ tex2dformat	1 ] 	)
tex3dlimit	[ 0	locks=0 ]	(	[ tex3dlimit	0 ] 	)
tex3dres	[ 0	locks=0 ]	(	[ tex3dres	384 ] 	)
tex3dformat	[ 0	locks=0 ]	(	[ tex3dformat	1 ] 	)
texmemlimit	[ 0	locks=0 ]	(	[ texmemlimit	512 ] 	)
spritetexmaxres	[ 0	locks=0 ]	(	[ spritetexmaxresx	128 ] 	[ spritetexmaxresy	128 ] 	)
instancepercent	[ 0	locks=0 ]	(	[ instancepercent	100 ] 	)
instancelimit	[ 0	locks=0 ]	(	[ instancelimit	20 ] 	)
instancestandin	[ 0	locks=0 ]	(	[ instancestandin	2 ] 	)
tprerender	[ 0	locks=0 ]	(	"on"	)
prerender	[ 0	locks=0 ]	(	""	)
lprerender	[ 0	locks=0 ]	(	hscript	)
tpreframe	[ 0	locks=0 ]	(	"on"	)
preframe	[ 0	locks=0 ]	(	""	)
lpreframe	[ 0	locks=0 ]	(	hscript	)
tpostframe	[ 0	locks=0 ]	(	"on"	)
postframe	[ 0	locks=0 ]	(	""	)
lpostframe	[ 0	locks=0 ]	(	hscript	)
tpostrender	[ 0	locks=0 ]	(	"on"	)
postrender	[ 0	locks=0 ]	(	""	)
lpostrender	[ 0	locks=0 ]	(	hscript	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/opengl2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.def"
Content-Type: text/plain

comment ""
position 0.80717 3.6955
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	opengl2 1 1 "input1"
1 	mantra1 0 1 "input2"
}
inputs
{
0 	opengl2 0 1
1 	mantra1 0 1
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@LAPTOP-P8R7FBPF
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.chn"
Content-Type: text/plain

{
    channel index {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../mRenderEngine\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.parm"
Content-Type: text/plain

{
version 0.8
execute	[ 0	locks=0 ]	(	0	)
renderdialog	[ 0	locks=0 ]	(	0	)
index	[ 8	locks=0 ]	(	[ index	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/mantra1.init"
Content-Type: text/plain

type = ifd
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/mantra1.def"
Content-Type: text/plain

comment ""
position 2.18752 4.92897
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@LAPTOP-P8R7FBPF
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/mantra1.spareparmdef"
Content-Type: text/plain

    parm {
        name    "execute"
        baseparm
        label   "Render to Disk"
        joinnext
        export  none
    }
    parm {
        name    "renderpreview"
        baseparm
        label   "Render to MPlay"
        joinnext
        export  none
    }
    parm {
        name    "executebackground"
        baseparm
        label   "Render to Disk in Background"
        joinnext
        export  none
    }
    parm {
        name    "renderdialog"
        baseparm
        label   "Controls..."
        nolabel
        export  none
    }
    parm {
        name    "trange"
        baseparm
        label   "Valid Frame Range"
        export  none
    }
    parm {
        name    "f"
        baseparm
        label   "Start/End/Inc"
        export  none
    }
    parm {
        name    "take"
        baseparm
        label   "Render With Take"
        export  none
    }
    parm {
        name    "camera"
        baseparm
        label   "Camera"
        export  none
    }
    parm {
        name    "override_camerares"
        baseparm
        label   "Override Camera Resolution"
        export  none
    }
    parm {
        name    "res_fraction"
        baseparm
        label   "Resolution Scale"
        export  none
    }
    parm {
        name    "res_override"
        baseparm
        label   "Resolution"
        joinnext
        export  none
    }
    parm {
        name    "res_overrideMenu"
        baseparm
        label   "Choose Resolution"
        nolabel
        export  none
    }
    parm {
        name    "aspect_override"
        baseparm
        label   "Pixel Aspect Ratio"
        export  none
    }
    group {
        name    "images6"
        label   "Images"

        parm {
            name    "soho_program"
            baseparm
            label   "soho Program"
            invisible
            export  none
        }
        parm {
            name    "soho_shopstyle"
            baseparm
            label   "soho SHOP Style"
            invisible
            export  none
        }
        parm {
            name    "soho_ipr_support"
            baseparm
            label   "IPR Supported"
            invisible
            export  none
        }
        parm {
            name    "soho_previewsupport"
            baseparm
            label   "Preview Supported"
            invisible
            export  none
        }
        parm {
            name    "vm_picture"
            baseparm
            label   "Output Picture"
            export  none
        }
        parm {
            name    "vm_device"
            baseparm
            label   "Output Device"
            export  none
        }
        parm {
            name    "soho_mkpath"
            baseparm
            label   "Create Intermediate Directories"
            export  none
        }
        parm {
            name    "soho_skip_frame"
            baseparm
            label   "Skip Rendered Frames"
            export  none
        }
        group {
            name    "output6"
            label   "Output"

            parm {
                name    "vm_pfilter"
                label   "Pixel Filter"
                type    string
                default { "gaussian -w 2" }
                menureplace {
                    "box -w 1"                      "Unit Box Filter"
                    "gaussian -w 2"                 "Gaussian 2x2"
                    "gaussian -w 3"                 "Gaussian 3x3 (softer)"
                    "gaussian -w 2 -r 1"            "Gaussian 2x2 with noisy sample refiltering"
                    "combine -t 20.0"               "Ray Histogram Fusion"
                    "bartlett -w 2"                 "Bartlett (triangle)"
                    "catrom -w 3"                   "Catmull-Rom"
                    "hanning -w 2"                  "Hanning"
                    "blackman -w 2"                 "Blackman"
                    "sinc -w 3"                     "Sinc (sharpening)"
                    "edgedetect"                    "Edge Detection Filter"
                    "minmax min"                    "Closest Sample Filter"
                    "minmax max"                    "Farthest Sample Filter"
                    "minmax median"                 "Median Sample Filter"
                    "minmax edge"                   "Disable Edge Antialiasing"
                    "minmax ocover"                 "Object With Most Pixel Coverage (average)"
                    "minmax idcover"                "Object With Most Coverage (no filtering)"
                    "minmax omin"                   "Object With Most Coverage (minimum z-value)"
                    "minmax omax"                   "Object With Most Coverage (maximum z-value)"
                    "minmax omedian"                "Object With Most Coverage (median z-value)"
                    "denoise optix -a basecolor"    "NVIDIA OptiX Denoiser"
                }
                parmtag { "mantra_class" "plane" }
                parmtag { "mantra_name" "pfilter" }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "vm_sfilter"
                label   "Sample Filter"
                type    string
                default { "alpha" }
                menu {
                    "alpha"     "Opacity Filtering"
                    "closest"   "Closest Surface"
                }
                parmtag { "mantra_class" "plane" }
                parmtag { "mantra_name" "sfilter" }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "vm_quantize"
                label   "Quantization"
                type    string
                default { "half" }
                menu {
                    "8"     "8 bit integer"
                    "16"    "16 bit integer"
                    "half"  "16 bit float"
                    "float" "32 bit float"
                }
                parmtag { "mantra_class" "plane" }
                parmtag { "mantra_name" "quantize" }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "vm_gamma"
                label   "Gamma"
                type    float
                default { "1" }
                range   { 0.001 3 }
                parmtag { "mantra_class" "plane" }
                parmtag { "mantra_name" "gamma" }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "vm_subpixel"
                label   "Sub-Pixel Output"
                type    toggle
                default { "0" }
                parmtag { "mantra_class" "image" }
                parmtag { "mantra_name" "subpixel" }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "vm_tile_render"
                label   "Tiled Render"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "vm_tile_count_x"
                label   "Horizontal Tiles"
                type    integer
                default { "4" }
                hidewhen "{ vm_tile_render == 0 }"
                range   { 1! 8 }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "vm_tile_count_y"
                label   "Vertical Tiles"
                type    integer
                default { "4" }
                hidewhen "{ vm_tile_render == 0 }"
                range   { 1! 8 }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "vm_tile_index"
                label   "Tile Index"
                type    integer
                default { "0" }
                hidewhen "{ vm_tile_render == 0 }"
                range   { 0 63 }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "vm_writecheckpoint"
                label   "Output Checkpoint Files"
                type    toggle
                default { "1" }
                parmtag { "mantra_class" "image" }
                parmtag { "mantra_name" "writecheckpoint" }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "vm_readcheckpoint"
                label   "Resume from Checkpoint Files"
                type    toggle
                default { "0" }
                parmtag { "mantra_class" "image" }
                parmtag { "mantra_name" "readcheckpoint" }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "render_viewcamera"
                label   "Create Image From Viewing Camera"
                type    toggle
                default { "1" }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "render_any_shadowmap"
                label   "Auto-Generate Shadow Maps"
                type    toggle
                default { "1" }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "render_any_envmap"
                label   "Auto-Generate Environment Maps"
                type    toggle
                default { "1" }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "render_any_photonmap"
                label   "Auto-Generate Photon Maps"
                type    toggle
                default { "1" }
                parmtag { "spare_category" "Output" }
            }
            parm {
                name    "render_any_pointcloud"
                label   "Auto-Generate Light Point Clouds"
                type    toggle
                default { "1" }
                parmtag { "spare_category" "Output" }
            }
        }

        group {
            name    "output6_1"
            label   "Extra Image Planes"

            parm {
                name    "vm_exportcomponents"
                label   "Export Components"
                type    string
                default { "diffuse reflect coat refract volume sss" }
                menureplace {
                    "diffuse reflect sss"                       "Basic Components"
                    "diffuse reflect coat refract volume sss"   "Common Components"
                }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "exportcomponents" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_P"
                label   "Shading Position (P)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_Pz"
                label   "Shading Depth (Pz)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_N"
                label   "Shading Normal (N)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_all_comp"
                label   "Combined Lighting (per-component)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_direct_comp"
                label   "Direct Lighting (per-component)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_indirect_comp"
                label   "Indirect Lighting (per-component)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_all_emission"
                label   "Combined Emission"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_direct_noshadow"
                label   "Direct Unshadowed"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_direct_samples"
                label   "Direct Ray Samples"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_indirect_samples"
                label   "Indirect Ray Samples"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_sss"
                label   "SSS Single/Multi"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_basecolor"
                label   "Surface Unlit Base Color (basecolor)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_diffcolor"
                label   "Surface Unlit Diffuse Color (diffcolor)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_speccolor"
                label   "Surface Unlit Specular Color (speccolor)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_emitcolor"
                label   "Surface Emission Color (emitcolor)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_ssscolor"
                label   "Surface SSS Color (ssscolor)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_metallic"
                label   "Surface Metallic (metallic)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_quickplane_specrough"
                label   "Surface Specular Roughness (specrough)"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            parm {
                name    "vm_showextraplaneparms"
                label   "Show extra image plane parameters"
                type    toggle
                invisible
                default { "0" }
                parmtag { "spare_category" "Extra Image Planes" }
            }
            multiparm {
                name    "vm_numaux"
                label    "Extra Image Planes"
                parmtag { "spare_category" "Extra Image Planes" }

                parm {
                    name    "vm_disable_plane#"
                    label   "Disable Plane #"
                    type    toggle
                    joinnext
                    default { "0" }
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_excludedcm_plane#"
                    label   "Exclude from DCM"
                    type    toggle
                    default { "0" }
                    hidewhen "{ vm_deepresolver != camera }"
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_variable_plane#"
                    label   "VEX Variable"
                    type    string
                    default { "" }
                    disablewhen "{ vm_disable_plane# == 1 }"
                    menureplace {
                        [ "__import__('toolutils').parseDialogScriptMenu('MantraPlanes', forhscript=False)" ]
                        language python
                    }
                    parmtag { "script_callback" "`pythonexprs(\"__import__('toolutils').updatePlaneType($script_multiparm_index, '$script_value')\")`" }
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_vextype_plane#"
                    label   "VEX Type"
                    type    string
                    default { "vector" }
                    disablewhen "{ vm_disable_plane# == 1 }"
                    menu {
                        "float"         "Float Type"
                        "vector"        "Vector Type"
                        "vector4"       "Vector4 Type"
                        "unitvector"    "Unit Vector Type"
                    }
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_channel_plane#"
                    label   "Channel Name"
                    type    string
                    default { "" }
                    disablewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" }"
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_usefile_plane#"
                    label   "Different File"
                    type    toggle
                    nolabel
                    joinnext
                    default { "0" }
                    hidewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" } { vm_picture == ip }"
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_filename_plane#"
                    label   "Different File"
                    type    file
                    default { "" }
                    disablewhen "{ vm_usefile_plane# == 0 }"
                    hidewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" } { vm_picture == ip }"
                    menureplace {
                        [ "echo `pythonexprs(\"__import__('toolutils').parseDialogScriptMenu('FBrender')\")`" ]
                    }
                    parmtag { "filechooser_mode" "write" }
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_quantize_plane#"
                    label   "Quantize"
                    type    string
                    default { "half" }
                    help    "image:quantize"
                    disablewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" }"
                    menu {
                        "8"     "8 bit integer"
                        "16"    "16 bit integer"
                        "half"  "16 bit float"
                        "float" "32 bit float"
                    }
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_sfilter_plane#"
                    label   "Sample Filter"
                    type    string
                    default { "alpha" }
                    help    "image:sfilter"
                    disablewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" }"
                    menu {
                        "alpha"         "Opacity Filtering"
                        "fullopacity"   "Full Opacity Filtering"
                        "closest"       "Closest Surface"
                    }
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_pfilter_plane#"
                    label   "Pixel Filter"
                    type    string
                    default { "" }
                    help    "image:pfilter"
                    disablewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" }"
                    menureplace {
                        ""                              "Inherit from main plane"
                        "box -w 1"                      "Unit Box Filter"
                        "gaussian -w 2"                 "Gaussian 2x2"
                        "gaussian -w 3"                 "Gaussian 3x3 (softer)"
                        "gaussian -w 2 -r 1"            "Gaussian 2x2 with noisy sample refiltering"
                        "combine -t 20.0"               "Ray Histogram Fusion"
                        "bartlett -w 2"                 "Bartlett (triangle)"
                        "catrom -w 3"                   "Catmull-Rom"
                        "hanning -w 2"                  "Hanning"
                        "blackman -w 2"                 "Blackman"
                        "sinc -w 3"                     "Sinc (sharpening)"
                        "edgedetect"                    "Edge Detection Filter"
                        "minmax min"                    "Closest Sample Filter"
                        "minmax max"                    "Farthest Sample Filter"
                        "minmax median"                 "Median Sample Filter"
                        "minmax edge"                   "Disable Edge Antialiasing"
                        "minmax ocover"                 "Object With Most Pixel Coverage (average)"
                        "minmax idcover"                "Object With Most Coverage (no filtering)"
                        "minmax omin"                   "Object With Most Coverage (minimum z-value)"
                        "minmax omax"                   "Object With Most Coverage (maximum z-value)"
                        "minmax omedian"                "Object With Most Coverage (median z-value)"
                        "denoise optix -a basecolor"    "NVIDIA OptiX Denoiser"
                    }
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_gamma_plane#"
                    label   "Gamma"
                    type    float
                    default { "1" }
                    help    "image:gamma"
                    disablewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" }"
                    hidewhen "{ vm_showextraplaneparms == 0 }"
                    range   { 0.001 3 }
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_gain_plane#"
                    label   "Gain"
                    type    float
                    default { "1" }
                    help    "image:gain"
                    disablewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" }"
                    hidewhen "{ vm_showextraplaneparms == 0 }"
                    range   { 0.001 10 }
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_dither_plane#"
                    label   "Dither"
                    type    float
                    default { "0.5" }
                    help    "image:dither"
                    disablewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" }"
                    hidewhen "{ vm_showextraplaneparms == 0 }"
                    range   { 0 1 }
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_whitepoint_plane#"
                    label   "White Point"
                    type    float
                    default { "1" }
                    help    "image:whitepoint"
                    disablewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" }"
                    hidewhen "{ vm_showextraplaneparms == 0 }"
                    range   { 0 1 }
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_componentexport#"
                    label   "Export variable for each component"
                    type    toggle
                    default { "0" }
                    disablewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# =~ ()|(lpe:).+ }"
                    parmtag { "spare_category" "Extra Image Planes" }
                }
                parm {
                    name    "vm_lightexport#"
                    label   "Light Exports"
                    type    integer
                    default { "0" }
                    disablewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# =~ ()|(lpe:).+ }"
                    menu {
                        "0" "No light exports"
                        "1" "Export variable for each light"
                        "2" "Merge all lights into single channel"
                    }
                    range   { 0 10 }
                    parmtag { "spare_category" "" }
                }
                parm {
                    name    "vm_lightexport_scope#"
                    label   "Light Mask"
                    type    oplist
                    default { "*" }
                    disablewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" }"
                    hidewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" } { vm_lightexport# == 0 }"
                    parmtag { "opexpand" "1" }
                    parmtag { "opfilter" "!!OBJ/LIGHT!!" }
                    parmtag { "oprelative" "/" }
                }
                parm {
                    name    "vm_lightexport_select#"
                    label   "Light Selection"
                    type    string
                    default { "*" }
                    hidewhen "{ vm_disable_plane# == 1 } { vm_variable_plane# == \"\" } { vm_lightexport# == 0 }"
                }
            }

        }

        group {
            name    "output6_2"
            label   "Deep Output"

            parm {
                name    "vm_deepresolver"
                label   "Deep Resolver"
                type    string
                default { "null" }
                menu {
                    "null"      "No Deep Resolver"
                    "shadow"    "Deep Shadow Map"
                    "camera"    "Deep Camera Map"
                }
                parmtag { "spare_category" "Deep Output" }
            }
            parm {
                name    "vm_dcmfilename"
                label   "DCM Filename"
                type    file
                default { "$HIP/dcm.rat" }
                disablewhen "{ vm_deepresolver != camera }"
                parmtag { "filechooser_mode" "read_and_write" }
                parmtag { "mantra_class" "dcm" }
                parmtag { "mantra_name" "filename" }
                parmtag { "spare_category" "Deep Output" }
            }
            parm {
                name    "vm_matchdeeppixelfilter"
                label   "Force DCM Pixel Fiter on Image Planes"
                type    toggle
                default { "1" }
                disablewhen "{ vm_deepresolver != camera }"
                parmtag { "mantra_class" "image" }
                parmtag { "mantra_name" "matchdeeppixelfilter" }
                parmtag { "spare_category" "Deep Output" }
            }
            parm {
                name    "vm_dcmcompositing"
                label   "DCM Pre-Composite Samples"
                type    toggle
                default { "0" }
                disablewhen "{ vm_deepresolver != camera }"
                parmtag { "mantra_class" "dcm" }
                parmtag { "mantra_name" "compositing" }
                parmtag { "spare_category" "Deep Output" }
            }
            parm {
                name    "vm_dcmdepthplanes"
                label   "DCM Special Planes"
                type    string
                default { "zfront,zback" }
                disablewhen "{ vm_deepresolver != camera }"
                menureplace {
                    "zfront,zback"                      "Z-Front And Z-Back"
                    "zfront"                            "Z-Front"
                    "zfront,zback,deepcover,deepflags"  "Z-Front/Back, Coverage and Flags"
                }
                parmtag { "mantra_class" "dcm" }
                parmtag { "mantra_name" "depth_planes" }
                parmtag { "spare_category" "Deep Output" }
            }
            parm {
                name    "vm_dsmfilename"
                label   "DSM Filename"
                type    file
                default { "$HIP/dsm.rat" }
                disablewhen "{ vm_deepresolver != shadow }"
                parmtag { "filechooser_mode" "read_and_write" }
                parmtag { "mantra_class" "dsm" }
                parmtag { "mantra_name" "filename" }
                parmtag { "spare_category" "Deep Output" }
            }
        }

        group {
            name    "output6_3"
            label   "Cryptomatte"

            multiparm {
                name    "vm_cryptolayers"
                label    "Cryptomatte Layers"
                default 0
                parmtag { "spare_category" "Cryptomatte" }

                parm {
                    name    "vm_cryptolayerenable#"
                    label   "vm_cryptolayerenable#"
                    type    toggle
                    nolabel
                    joinnext
                    default { "1" }
                }
                parm {
                    name    "vm_cryptolayerprop#"
                    label   "Property"
                    type    string
                    default { "materialname" }
                    menureplace {
                        "materialname"  "Material Name"
                        "name"          "Object Name"
                    }
                }
                parm {
                    name    "vm_cryptolayername#"
                    label   "Channel Name"
                    type    string
                    default { "CryptoMaterial" }
                }
                parm {
                    name    "vm_cryptolayerrank#"
                    label   "Overlap Limit"
                    type    integer
                    default { "6" }
                    range   { 1 10 }
                }
                parm {
                    name    "vm_cryptolayeroutputenable#"
                    label   "vm_cryptolayeroutputenable#"
                    type    toggle
                    nolabel
                    joinnext
                    default { "0" }
                }
                parm {
                    name    "vm_cryptolayeroutput#"
                    label   "Different File"
                    type    file
                    default { "$HIP/CryptoMaterial.exr" }
                    disablewhen "{ vm_cryptolayeroutputenable# != 1 }"
                    parmtag { "filechooser_mode" "write" }
                }
                parm {
                    name    "vm_cryptolayersidecarenable#"
                    label   "vm_cryptolayersidecarenable#"
                    type    toggle
                    nolabel
                    joinnext
                    default { "0" }
                }
                parm {
                    name    "vm_cryptolayersidecar#"
                    label   "Manifest File"
                    type    string
                    default { "CryptoMaterial.json" }
                    disablewhen "{ vm_cryptolayersidecarenable# != 1 }"
                }
            }

        }

        group {
            name    "output6_4"
            label   "Meta Data"

            parm {
                name    "vm_image_artist"
                label   "Artist"
                type    string
                default { "" }
                parmtag { "mantra_class" "imageoption" }
                parmtag { "mantra_name" "artist" }
                parmtag { "spare_category" "Meta Data" }
            }
            parm {
                name    "vm_image_comment"
                label   "Comment"
                type    string
                default { "" }
                parmtag { "mantra_class" "imageoption" }
                parmtag { "mantra_name" "comment" }
                parmtag { "spare_category" "Meta Data" }
            }
            parm {
                name    "vm_image_hostname"
                label   "Hostname"
                type    string
                default { "" }
                parmtag { "mantra_class" "imageoption" }
                parmtag { "mantra_name" "hostname" }
                parmtag { "spare_category" "Meta Data" }
            }
            parm {
                name    "vm_image_mplay_direction"
                label   "MPlay Tile Order"
                type    string
                default { "middle" }
                menu {
                    "middle"    "Interactive (starting in middle)"
                    "top"       "Top down"
                    "bottom"    "Bottom up"
                    "hilbert"   "Hilbert Curve"
                }
                parmtag { "mantra_class" "imageoption" }
                parmtag { "mantra_name" "IPlay.direction" }
                parmtag { "spare_category" "Meta Data" }
            }
            parm {
                name    "vm_image_mplay_framemode"
                label   "MPlay Frame Mode"
                type    string
                default { "append" }
                menu {
                    "append"    "Append Frames To Sequence"
                    "match"     "Match Houdini Frame Numbers (overwrite frame)"
                }
                parmtag { "mantra_class" "imageoption" }
                parmtag { "mantra_name" "IPlay.framemode" }
                parmtag { "spare_category" "Meta Data" }
            }
            parm {
                name    "vm_image_mplay_label"
                label   "MPlay Session Label"
                type    string
                default { "" }
                menureplace {
                    "`pythonexprs(\"__import__('os').getpid()\")`"  "One per Houdini Process"
                    "$HIPNAME"                                      "One per Houdini File Name (.hip)"
                    "$OS"                                           "One per Output Driver Name (ROP)"
                    ""                                              "One MPlay session only"
                }
                parmtag { "mantra_class" "imageoption" }
                parmtag { "mantra_name" "IPlay.label" }
                parmtag { "spare_category" "Meta Data" }
            }
            parm {
                name    "vm_image_jpeg_quality"
                label   "JPEG Quality"
                type    integer
                default { "100" }
                range   { 20 100 }
                parmtag { "mantra_class" "imageoption" }
                parmtag { "mantra_name" "JPEG.quality" }
                parmtag { "spare_category" "Meta Data" }
            }
            parm {
                name    "vm_image_tiff_compression"
                label   "TIFF Compression"
                type    string
                default { "LZW" }
                menu {
                    "None"          "No compression"
                    "LZW"           "LZW Compression"
                    "AdobeDeflate"  "Adobe Deflate"
                    "PackBits"      "PackBits"
                    "JPEG"          "JPEG"
                    "PixarLog"      "Pixar Log"
                    "SGILog"        "LogLuv"
                    "SGILog24"      "LogLuv (24 bit)"
                }
                parmtag { "mantra_class" "imageoption" }
                parmtag { "mantra_name" "TIFF.compression" }
                parmtag { "spare_category" "Meta Data" }
            }
            parm {
                name    "vm_image_exr_compression"
                label   "EXR Compression"
                type    string
                default { "zips" }
                menu {
                    "none"  "No compression"
                    "dwab"  "DWA-B, Lossy and Fast (256-scanline block)"
                    "dwaa"  "DWA-A, Lossy and Fast (32-scanline block),"
                    "piz"   "PIZ Wavelet"
                    "rle"   "Runlength Encoding"
                    "zips"  "ZIP (Single scanline)"
                    "zip"   "ZIP (Multi-scanline blocks)"
                    "piz"   "PXR24 (32 bit float compression, lossy)"
                    "b44"   "B44 (4x4 block compression, lossy)"
                    "b44a"  "B44A (4x4 block extra compression, lossy)"
                }
                parmtag { "mantra_class" "imageoption" }
                parmtag { "mantra_name" "OpenEXR.compression" }
                parmtag { "spare_category" "Meta Data" }
            }
            parm {
                name    "vm_image_exr_dwa_level"
                label   "DWA Compression Level"
                type    float
                default { "85" }
                hidewhen "{ vm_image_exr_compression != dwab vm_image_exr_compression != dwaa }"
                range   { 1 200 }
                parmtag { "mantra_class" "imageoption" }
                parmtag { "mantra_name" "OpenEXR.dwa_compression" }
                parmtag { "spare_category" "Meta Data" }
            }
        }

    }

    group {
        name    "images6_1"
        label   "Rendering"

        parm {
            name    "vm_renderengine"
            label   "Rendering Engine"
            type    string
            default { "raytrace" }
            menu {
                "micropoly"     "Micropolygon Rendering"
                "raytrace"      "Ray Tracing"
                "pbrmicropoly"  "Micropolygon Physically Based Rendering"
                "pbrraytrace"   "Physically Based Rendering"
                "photon"        "Photon Map Generation"
            }
            parmtag { "mantra_class" "renderer" }
            parmtag { "mantra_force_output" "1" }
            parmtag { "mantra_name" "renderengine" }
            parmtag { "spare_category" "Rendering" }
        }
        parm {
            name    "vm_dof"
            label   "Enable Depth Of Field"
            type    toggle
            default { "0" }
            parmtag { "spare_category" "Rendering" }
        }
        parm {
            name    "allowmotionblur"
            label   "Allow Motion Blur"
            type    toggle
            default { "0" }
            parmtag { "spare_category" "Rendering" }
        }
        parm {
            name    "xform_motionsamples"
            label   "Xform Time Samples"
            type    integer
            default { "2" }
            hidewhen "{ allowmotionblur == 0 }"
            range   { 1 10 }
            parmtag { "spare_category" "Rendering" }
        }
        parm {
            name    "geo_motionsamples"
            label   "Geo Time Samples"
            type    integer
            default { "1" }
            hidewhen "{ allowmotionblur == 0 }"
            range   { 1 10 }
            parmtag { "spare_category" "Rendering" }
        }
        parm {
            name    "shutteroffset"
            label   "Shutter Offset"
            type    float
            default { "1" }
            hidewhen "{ allowmotionblur == 0 }"
            range   { -1 1 }
            parmtag { "spare_category" "Rendering" }
        }
        parm {
            name    "vm_traceblur"
            label   "Raytrace Motion Blur"
            type    toggle
            default { "0" }
            hidewhen "{ allowmotionblur == 0 } { vm_renderengine != micropoly vm_renderengine != pbrmicropoly }"
            parmtag { "mantra_class" "object" }
            parmtag { "mantra_name" "traceblur" }
            parmtag { "spare_category" "Rendering" }
        }
        group {
            name    "sampling7"
            label   "Sampling"

            parm {
                name    "vm_samples"
                label   "Pixel Samples"
                type    intvector2
                size    2
                default { "3" "3" }
                range   { 1 32 }
                parmtag { "mantra_class" "image" }
                parmtag { "mantra_force_output" "1" }
                parmtag { "mantra_name" "samples" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_dorayvariance"
                label   "Ray Variance Antialiasing"
                type    toggle
                default { "1" }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "dorayvariance" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_colorspace"
                label   "Variance Color Space"
                type    string
                default { "gamma" }
                hidewhen "{ vm_dorayvariance == 0 }"
                menu {
                    "linear"    "Linear"
                    "gamma"     "Gamma 2.2"
                }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_force_output" "1" }
                parmtag { "mantra_name" "colorspace" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_maxnumberofindirectsamples"
                label   "Maximum Number of Indirect Samples"
                type    label
                nolabel
                default { "Maximum number of indirect samples: `floor(ch(vm_maxraysamples) * (ch(vm_globalquality) * (ch(vm_diffusequality) + ch(vm_sssquality) + ch(vm_reflectionquality) + ch(vm_refractionquality) ) + 1) )`" }
                hidewhen "{ vm_dorayvariance == 0 }"
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_minraysamples"
                label   "Min Ray Samples"
                type    integer
                default { "1" }
                range   { 1 64 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "minraysamples" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_maxraysamples"
                label   "Max Ray Samples"
                type    integer
                default { "9" }
                hidewhen "{ vm_dorayvariance == 0 }"
                range   { 1 64 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "maxraysamples" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_variance"
                label   "Noise Level"
                type    log
                default { "0.01" }
                hidewhen "{ vm_dorayvariance == 0 }"
                range   { 0 0.1 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "variance" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_globalquality"
                label   "Global Quality"
                type    float
                default { "1" }
                hidewhen "{ vm_dorayvariance == 0 }"
                range   { 0 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "globalquality" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_diffusequality"
                label   "Diffuse Quality"
                type    float
                default { "1" }
                hidewhen "{ vm_dorayvariance == 0 }"
                range   { 0 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "diffusequality" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_sssquality"
                label   "SSS Quality"
                type    float
                default { "1" }
                hidewhen "{ vm_dorayvariance == 0 }"
                range   { 0 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "sssquality" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_reflectionquality"
                label   "Reflection Quality"
                type    float
                default { "1" }
                hidewhen "{ vm_dorayvariance == 0 }"
                range   { 0 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "reflectionquality" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_refractionquality"
                label   "Refraction Quality"
                type    float
                default { "1" }
                hidewhen "{ vm_dorayvariance == 0 }"
                range   { 0 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "refractionquality" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_volumequality"
                label   "Volume Quality"
                type    float
                default { "1" }
                hidewhen "{ vm_dorayvariance == 0 }"
                range   { 0 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "volumequality" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_volumesteprate"
                label   "Volume Step Rate"
                type    log
                default { "0.25" }
                range   { 0.1 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "volumesteprate" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_volumeshadowsteprate"
                label   "Volume Shadow Step Rate"
                type    log
                default { "1" }
                range   { 0.1 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "volumeshadowsteprate" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_transparent"
                label   "Stochastic Transparency"
                type    toggle
                default { "1" }
                disablewhen "{ vm_renderengine == micropoly } { vm_renderengine == pbrmicropoly } { vm_renderengine == photon }"
                parmtag { "mantra_class" "image" }
                parmtag { "mantra_name" "transparent" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_transparentsamples"
                label   "Stochastic Samples"
                type    integer
                default { "4" }
                disablewhen "{ vm_transparent == 0 } { vm_renderengine == micropoly } { vm_renderengine == pbrmicropoly } { vm_renderengine == photon }"
                range   { 1 16 }
                parmtag { "mantra_class" "image" }
                parmtag { "mantra_name" "transparentsamples" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_samplelock"
                label   "Sample Lock"
                type    toggle
                default { "0" }
                parmtag { "mantra_class" "image" }
                parmtag { "mantra_name" "samplelock" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_randomseed"
                label   "Random Seed"
                type    integer
                default { "0" }
                range   { 0 10 }
                parmtag { "mantra_class" "image" }
                parmtag { "mantra_name" "randomseed" }
                parmtag { "spare_category" "Sampling" }
            }
            parm {
                name    "vm_imageblur"
                label   "Allow Image Motion Blur"
                type    toggle
                default { "1" }
                disablewhen "{ allowmotionblur == 0 }"
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "imageblur" }
                parmtag { "spare_category" "Sampling" }
            }
        }

        group {
            name    "sampling7_1"
            label   "Limits"

            parm {
                name    "vm_reflectlimit"
                label   "Reflect Limit"
                type    integer
                default { "10" }
                range   { 0 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "reflectlimit" }
                parmtag { "spare_category" "Limits" }
            }
            parm {
                name    "vm_refractlimit"
                label   "Refract Limit"
                type    integer
                default { "10" }
                range   { 0 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "refractlimit" }
                parmtag { "spare_category" "Limits" }
            }
            parm {
                name    "vm_diffuselimit"
                label   "Diffuse Limit"
                type    integer
                default { "0" }
                range   { 0 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "diffuselimit" }
                parmtag { "spare_category" "Limits" }
            }
            parm {
                name    "vm_ssslimit"
                label   "SSS Limit"
                type    integer
                default { "0" }
                range   { 0 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "ssslimit" }
                parmtag { "spare_category" "Limits" }
            }
            parm {
                name    "vm_volumelimit"
                label   "Volume Limit"
                type    integer
                default { "0" }
                range   { 0 10 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "volumelimit" }
                parmtag { "spare_category" "Limits" }
            }
            parm {
                name    "vm_opacitylimit"
                label   "Opacity Limit"
                type    float
                default { "0.995" }
                range   { 0 1 }
                parmtag { "mantra_class" "image" }
                parmtag { "mantra_name" "opacitylimit" }
                parmtag { "spare_category" "Limits" }
            }
            parm {
                name    "vm_colorlimit"
                label   "Color Limit"
                type    float
                default { "10" }
                range   { 0 20 }
                parmtag { "mantra_class" "image" }
                parmtag { "mantra_name" "colorlimit" }
                parmtag { "spare_category" "Limits" }
            }
            parm {
                name    "vm_raylimiteval"
                label   "At Ray Limit"
                type    string
                default { "none" }
                menu {
                    "none"      "Use Black Background"
                    "direct"    "Use Direct Lighting as Background Color"
                }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "raylimiteval" }
                parmtag { "spare_category" "Limits" }
            }
            parm {
                name    "vm_raylimitcomponents"
                label   "Ray Limit Components"
                type    string
                default { "all" }
                hidewhen "{ vm_raylimiteval != direct }"
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "raylimitcomponents" }
                parmtag { "spare_category" "Limits" }
            }
            parm {
                name    "vm_raylimitlightmask"
                label   "Ray Limit Light Mask"
                type    oplist
                default { "*" }
                hidewhen "{ vm_raylimiteval != direct }"
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "raylimitlightmask" }
                parmtag { "opexpand" "1" }
                parmtag { "opfilter" "!!OBJ/LIGHT!!" }
                parmtag { "oprelative" "/" }
                parmtag { "spare_category" "Limits" }
            }
        }

        group {
            name    "sampling7_2"
            label   "Shading"

            parm {
                name    "vm_raybias"
                label   "Raytracing Bias"
                type    float
                default { "0.001" }
                range   { 0 10 }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "raybias" }
                parmtag { "spare_category" "Shading" }
            }
            parm {
                name    "vm_biasnormal"
                label   "Bias Along Normal"
                type    toggle
                default { "0" }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "biasnormal" }
                parmtag { "spare_category" "Shading" }
            }
            parm {
                name    "vm_nesteddielectric"
                label   "Enable Absorption and Nested Dielectrics"
                type    toggle
                default { "0" }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "nesteddielectric" }
                parmtag { "spare_category" "Shading" }
            }
            parm {
                name    "vm_pbrpathtype"
                label   "Allowable Paths"
                type    string
                default { "diffuse" }
                menu {
                    "diffuse"   "Specular, Diffuse Paths"
                    "all"       "All Paths"
                }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "pbrpathtype" }
                parmtag { "spare_category" "Shading" }
            }
            parm {
                name    "vm_constrainmaxrough"
                label   "Constrain by Maximum Roughness"
                type    toggle
                default { "0" }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "constrainmaxrough" }
                parmtag { "spare_category" "Shading" }
            }
            parm {
                name    "vm_refractcomponents"
                label   "Refract Components"
                type    string
                default { "refract" }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "refractcomponents" }
                parmtag { "spare_category" "Shading" }
            }
            parm {
                name    "vm_diffusecomponents"
                label   "Diffuse Components"
                type    string
                default { "diffuse" }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "diffusecomponents" }
                parmtag { "spare_category" "Shading" }
            }
            parm {
                name    "vm_volumecomponents"
                label   "Volume Components"
                type    string
                default { "volume" }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "volumecomponents" }
                parmtag { "spare_category" "Shading" }
            }
            parm {
                name    "vm_ssscomponents"
                label   "SSS Components"
                type    string
                default { "sss" }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "ssscomponents" }
                parmtag { "spare_category" "Shading" }
            }
        }

        group {
            name    "sampling7_3"
            label   "Render"

            parm {
                name    "vm_bucketsize"
                label   "Tile Size"
                type    integer
                default { "16" }
                range   { 1 64 }
                parmtag { "mantra_class" "image" }
                parmtag { "mantra_name" "bucket" }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "vm_usemaxthreads"
                label   "Use Max Processors"
                type    integer
                default { "1" }
                menu {
                    "0" "User Specified Thread Count"
                    "1" "Use All Processors"
                    "2" "Use All Processors Except One"
                }
                range   { 0 10 }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "usemaxthreads" }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "vm_threadcount"
                label   "Thread Count"
                type    integer
                default { "1" }
                disablewhen "{ vm_usemaxthreads > 0 }"
                range   { 1 16 }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "threadcount" }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "vm_usecacheratio"
                label   "Cache Limit"
                type    integer
                default { "1" }
                menu {
                    "0" "Fixed Size"
                    "1" "Proportion of Physical Memory"
                }
                range   { 0 10 }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "usecacheratio" }
                parmtag { "mantra_type" "bool" }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "vm_cacheratio"
                label   "Cache Memory Ratio"
                type    float
                default { "0.25" }
                hidewhen "{ vm_usecacheratio != 1 }"
                range   { 0 1 }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "cacheratio" }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "vm_cachesize"
                label   "Cache Size (MB)"
                type    intlog
                default { "1000" }
                hidewhen "{ vm_usecacheratio == 1 }"
                range   { 100 100000 }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "cachesize" }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "vm_octreestyle"
                label   "Ray Tracing Accelerator"
                type    string
                default { "bboxtree" }
                menu {
                    "kdtree"    "KD-Tree"
                    "bboxtree"  "Bounding Volume Hierarchy"
                }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "octreestyle" }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "vm_kdmemfactor"
                label   "KD-Tree Memory Factor"
                type    float
                default { "1" }
                hidewhen "{ vm_octreestyle != kdtree }"
                range   { 0.001 2 }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "kdmemfactor" }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "vm_hidden"
                label   "Enable Hiding"
                type    toggle
                default { "1" }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "hidden" }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "vm_otlfullpath"
                label   "Output OTLs with full paths"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "vm_embedvex"
                label   "Force VEX Shader Embedding"
                type    toggle
                default { "0" }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "declare_stylesheets"
                label   "Declare Style Sheets"
                type    string
                default { "*" }
                menutoggle {
                    [ "result = ['*', 'All\\t(*)']" ]
                    [ "styles = hou.styles.styles()" ]
                    [ "for style in styles:" ]
                    [ "    desc = hou.styles.description(style)" ]
                    [ "    desc = desc if len(desc) > 0 else 'No description'" ]
                    [ "    result.append(style)" ]
                    [ "    result.append(style + '\\t (' + desc + ')')" ]
                    [ "" ]
                    [ "return result" ]
                    language python
                }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "apply_stylesheets"
                label   "Apply Style Sheets"
                type    file
                default { "`pythonexprs(\"' '.join(hou.styles.styles())\")`" }
                menutoggle {
                    [ "result = []" ]
                    [ "styles = hou.styles.styles()" ]
                    [ "for style in styles:" ]
                    [ "    desc = hou.styles.description(style)" ]
                    [ "    desc = desc if len(desc) > 0 else 'No description'" ]
                    [ "    result.append(style)" ]
                    [ "    result.append(style + '\\t (' + desc + ')')" ]
                    [ "" ]
                    [ "return result" ]
                    language python
                }
                parmtag { "filechooser_pattern" "*.json" }
                parmtag { "spare_category" "Render" }
            }
            parm {
                name    "declare_all_shops"
                label   "Declare Materials"
                type    ordinal
                default { "off" }
                menu {
                    "off"   "Save Only Referenced Materials and Shaders"
                    "on"    "Save All Materials"
                    "all"   "Save All Materials and Shaders"
                }
                parmtag { "spare_category" "Render" }
            }
        }

        group {
            name    "sampling7_4"
            label   "Dicing"

            parm {
                name    "vm_shadingfactor"
                label   "Shading Quality Multiplier"
                type    float
                default { "1" }
                range   { 0 10 }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "shadingfactor" }
                parmtag { "spare_category" "Dicing" }
            }
            parm {
                name    "vm_motionfactor"
                label   "Motion Factor"
                type    float
                default { "0" }
                disablewhen "{ allowmotionblur == 0 vm_dof == 0 }"
                range   { 0 1 }
                parmtag { "mantra_class" "object" }
                parmtag { "mantra_name" "motionfactor" }
                parmtag { "spare_category" "Dicing" }
            }
            parm {
                name    "vm_measure"
                label   "Geometry Measuring"
                type    string
                default { "nonraster" }
                menu {
                    "nonraster" "Non-Raster Measuring"
                    "raster"    "Raster Space Measuring"
                    "uniform"   "Uniform Measuring"
                }
                parmtag { "spare_category" "Dicing" }
            }
            parm {
                name    "vm_measurezimportance"
                label   "Z-Importance"
                type    float
                default { "1" }
                disablewhen "{ vm_measure != nonraster }"
                range   { 0 10 }
                parmtag { "mantra_class" "measure" }
                parmtag { "mantra_force_output" "1" }
                parmtag { "mantra_name" "zimportance" }
                parmtag { "spare_category" "Dicing" }
            }
            parm {
                name    "vm_measureoffscreenquality"
                label   "Offscreen Quality"
                type    float
                default { "0.25" }
                disablewhen "{ vm_measure != nonraster }"
                range   { 0 1 }
                parmtag { "mantra_class" "measure" }
                parmtag { "mantra_force_output" "1" }
                parmtag { "mantra_name" "offscreenquality" }
                parmtag { "spare_category" "Dicing" }
            }
        }

        group {
            name    "sampling7_5"
            label   "Statistics"

            parm {
                name    "soho_spoolrenderoutput"
                label   "Render Output"
                type    ordinal
                default { "on" }
                help    "Controls whether to capture the render output and add to the node info"
                menu {
                    "off"   "Don't capture render output"
                    "on"    "Capture render output for graphical apps"
                    "force" "Capture render output for all apps"
                }
                parmtag { "spare_category" "Statistics" }
            }
            parm {
                name    "vm_verbose"
                label   "Verbose Level"
                type    integer
                default { "0" }
                range   { 0 5 }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_force_output" "1" }
                parmtag { "mantra_name" "verbose" }
                parmtag { "spare_category" "Statistics" }
            }
            parm {
                name    "vm_vexprofile"
                label   "VEX Profiling"
                type    integer
                default { "0" }
                menu {
                    "0" "No VEX Profiling"
                    "1" "Execution profiling"
                    "2" "Profiling and NAN detection"
                }
                range   { 0 10 }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "vexprofile" }
                parmtag { "spare_category" "Statistics" }
            }
            parm {
                name    "vm_alfprogress"
                label   "Alfred Style Progress"
                type    toggle
                default { "0" }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "alfprogress" }
                parmtag { "spare_category" "Statistics" }
            }
            parm {
                name    "vm_tilecallback"
                label   "Python Tile Callback"
                type    file
                default { "" }
                parmtag { "filechooser_mode" "read" }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "tilecallback" }
                parmtag { "spare_category" "Statistics" }
            }
            parm {
                name    "vm_logcolors"
                label   "Colorize Output"
                type    integer
                default { "0" }
                menu {
                    "0" "Colored Shell"
                    "1" "HTML Tags"
                    "2" "No Coloring"
                }
                range   { 0 10 }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_force_output" "1" }
                parmtag { "mantra_name" "logcolors" }
                parmtag { "spare_category" "Statistics" }
            }
            parm {
                name    "vm_logtimestamps"
                label   "Log Timestamp"
                type    toggle
                default { "1" }
                parmtag { "mantra_class" "renderer" }
                parmtag { "mantra_name" "logtimestamps" }
                parmtag { "spare_category" "Statistics" }
            }
        }

    }

    group {
        name    "images6_2"
        label   "Objects"

        parm {
            name    "vobject"
            baseparm
            label   "Candidate Objects"
            export  none
        }
        parm {
            name    "forceobject"
            baseparm
            label   "Force Objects"
            export  none
        }
        parm {
            name    "matte_objects"
            baseparm
            label   "Forced Matte"
            export  none
        }
        parm {
            name    "phantom_objects"
            baseparm
            label   "Forced Phantom"
            export  none
        }
        parm {
            name    "excludeobject"
            baseparm
            label   "Exclude Objects"
            export  none
        }
        parm {
            name    "obj_light_sep"
            baseparm
            label   "Separator"
            export  none
        }
        parm {
            name    "sololight"
            baseparm
            label   "Solo Light"
            export  none
        }
        parm {
            name    "alights"
            baseparm
            label   "Candidate Lights"
            export  none
        }
        parm {
            name    "forcelights"
            baseparm
            label   "Force Lights"
            export  none
        }
        parm {
            name    "excludelights"
            baseparm
            label   "Exclude Lights"
            export  none
        }
        parm {
            name    "soho_autoheadlight"
            baseparm
            label   "Headlight Creation"
            export  none
        }
        parm {
            name    "light_fog_sep"
            baseparm
            label   "Separator"
            export  none
        }
        parm {
            name    "vfog"
            baseparm
            label   "Visible Fog"
            export  none
        }
    }

    group {
        name    "images6_3"
        label   "Scripts"

        parm {
            name    "tprerender"
            baseparm
            label   "tprerender"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "prerender"
            baseparm
            label   "Pre-Render Script"
            joinnext
            export  none
        }
        parm {
            name    "lprerender"
            baseparm
            label   "lprerender"
            nolabel
            export  none
        }
        parm {
            name    "tpreframe"
            baseparm
            label   "tpreframe"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "preframe"
            baseparm
            label   "Pre-Frame Script"
            joinnext
            export  none
        }
        parm {
            name    "lpreframe"
            baseparm
            label   "lpreframe"
            nolabel
            export  none
        }
        parm {
            name    "tpostframe"
            baseparm
            label   "tpostframe"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "postframe"
            baseparm
            label   "Post-Frame Script"
            joinnext
            export  none
        }
        parm {
            name    "lpostframe"
            baseparm
            label   "lpostframe"
            nolabel
            export  none
        }
        parm {
            name    "tpostrender"
            baseparm
            label   "tpostrender"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "postrender"
            baseparm
            label   "Post-Render Script"
            joinnext
            export  none
        }
        parm {
            name    "lpostrender"
            baseparm
            label   "lpostrender"
            nolabel
            export  none
        }
    }

    group {
        name    "images6_4"
        label   "Driver"

        parm {
            name    "soho_pipecmd"
            baseparm
            label   "Command"
            export  none
        }
        parm {
            name    "soho_outputmode"
            baseparm
            label   "Save IFD File To Disk"
            nolabel
            joinnext
            export  none
        }
        parm {
            name    "soho_diskfile"
            baseparm
            label   "Disk File"
            export  none
        }
        parm {
            name    "soho_compression"
            baseparm
            label   "File Compression"
            export  none
        }
        parm {
            name    "soho_foreground"
            baseparm
            label   "Wait for Render to Complete"
            export  none
        }
        parm {
            name    "soho_initsim"
            baseparm
            label   "Initialize Simulation OPs"
            export  none
        }
        parm {
            name    "soho_viewport_menu"
            baseparm
            label   "Show In Viewport Menu"
            export  none
        }
        parm {
            name    "vm_inlinestorage"
            label   "Save Geometry Inline"
            type    toggle
            default { "0" }
            parmtag { "spare_category" "Driver" }
        }
        parm {
            name    "vm_tmpsharedstorage"
            label   "Shared temp storage"
            type    file
            default { "$HIP/ifds/storage" }
            disablewhen "{ vm_inlinestorage != 0 }"
            parmtag { "filechooser_mode" "write" }
            parmtag { "spare_category" "Driver" }
        }
        parm {
            name    "vm_tmplocalstorage"
            label   "Local temp storage"
            type    file
            default { "$HOUDINI_TEMP_DIR/ifds/storage" }
            disablewhen "{ vm_inlinestorage != 0 }"
            parmtag { "filechooser_mode" "write" }
            parmtag { "spare_category" "Driver" }
        }
        parm {
            name    "vm_binarygeometry"
            label   "Save Binary Geometry"
            type    toggle
            default { "1" }
            parmtag { "spare_category" "Driver" }
        }
    }


--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/mantra1.chn"
Content-Type: text/plain

{
    channel f1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = $F }
    }
    channel f2 {
      lefttype = extend
      righttype = extend
      default = 240
      flags = 0
      segment { length = 0 value = 240 240 expr = $F }
    }
    channel vm_renderengine {
      lefttype = extend
      righttype = extend
      defaultString = \"raytrace\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_renderengine\") }
    }
    channel vm_dof {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_dof\") }
    }
    channel allowmotionblur {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../allowmotionblur\") }
    }
    channel xform_motionsamples {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../xform_motionsamples\") }
    }
    channel geo_motionsamples {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../geo_motionsamples\") }
    }
    channel shutteroffset {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../shutteroffset\") }
    }
    channel vm_traceblur {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_traceblur\") }
    }
    channel vm_samplesx {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../vm_samplesx\") }
    }
    channel vm_samplesy {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../vm_samplesy\") }
    }
    channel vm_dorayvariance {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_dorayvariance\") }
    }
    channel vm_colorspace {
      lefttype = extend
      righttype = extend
      defaultString = \"gamma\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_colorspace\") }
    }
    channel vm_maxnumberofindirectsamples {
      lefttype = extend
      righttype = extend
      defaultString = "\"Maximum number of indirect samples: \"+(floor(ch(vm_maxraysamples) * (ch(vm_globalquality) * (ch(vm_diffusequality) + ch(vm_sssquality) + ch(vm_reflectionquality) + ch(vm_refractionquality) ) + 1) ))"
      flags = 0
      segment { length = 0 expr = chs(\"../labelparm\") }
    }
    channel vm_minraysamples {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_minraysamples\") }
    }
    channel vm_maxraysamples {
      lefttype = extend
      righttype = extend
      default = 9
      flags = 0
      segment { length = 0 value = 9 9 expr = ch(\"../vm_maxraysamples\") }
    }
    channel vm_variance {
      lefttype = extend
      righttype = extend
      default = 0.01
      flags = 0
      segment { length = 0 value = 0.01 0.01 expr = ch(\"../vm_variance\") }
    }
    channel vm_globalquality {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_globalquality\") }
    }
    channel vm_diffusequality {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_diffusequality\") }
    }
    channel vm_sssquality {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_sssquality\") }
    }
    channel vm_reflectionquality {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_reflectionquality\") }
    }
    channel vm_refractionquality {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_refractionquality\") }
    }
    channel vm_volumequality {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_volumequality\") }
    }
    channel vm_volumesteprate {
      lefttype = extend
      righttype = extend
      default = 0.25
      flags = 0
      segment { length = 0 value = 0.25 0.25 expr = ch(\"../vm_volumesteprate\") }
    }
    channel vm_volumeshadowsteprate {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_volumeshadowsteprate\") }
    }
    channel vm_transparent {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_transparent\") }
    }
    channel vm_transparentsamples {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../vm_transparentsamples\") }
    }
    channel vm_samplelock {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_samplelock\") }
    }
    channel vm_randomseed {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_randomseed\") }
    }
    channel vm_imageblur {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_imageblur\") }
    }
    channel vm_reflectlimit {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../vm_reflectlimit\") }
    }
    channel vm_refractlimit {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../vm_refractlimit\") }
    }
    channel vm_diffuselimit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_diffuselimit\") }
    }
    channel vm_ssslimit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_ssslimit\") }
    }
    channel vm_volumelimit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_volumelimit\") }
    }
    channel vm_opacitylimit {
      lefttype = extend
      righttype = extend
      default = 0.995
      flags = 0
      segment { length = 0 value = 0.995 0.995 expr = ch(\"../vm_opacitylimit\") }
    }
    channel vm_colorlimit {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../vm_colorlimit\") }
    }
    channel vm_raylimiteval {
      lefttype = extend
      righttype = extend
      defaultString = \"none\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_raylimiteval\") }
    }
    channel vm_raylimitcomponents {
      lefttype = extend
      righttype = extend
      defaultString = \"all\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_raylimitcomponents\") }
    }
    channel vm_raylimitlightmask {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chsop(\"../vm_raylimitlightmask\") }
    }
    channel vm_raybias {
      lefttype = extend
      righttype = extend
      default = 0.001
      flags = 0
      segment { length = 0 value = 0.001 0.001 expr = ch(\"../vm_raybias\") }
    }
    channel vm_biasnormal {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_biasnormal\") }
    }
    channel vm_nesteddielectric {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_nesteddielectric\") }
    }
    channel vm_pbrpathtype {
      lefttype = extend
      righttype = extend
      defaultString = \"diffuse\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_pbrpathtype\") }
    }
    channel vm_constrainmaxrough {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_constrainmaxrough\") }
    }
    channel vm_refractcomponents {
      lefttype = extend
      righttype = extend
      defaultString = \"refract\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_refractcomponents\") }
    }
    channel vm_diffusecomponents {
      lefttype = extend
      righttype = extend
      defaultString = \"diffuse\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_diffusecomponents\") }
    }
    channel vm_volumecomponents {
      lefttype = extend
      righttype = extend
      defaultString = \"volume\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_volumecomponents\") }
    }
    channel vm_ssscomponents {
      lefttype = extend
      righttype = extend
      defaultString = \"sss\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_ssscomponents\") }
    }
    channel vm_bucketsize {
      lefttype = extend
      righttype = extend
      default = 16
      flags = 0
      segment { length = 0 value = 16 16 expr = ch(\"../vm_bucketsize\") }
    }
    channel vm_usemaxthreads {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_usemaxthreads\") }
    }
    channel vm_threadcount {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_threadcount\") }
    }
    channel vm_usecacheratio {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_usecacheratio\") }
    }
    channel vm_cacheratio {
      lefttype = extend
      righttype = extend
      default = 0.25
      flags = 0
      segment { length = 0 value = 0.25 0.25 expr = ch(\"../vm_cacheratio\") }
    }
    channel vm_cachesize {
      lefttype = extend
      righttype = extend
      default = 1000
      flags = 0
      segment { length = 0 value = 1000 1000 expr = ch(\"../vm_cachesize\") }
    }
    channel vm_octreestyle {
      lefttype = extend
      righttype = extend
      defaultString = \"bboxtree\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_octreestyle\") }
    }
    channel vm_kdmemfactor {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_kdmemfactor\") }
    }
    channel vm_hidden {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_hidden\") }
    }
    channel vm_otlfullpath {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_otlfullpath\") }
    }
    channel vm_embedvex {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_embedvex\") }
    }
    channel declare_stylesheets {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chs(\"../declare_stylesheets\") }
    }
    channel apply_stylesheets {
      lefttype = extend
      righttype = extend
      defaultString = "pythonexprs(\"' '.join(hou.styles.styles())\")"
      flags = 0
      segment { length = 0 expr = chs(\"../apply_stylesheets\") }
    }
    channel declare_all_shops {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../declare_all_shops\") }
    }
    channel vm_shadingfactor {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_shadingfactor\") }
    }
    channel vm_motionfactor {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_motionfactor\") }
    }
    channel vm_measure {
      lefttype = extend
      righttype = extend
      defaultString = \"nonraster\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_measure\") }
    }
    channel vm_measurezimportance {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_measurezimportance\") }
    }
    channel vm_measureoffscreenquality {
      lefttype = extend
      righttype = extend
      default = 0.25
      flags = 0
      segment { length = 0 value = 0.25 0.25 expr = ch(\"../vm_measureoffscreenquality\") }
    }
    channel soho_spoolrenderoutput {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../soho_spoolrenderoutput\") }
    }
    channel vm_verbose {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_verbose\") }
    }
    channel vm_vexprofile {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_vexprofile\") }
    }
    channel vm_alfprogress {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_alfprogress\") }
    }
    channel vm_tilecallback {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../vm_tilecallback\") }
    }
    channel vm_logcolors {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../vm_logcolors\") }
    }
    channel vm_logtimestamps {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../vm_logtimestamps\") }
    }
    channel vobject {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chsop(\"../vobject\") }
    }
    channel forceobject {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../forceobject\") }
    }
    channel matte_objects {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../matte_objects\") }
    }
    channel phantom_objects {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../phantom_objects\") }
    }
    channel excludeobject {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../excludeobject\") }
    }
    channel sololight {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../sololight\") }
    }
    channel alights {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chsop(\"../alights2\") }
    }
    channel forcelights {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../forcelights2\") }
    }
    channel excludelights {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../excludelights2\") }
    }
    channel soho_autoheadlight {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../soho_autoheadlight\") }
    }
    channel vfog {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chsop(\"../vfog\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/mantra1.parm"
Content-Type: text/plain

{
version 0.8
execute	[ 0	locks=0 ]	(	0	)
renderpreview	[ 0	locks=0 ]	(	0	)
executebackground	[ 0	locks=0 ]	(	0	)
renderdialog	[ 0	locks=0 ]	(	0	)
trange	[ 0	locks=0 ]	(	"off"	)
f	[ 8	locks=0 ]	(	[ f1	1 ] 	[ f2	240 ] 	1	)
take	[ 0	locks=0 ]	(	_current_	)
camera	[ 0	locks=0 ]	(	`chsop(\"../camera\")`	)
override_camerares	[ 0	locks=0 ]	(	"off"	)
res_fraction	[ 0	locks=0 ]	(	0.5	)
res_override	[ 0	locks=0 ]	(	1280	720	)
res_overrideMenu	[ 0	locks=0 ]	(	0	)
aspect_override	[ 0	locks=0 ]	(	1	)
images	[ 0	locks=0 ]	(	0	0	0	0	0	)
soho_program	[ 0	locks=0 ]	(	IFD.py	)
soho_shopstyle	[ 0	locks=0 ]	(	VMantra	)
soho_ipr_support	[ 0	locks=0 ]	(	"on"	)
soho_previewsupport	[ 0	locks=0 ]	(	"on"	)
vm_picture	[ 0	locks=0 ]	(	$HOUDINI_TEMP_DIR/facebook_rop.exr	)
vm_device	[ 0	locks=0 ]	(	""	)
soho_mkpath	[ 0	locks=0 ]	(	"on"	)
soho_skip_frame	[ 0	locks=0 ]	(	no	)
output	[ 0	locks=0 ]	(	0	0	0	0	0	)
sampling	[ 0	locks=0 ]	(	0	0	0	0	0	0	)
vobject	[ 0	locks=0 ]	(	[ vobject	* ] 	)
forceobject	[ 0	locks=0 ]	(	[ forceobject	"" ] 	)
matte_objects	[ 0	locks=0 ]	(	[ matte_objects	"" ] 	)
phantom_objects	[ 0	locks=0 ]	(	[ phantom_objects	"" ] 	)
excludeobject	[ 0	locks=0 ]	(	[ excludeobject	"" ] 	)
obj_light_sep	[ 0	locks=0 ]	(	)
sololight	[ 0	locks=0 ]	(	[ sololight	"" ] 	)
alights	[ 0	locks=0 ]	(	[ alights	* ] 	)
forcelights	[ 0	locks=0 ]	(	[ forcelights	"" ] 	)
excludelights	[ 0	locks=0 ]	(	[ excludelights	"" ] 	)
soho_autoheadlight	[ 0	locks=0 ]	(	[ soho_autoheadlight	1 ] 	)
light_fog_sep	[ 0	locks=0 ]	(	)
vfog	[ 0	locks=0 ]	(	[ vfog	* ] 	)
tprerender	[ 0	locks=0 ]	(	"on"	)
prerender	[ 0	locks=0 ]	(	""	)
lprerender	[ 0	locks=0 ]	(	hscript	)
tpreframe	[ 0	locks=0 ]	(	"on"	)
preframe	[ 0	locks=0 ]	(	""	)
lpreframe	[ 0	locks=0 ]	(	hscript	)
tpostframe	[ 0	locks=0 ]	(	"on"	)
postframe	[ 0	locks=0 ]	(	""	)
lpostframe	[ 0	locks=0 ]	(	hscript	)
tpostrender	[ 0	locks=0 ]	(	"on"	)
postrender	[ 0	locks=0 ]	(	""	)
lpostrender	[ 0	locks=0 ]	(	hscript	)
soho_pipecmd	[ 0	locks=0 ]	(	mantra	)
soho_outputmode	[ 0	locks=0 ]	(	"off"	)
soho_diskfile	[ 0	locks=0 ]	(	$HIP/mantra.ifd	)
soho_compression	[ 0	locks=0 ]	(	ext	)
soho_foreground	[ 0	locks=0 ]	(	"off"	)
soho_initsim	[ 0	locks=0 ]	(	"off"	)
soho_viewport_menu	[ 0	locks=0 ]	(	"on"	)
images6	[ 0	locks=0 ]	(	0	0	0	0	0	)
output6	[ 0	locks=0 ]	(	0	0	0	0	0	)
vm_pfilter	[ 0	locks=0 ]	(	"gaussian -w 2"	)
vm_sfilter	[ 0	locks=0 ]	(	alpha	)
vm_quantize	[ 0	locks=0 ]	(	half	)
vm_gamma	[ 0	locks=0 ]	(	1	)
vm_subpixel	[ 0	locks=0 ]	(	"off"	)
vm_tile_render	[ 0	locks=0 ]	(	"off"	)
vm_tile_count_x	[ 0	locks=0 ]	(	4	)
vm_tile_count_y	[ 0	locks=0 ]	(	4	)
vm_tile_index	[ 0	locks=0 ]	(	0	)
vm_writecheckpoint	[ 0	locks=0 ]	(	"on"	)
vm_readcheckpoint	[ 0	locks=0 ]	(	"off"	)
render_viewcamera	[ 0	locks=0 ]	(	"on"	)
render_any_shadowmap	[ 0	locks=0 ]	(	"on"	)
render_any_envmap	[ 0	locks=0 ]	(	"on"	)
render_any_photonmap	[ 0	locks=0 ]	(	"on"	)
render_any_pointcloud	[ 0	locks=0 ]	(	"on"	)
vm_exportcomponents	[ 0	locks=0 ]	(	"diffuse reflect coat refract volume sss"	)
vm_quickplane_P	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_Pz	[ 0	locks=0 ]	(	"on"	)
vm_quickplane_N	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_all_comp	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_direct_comp	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_indirect_comp	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_all_emission	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_direct_noshadow	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_direct_samples	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_indirect_samples	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_sss	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_basecolor	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_diffcolor	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_speccolor	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_emitcolor	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_ssscolor	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_metallic	[ 0	locks=0 ]	(	"off"	)
vm_quickplane_specrough	[ 0	locks=0 ]	(	"off"	)
vm_showextraplaneparms	[ 0	locks=0 ]	(	"off"	)
vm_numaux	[ 0	locks=0 ]	(	0	)
vm_deepresolver	[ 0	locks=0 ]	(	null	)
vm_dcmfilename	[ 0	locks=0 ]	(	$HIP/dcm.rat	)
vm_matchdeeppixelfilter	[ 0	locks=0 ]	(	"on"	)
vm_dcmcompositing	[ 0	locks=0 ]	(	"off"	)
vm_dcmdepthplanes	[ 0	locks=0 ]	(	zfront,zback	)
vm_dsmfilename	[ 0	locks=0 ]	(	$HIP/dsm.rat	)
vm_cryptolayers	[ 0	locks=0 ]	(	0	)
vm_image_artist	[ 0	locks=0 ]	(	""	)
vm_image_comment	[ 0	locks=0 ]	(	""	)
vm_image_hostname	[ 0	locks=0 ]	(	""	)
vm_image_mplay_direction	[ 0	locks=0 ]	(	middle	)
vm_image_mplay_framemode	[ 0	locks=0 ]	(	append	)
vm_image_mplay_label	[ 0	locks=0 ]	(	""	)
vm_image_jpeg_quality	[ 0	locks=0 ]	(	100	)
vm_image_tiff_compression	[ 0	locks=0 ]	(	LZW	)
vm_image_exr_compression	[ 0	locks=0 ]	(	zips	)
vm_image_exr_dwa_level	[ 0	locks=0 ]	(	85	)
vm_renderengine	[ 0	locks=0 ]	(	[ vm_renderengine	raytrace ] 	)
vm_dof	[ 0	locks=0 ]	(	[ vm_dof	0 ] 	)
allowmotionblur	[ 0	locks=0 ]	(	[ allowmotionblur	0 ] 	)
xform_motionsamples	[ 0	locks=0 ]	(	[ xform_motionsamples	2 ] 	)
geo_motionsamples	[ 0	locks=0 ]	(	[ geo_motionsamples	1 ] 	)
shutteroffset	[ 0	locks=0 ]	(	[ shutteroffset	1 ] 	)
vm_traceblur	[ 0	locks=0 ]	(	[ vm_traceblur	0 ] 	)
sampling7	[ 0	locks=0 ]	(	1	1	1	1	1	1	)
vm_samples	[ 0	locks=0 ]	(	[ vm_samplesx	3 ] 	[ vm_samplesy	3 ] 	)
vm_dorayvariance	[ 0	locks=0 ]	(	[ vm_dorayvariance	1 ] 	)
vm_colorspace	[ 0	locks=0 ]	(	[ vm_colorspace	gamma ] 	)
vm_maxnumberofindirectsamples	[ 0	locks=0 ]	(	[ vm_maxnumberofindirectsamples	"Maximum number of indirect samples: `floor(ch(vm_maxraysamples) * (ch(vm_globalquality) * (ch(vm_diffusequality) + ch(vm_sssquality) + ch(vm_reflectionquality) + ch(vm_refractionquality) ) + 1) )`" ] 	)
vm_minraysamples	[ 0	locks=0 ]	(	[ vm_minraysamples	1 ] 	)
vm_maxraysamples	[ 0	locks=0 ]	(	[ vm_maxraysamples	9 ] 	)
vm_variance	[ 0	locks=0 ]	(	[ vm_variance	0.01 ] 	)
vm_globalquality	[ 0	locks=0 ]	(	[ vm_globalquality	1 ] 	)
vm_diffusequality	[ 0	locks=0 ]	(	[ vm_diffusequality	1 ] 	)
vm_sssquality	[ 0	locks=0 ]	(	[ vm_sssquality	1 ] 	)
vm_reflectionquality	[ 0	locks=0 ]	(	[ vm_reflectionquality	1 ] 	)
vm_refractionquality	[ 0	locks=0 ]	(	[ vm_refractionquality	1 ] 	)
vm_volumequality	[ 0	locks=0 ]	(	[ vm_volumequality	1 ] 	)
vm_volumesteprate	[ 0	locks=0 ]	(	[ vm_volumesteprate	0.25 ] 	)
vm_volumeshadowsteprate	[ 0	locks=0 ]	(	[ vm_volumeshadowsteprate	1 ] 	)
vm_transparent	[ 0	locks=0 ]	(	[ vm_transparent	1 ] 	)
vm_transparentsamples	[ 0	locks=0 ]	(	[ vm_transparentsamples	4 ] 	)
vm_samplelock	[ 0	locks=0 ]	(	[ vm_samplelock	0 ] 	)
vm_randomseed	[ 0	locks=0 ]	(	[ vm_randomseed	0 ] 	)
vm_imageblur	[ 0	locks=0 ]	(	[ vm_imageblur	1 ] 	)
vm_reflectlimit	[ 0	locks=0 ]	(	[ vm_reflectlimit	10 ] 	)
vm_refractlimit	[ 0	locks=0 ]	(	[ vm_refractlimit	10 ] 	)
vm_diffuselimit	[ 0	locks=0 ]	(	[ vm_diffuselimit	0 ] 	)
vm_ssslimit	[ 0	locks=0 ]	(	[ vm_ssslimit	0 ] 	)
vm_volumelimit	[ 0	locks=0 ]	(	[ vm_volumelimit	0 ] 	)
vm_opacitylimit	[ 0	locks=0 ]	(	[ vm_opacitylimit	0.995 ] 	)
vm_colorlimit	[ 0	locks=0 ]	(	[ vm_colorlimit	10 ] 	)
vm_raylimiteval	[ 0	locks=0 ]	(	[ vm_raylimiteval	none ] 	)
vm_raylimitcomponents	[ 0	locks=0 ]	(	[ vm_raylimitcomponents	all ] 	)
vm_raylimitlightmask	[ 0	locks=0 ]	(	[ vm_raylimitlightmask	* ] 	)
vm_raybias	[ 0	locks=0 ]	(	[ vm_raybias	0.001 ] 	)
vm_biasnormal	[ 0	locks=0 ]	(	[ vm_biasnormal	0 ] 	)
vm_nesteddielectric	[ 0	locks=0 ]	(	[ vm_nesteddielectric	0 ] 	)
vm_pbrpathtype	[ 0	locks=0 ]	(	[ vm_pbrpathtype	diffuse ] 	)
vm_constrainmaxrough	[ 0	locks=0 ]	(	[ vm_constrainmaxrough	0 ] 	)
vm_refractcomponents	[ 0	locks=0 ]	(	[ vm_refractcomponents	refract ] 	)
vm_diffusecomponents	[ 0	locks=0 ]	(	[ vm_diffusecomponents	diffuse ] 	)
vm_volumecomponents	[ 0	locks=0 ]	(	[ vm_volumecomponents	volume ] 	)
vm_ssscomponents	[ 0	locks=0 ]	(	[ vm_ssscomponents	sss ] 	)
vm_bucketsize	[ 0	locks=0 ]	(	[ vm_bucketsize	16 ] 	)
vm_usemaxthreads	[ 0	locks=0 ]	(	[ vm_usemaxthreads	1 ] 	)
vm_threadcount	[ 0	locks=0 ]	(	[ vm_threadcount	1 ] 	)
vm_usecacheratio	[ 0	locks=0 ]	(	[ vm_usecacheratio	1 ] 	)
vm_cacheratio	[ 0	locks=0 ]	(	[ vm_cacheratio	0.25 ] 	)
vm_cachesize	[ 0	locks=0 ]	(	[ vm_cachesize	1000 ] 	)
vm_octreestyle	[ 0	locks=0 ]	(	[ vm_octreestyle	bboxtree ] 	)
vm_kdmemfactor	[ 0	locks=0 ]	(	[ vm_kdmemfactor	1 ] 	)
vm_hidden	[ 0	locks=0 ]	(	[ vm_hidden	1 ] 	)
vm_otlfullpath	[ 0	locks=0 ]	(	[ vm_otlfullpath	0 ] 	)
vm_embedvex	[ 0	locks=0 ]	(	[ vm_embedvex	0 ] 	)
declare_stylesheets	[ 0	locks=0 ]	(	[ declare_stylesheets	* ] 	)
apply_stylesheets	[ 0	locks=0 ]	(	[ apply_stylesheets	"`pythonexprs(\"' '.join(hou.styles.styles())\")`" ] 	)
declare_all_shops	[ 0	locks=0 ]	(	[ declare_all_shops	0 ] 	)
vm_shadingfactor	[ 0	locks=0 ]	(	[ vm_shadingfactor	1 ] 	)
vm_motionfactor	[ 0	locks=0 ]	(	[ vm_motionfactor	0 ] 	)
vm_measure	[ 0	locks=0 ]	(	[ vm_measure	nonraster ] 	)
vm_measurezimportance	[ 0	locks=0 ]	(	[ vm_measurezimportance	1 ] 	)
vm_measureoffscreenquality	[ 0	locks=0 ]	(	[ vm_measureoffscreenquality	0.25 ] 	)
soho_spoolrenderoutput	[ 0	locks=0 ]	(	[ soho_spoolrenderoutput	1 ] 	)
vm_verbose	[ 0	locks=0 ]	(	[ vm_verbose	0 ] 	)
vm_vexprofile	[ 0	locks=0 ]	(	[ vm_vexprofile	0 ] 	)
vm_alfprogress	[ 0	locks=0 ]	(	[ vm_alfprogress	0 ] 	)
vm_tilecallback	[ 0	locks=0 ]	(	[ vm_tilecallback	"" ] 	)
vm_logcolors	[ 0	locks=0 ]	(	[ vm_logcolors	0 ] 	)
vm_logtimestamps	[ 0	locks=0 ]	(	[ vm_logtimestamps	1 ] 	)
vm_inlinestorage	[ 0	locks=0 ]	(	"off"	)
vm_tmpsharedstorage	[ 0	locks=0 ]	(	$HIP/ifds/storage	)
vm_tmplocalstorage	[ 0	locks=0 ]	(	$HOUDINI_TEMP_DIR/ifds/storage	)
vm_binarygeometry	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/mantra1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Render.init"
Content-Type: text/plain

type = null
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Render.def"
Content-Type: text/plain

comment ""
position 0.80717 1.6955
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	shell1 1 1 "input1"
}
inputs
{
0 	shell1 0 1
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@LAPTOP-P8R7FBPF
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Render.parm"
Content-Type: text/plain

{
version 0.8
execute	[ 0	locks=0 ]	(	0	)
renderdialog	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/Render.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/opengl3.init"
Content-Type: text/plain

type = opengl
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/opengl3.def"
Content-Type: text/plain

comment "Referenced from opengl2"
position -0.827471 6.39956
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on displaycomment on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author Paul_Ambrosiussen@LAPTOP-P8R7FBPF
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/opengl3.chn"
Content-Type: text/plain

{
    channel lpostrender {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/lpostrender\") }
    }
    channel postrender {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/postrender\") }
    }
    channel tpostrender {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/tpostrender\") }
    }
    channel lpostframe {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/lpostframe\") }
    }
    channel postframe {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/postframe\") }
    }
    channel tpostframe {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/tpostframe\") }
    }
    channel lpreframe {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/lpreframe\") }
    }
    channel preframe {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/preframe\") }
    }
    channel tpreframe {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/tpreframe\") }
    }
    channel lprerender {
      lefttype = extend
      righttype = extend
      defaultString = \"hscript\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/lprerender\") }
    }
    channel prerender {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/prerender\") }
    }
    channel tprerender {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/tprerender\") }
    }
    channel instancestandin {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../opengl2/instancestandin\") }
    }
    channel instancelimit {
      lefttype = extend
      righttype = extend
      default = 20
      flags = 0
      segment { length = 0 value = 20 20 expr = ch(\"../opengl2/instancelimit\") }
    }
    channel instancepercent {
      lefttype = extend
      righttype = extend
      default = 100
      flags = 0
      segment { length = 0 value = 100 100 expr = ch(\"../opengl2/instancepercent\") }
    }
    channel spritetexmaxresy {
      lefttype = extend
      righttype = extend
      default = 128
      flags = 0
      segment { length = 0 value = 128 128 expr = ch(\"../opengl2/spritetexmaxresy\") }
    }
    channel spritetexmaxresx {
      lefttype = extend
      righttype = extend
      default = 128
      flags = 0
      segment { length = 0 value = 128 128 expr = ch(\"../opengl2/spritetexmaxresx\") }
    }
    channel texmemlimit {
      lefttype = extend
      righttype = extend
      default = 512
      flags = 0
      segment { length = 0 value = 512 512 expr = ch(\"../opengl2/texmemlimit\") }
    }
    channel tex3dformat {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/tex3dformat\") }
    }
    channel tex3dres {
      lefttype = extend
      righttype = extend
      default = 384
      flags = 0
      segment { length = 0 value = 384 384 expr = ch(\"../opengl2/tex3dres\") }
    }
    channel tex3dlimit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/tex3dlimit\") }
    }
    channel tex2dformat {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/tex2dformat\") }
    }
    channel tex2dres {
      lefttype = extend
      righttype = extend
      default = 2048
      flags = 0
      segment { length = 0 value = 2048 2048 expr = ch(\"../opengl2/tex2dres\") }
    }
    channel tex2dlimit {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/tex2dlimit\") }
    }
    channel usegeocolor {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/usegeocolor\") }
    }
    channel usesprites {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/usesprites\") }
    }
    channel orientton {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/orientton\") }
    }
    channel discsize {
      lefttype = extend
      righttype = extend
      default = 0.050000000000000003
      flags = 0
      segment { length = 0 value = 0.050000000000000003 0.050000000000000003 expr = ch(\"../opengl2/discsize\") }
    }
    channel pointsize {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../opengl2/pointsize\") }
    }
    channel particle {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/particle\") }
    }
    channel wireblend {
      lefttype = extend
      righttype = extend
      default = 0.5
      flags = 0
      segment { length = 0 value = 0.5 0.5 expr = ch(\"../opengl2/wireblend\") }
    }
    channel wirewidth {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/wirewidth\") }
    }
    channel lod {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/lod\") }
    }
    channel volumequality {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../opengl2/volumequality\") }
    }
    channel reflectionsize {
      lefttype = extend
      righttype = extend
      default = 512
      flags = 0
      segment { length = 0 value = 512 512 expr = ch(\"../opengl2/reflectionsize\") }
    }
    channel hdrreflection {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/hdrreflection\") }
    }
    channel minreflection {
      lefttype = extend
      righttype = extend
      default = 0.050000000000000003
      flags = 0
      segment { length = 0 value = 0.050000000000000003 0.050000000000000003 expr = ch(\"../opengl2/minreflection\") }
    }
    channel reflection {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/reflection\") }
    }
    channel displacequality {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/displacequality\") }
    }
    channel displacement {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/displacement\") }
    }
    channel motionblurframes {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      segment { length = 0 value = 5 5 expr = ch(\"../opengl2/motionblurframes\") }
    }
    channel motionblur {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/motionblur\") }
    }
    channel dof {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/dof\") }
    }
    channel transquality {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../opengl2/transquality\") }
    }
    channel transparency {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/transparency\") }
    }
    channel ambquality {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../opengl2/ambquality\") }
    }
    channel ambocclusion {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/ambocclusion\") }
    }
    channel shadowmap {
      lefttype = extend
      righttype = extend
      default = 2048
      flags = 0
      segment { length = 0 value = 2048 2048 expr = ch(\"../opengl2/shadowmap\") }
    }
    channel shadowquality {
      lefttype = extend
      righttype = extend
      default = 3
      flags = 0
      segment { length = 0 value = 3 3 expr = ch(\"../opengl2/shadowquality\") }
    }
    channel shadows {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/shadows\") }
    }
    channel lightsamples {
      lefttype = extend
      righttype = extend
      default = 8
      flags = 0
      segment { length = 0 value = 8 8 expr = ch(\"../opengl2/lightsamples\") }
    }
    channel hqlighting {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/hqlighting\") }
    }
    channel usetextures {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/usetextures\") }
    }
    channel shadingmode {
      lefttype = extend
      righttype = extend
      default = 6
      flags = 0
      segment { length = 0 value = 6 6 expr = ch(\"../opengl2/shadingmode\") }
    }
    channel stereo {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/stereo\") }
    }
    channel usehdr {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/usehdr\") }
    }
    channel aamode {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../opengl2/aamode\") }
    }
    channel vm_image_exr_compression {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../opengl2/vm_image_exr_compression\") }
    }
    channel vm_image_tiff_compression {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/vm_image_tiff_compression\") }
    }
    channel vm_image_jpeg_quality {
      lefttype = extend
      righttype = extend
      default = 100
      flags = 0
      segment { length = 0 value = 100 100 expr = ch(\"../opengl2/vm_image_jpeg_quality\") }
    }
    channel vm_image_mplay_gamma {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/vm_image_mplay_gamma\") }
    }
    channel vm_image_mplay_label {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/vm_image_mplay_label\") }
    }
    channel vm_image_hostname {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/vm_image_hostname\") }
    }
    channel vm_image_comment {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/vm_image_comment\") }
    }
    channel vm_image_artist {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/vm_image_artist\") }
    }
    channel ociolooks {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/ociolooks\") }
    }
    channel ociocolorspace {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/ociocolorspace\") }
    }
    channel lut {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/lut\") }
    }
    channel saveretry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/saveretry\") }
    }
    channel mkpath {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/mkpath\") }
    }
    channel vpcomment {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/vpcomment\") }
    }
    channel bgimage {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/bgimage\") }
    }
    channel aspect {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/aspect\") }
    }
    channel resmenu {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/resmenu\") }
    }
    channel res2 {
      lefttype = extend
      righttype = extend
      default = 480
      flags = 0
      segment { length = 0 value = 480 480 expr = ch(\"../opengl2/res2\") }
    }
    channel res1 {
      lefttype = extend
      righttype = extend
      default = 640
      flags = 0
      segment { length = 0 value = 640 640 expr = ch(\"../opengl2/res1\") }
    }
    channel tres {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/tres\") }
    }
    channel soho_viewport_menu {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/soho_viewport_menu\") }
    }
    channel soho_initsim {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/soho_initsim\") }
    }
    channel excludelights {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../opengl2/excludelights\") }
    }
    channel forcelights {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../opengl2/forcelights\") }
    }
    channel alights {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chsop(\"../opengl2/alights\") }
    }
    channel excludeobjects {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../opengl2/excludeobjects\") }
    }
    channel forceobjects {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chsop(\"../opengl2/forceobjects\") }
    }
    channel vobjects {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chsop(\"../opengl2/vobjects\") }
    }
    channel sopsource {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/sopsource\") }
    }
    channel scenepath {
      lefttype = extend
      righttype = extend
      defaultString = \"/obj\"
      flags = 0
      segment { length = 0 expr = chsop(\"../opengl2/scenepath\") }
    }
    channel camera {
      lefttype = extend
      righttype = extend
      defaultString = chsop(\"../camera\")
      flags = 0
      segment { length = 0 expr = chsop(\"../opengl2/camera\") }
    }
    channel take {
      lefttype = extend
      righttype = extend
      defaultString = \"_current_\"
      flags = 0
      segment { length = 0 expr = chs(\"../opengl2/take\") }
    }
    channel f3 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/f3\") }
    }
    channel f2 {
      lefttype = extend
      righttype = extend
      default = 240
      flags = 0
      segment { length = 0 value = 240 240 expr = ch(\"../opengl2/f2\") }
    }
    channel f1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../opengl2/f1\") }
    }
    channel trange {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../opengl2/trange\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/opengl3.parm"
Content-Type: text/plain

{
version 0.8
execute	[ 0	locks=0 ]	(	0	)
renderdialog	[ 0	locks=0 ]	(	0	)
trange	[ 0	locks=0 ]	(	[ trange	0 ] 	)
f	[ 0	locks=0 ]	(	[ f1	1 ] 	[ f2	240 ] 	[ f3	1 ] 	)
take	[ 0	locks=0 ]	(	[ take	_current_ ] 	)
stdswitch	[ 0	locks=0 ]	(	1	1	1	1	1	1	1	)
opsource	[ 0	locks=0 ]	(	"obj"	)
camera	[ 0	locks=0 ]	(	[ camera	/obj/cam1 ] 	)
scenepath	[ 0	locks=0 ]	(	[ scenepath	/obj ] 	)
sopsource	[ 0	locks=0 ]	(	[ sopsource	1 ] 	)
vobjects	[ 0	locks=0 ]	(	[ vobjects	* ] 	)
forceobjects	[ 0	locks=0 ]	(	[ forceobjects	"" ] 	)
excludeobjects	[ 0	locks=0 ]	(	[ excludeobjects	"" ] 	)
alights	[ 0	locks=0 ]	(	[ alights	* ] 	)
forcelights	[ 0	locks=0 ]	(	[ forcelights	"" ] 	)
excludelights	[ 0	locks=0 ]	(	[ excludelights	"" ] 	)
loppath	[ 0	locks=0 ]	(	""	)
cameraprim	[ 0	locks=0 ]	(	""	)
purposerender	[ 0	locks=0 ]	(	"off"	)
purposeproxy	[ 0	locks=0 ]	(	"on"	)
purposeguide	[ 0	locks=0 ]	(	"off"	)
soho_initsim	[ 0	locks=0 ]	(	[ soho_initsim	0 ] 	)
soho_viewport_menu	[ 0	locks=0 ]	(	[ soho_viewport_menu	1 ] 	)
tres	[ 0	locks=0 ]	(	[ tres	0 ] 	)
res	[ 0	locks=0 ]	(	[ res1	1280 ] 	[ res2	720 ] 	)
resmenu	[ 0	locks=0 ]	(	[ resmenu	0 ] 	)
aspect	[ 0	locks=0 ]	(	[ aspect	1 ] 	)
tsheet	[ 0	locks=0 ]	(	"off"	)
sheetsize	[ 0	locks=0 ]	(	2	2	)
bgimage	[ 0	locks=0 ]	(	[ bgimage	"" ] 	)
vpcomment	[ 0	locks=0 ]	(	[ vpcomment	"" ] 	)
picture	[ 0	locks=0 ]	(	$HIP/temp/depth.exr	)
mkpath	[ 0	locks=0 ]	(	[ mkpath	1 ] 	)
saveretry	[ 0	locks=0 ]	(	[ saveretry	0 ] 	)
imagetype	[ 0	locks=0 ]	(	"zdepth"	)
colorcorrect	[ 0	locks=0 ]	(	"lut_gamma"	)
gamma	[ 0	locks=0 ]	(	1	)
lut	[ 0	locks=0 ]	(	[ lut	"" ] 	)
ociocolorspace	[ 0	locks=0 ]	(	[ ociocolorspace	"" ] 	)
ociolooks	[ 0	locks=0 ]	(	[ ociolooks	"" ] 	)
vm_image_artist	[ 0	locks=0 ]	(	[ vm_image_artist	"" ] 	)
vm_image_comment	[ 0	locks=0 ]	(	[ vm_image_comment	"" ] 	)
vm_image_hostname	[ 0	locks=0 ]	(	[ vm_image_hostname	"" ] 	)
vm_image_mplay_label	[ 0	locks=0 ]	(	[ vm_image_mplay_label	"" ] 	)
vm_image_mplay_gamma	[ 0	locks=0 ]	(	[ vm_image_mplay_gamma	1 ] 	)
vm_image_jpeg_quality	[ 0	locks=0 ]	(	[ vm_image_jpeg_quality	100 ] 	)
vm_image_tiff_compression	[ 0	locks=0 ]	(	[ vm_image_tiff_compression	1 ] 	)
vm_image_exr_compression	[ 0	locks=0 ]	(	[ vm_image_exr_compression	4 ] 	)
aamode	[ 0	locks=0 ]	(	[ aamode	2 ] 	)
usehdr	[ 0	locks=0 ]	(	[ usehdr	1 ] 	)
stereo	[ 0	locks=0 ]	(	[ stereo	1 ] 	)
shadingmode	[ 0	locks=0 ]	(	[ shadingmode	6 ] 	)
usetextures	[ 0	locks=0 ]	(	[ usetextures	1 ] 	)
hqlighting	[ 0	locks=0 ]	(	[ hqlighting	1 ] 	)
lightsamples	[ 0	locks=0 ]	(	[ lightsamples	8 ] 	)
shadows	[ 0	locks=0 ]	(	[ shadows	1 ] 	)
shadowquality	[ 0	locks=0 ]	(	[ shadowquality	3 ] 	)
shadowmap	[ 0	locks=0 ]	(	[ shadowmap	2048 ] 	)
ambocclusion	[ 0	locks=0 ]	(	[ ambocclusion	0 ] 	)
ambquality	[ 0	locks=0 ]	(	[ ambquality	2 ] 	)
transparency	[ 0	locks=0 ]	(	[ transparency	1 ] 	)
transquality	[ 0	locks=0 ]	(	[ transquality	3 ] 	)
motionblur	[ 0	locks=0 ]	(	[ motionblur	0 ] 	)
motionblurframes	[ 0	locks=0 ]	(	[ motionblurframes	5 ] 	)
displacement	[ 0	locks=0 ]	(	[ displacement	1 ] 	)
displacequality	[ 0	locks=0 ]	(	[ displacequality	1 ] 	)
reflection	[ 0	locks=0 ]	(	[ reflection	0 ] 	)
minreflection	[ 0	locks=0 ]	(	[ minreflection	0.050000000000000003 ] 	)
hdrreflection	[ 0	locks=0 ]	(	[ hdrreflection	1 ] 	)
reflectionsize	[ 0	locks=0 ]	(	[ reflectionsize	512 ] 	)
backfacecull	[ 0	locks=0 ]	(	"off"	)
fognode	[ 0	locks=0 ]	(	""	)
uniformfog	[ 0	locks=0 ]	(	"off"	)
fogdensity	[ 0	locks=0 ]	(	0.001	)
fogopacity	[ 0	locks=0 ]	(	1	)
fogcolor	[ 0	locks=0 ]	(	0.5	0.5	0.5	)
fogrange	[ 0	locks=0 ]	(	0	1000	)
fogclipdistance	[ 0	locks=0 ]	(	1000000	)
fogheightmode	[ 0	locks=0 ]	(	"off"	)
fogheight	[ 0	locks=0 ]	(	100	)
fogheightfalloff	[ 0	locks=0 ]	(	100	)
fogsunenable	[ 0	locks=0 ]	(	"on"	)
fogsunbloom	[ 0	locks=0 ]	(	5	)
fogintensity	[ 0	locks=0 ]	(	1	)
volumefog	[ 0	locks=0 ]	(	"off"	)
vfogquality	[ 0	locks=0 ]	(	"volumehigh"	)
vfogdensity	[ 0	locks=0 ]	(	0.001	)
vfogopacity	[ 0	locks=0 ]	(	1	)
vfogcolor	[ 0	locks=0 ]	(	0.5	0.5	0.5	)
vfogrange	[ 0	locks=0 ]	(	1	200	)
vfogheightmode	[ 0	locks=0 ]	(	"off"	)
vfogheight	[ 0	locks=0 ]	(	100	)
vfogheightfalloff	[ 0	locks=0 ]	(	100	)
vfogintensity	[ 0	locks=0 ]	(	1	)
vfogscatter	[ 0	locks=0 ]	(	1	1	)
bloom	[ 0	locks=0 ]	(	"off"	)
bloomscale	[ 0	locks=0 ]	(	10	)
bloomintensity	[ 0	locks=0 ]	(	1	)
bloomthreshold	[ 0	locks=0 ]	(	0.94999999999999996	)
dof	[ 0	locks=0 ]	(	[ dof	0 ] 	)
bokeh	[ 0	locks=0 ]	(	"none"	)
bokehfile	[ 0	locks=0 ]	(	$HH/pic/circle.pic	)
bokehcop	[ 0	locks=0 ]	(	""	)
bokehaspect	[ 0	locks=0 ]	(	1	)
bokehboost	[ 0	locks=0 ]	(	1	)
volumequality	[ 0	locks=0 ]	(	[ volumequality	3 ] 	)
lod	[ 0	locks=0 ]	(	[ lod	1 ] 	)
wirewidth	[ 0	locks=0 ]	(	[ wirewidth	1 ] 	)
wireblend	[ 0	locks=0 ]	(	[ wireblend	0.5 ] 	)
particle	[ 0	locks=0 ]	(	[ particle	0 ] 	)
pointsize	[ 0	locks=0 ]	(	[ pointsize	3 ] 	)
discsize	[ 0	locks=0 ]	(	[ discsize	0.050000000000000003 ] 	)
orientton	[ 0	locks=0 ]	(	[ orientton	0 ] 	)
usesprites	[ 0	locks=0 ]	(	[ usesprites	1 ] 	)
usegeocolor	[ 0	locks=0 ]	(	[ usegeocolor	1 ] 	)
tex2dlimit	[ 0	locks=0 ]	(	[ tex2dlimit	0 ] 	)
tex2dres	[ 0	locks=0 ]	(	[ tex2dres	2048 ] 	)
tex2dformat	[ 0	locks=0 ]	(	[ tex2dformat	1 ] 	)
tex3dlimit	[ 0	locks=0 ]	(	[ tex3dlimit	0 ] 	)
tex3dres	[ 0	locks=0 ]	(	[ tex3dres	384 ] 	)
tex3dformat	[ 0	locks=0 ]	(	[ tex3dformat	1 ] 	)
texmemlimit	[ 0	locks=0 ]	(	[ texmemlimit	512 ] 	)
spritetexmaxres	[ 0	locks=0 ]	(	[ spritetexmaxresx	128 ] 	[ spritetexmaxresy	128 ] 	)
instancepercent	[ 0	locks=0 ]	(	[ instancepercent	100 ] 	)
instancelimit	[ 0	locks=0 ]	(	[ instancelimit	20 ] 	)
instancestandin	[ 0	locks=0 ]	(	[ instancestandin	2 ] 	)
tprerender	[ 0	locks=0 ]	(	[ tprerender	1 ] 	)
prerender	[ 0	locks=0 ]	(	[ prerender	"" ] 	)
lprerender	[ 0	locks=0 ]	(	[ lprerender	hscript ] 	)
tpreframe	[ 0	locks=0 ]	(	[ tpreframe	1 ] 	)
preframe	[ 0	locks=0 ]	(	[ preframe	"" ] 	)
lpreframe	[ 0	locks=0 ]	(	[ lpreframe	hscript ] 	)
tpostframe	[ 0	locks=0 ]	(	[ tpostframe	1 ] 	)
postframe	[ 0	locks=0 ]	(	[ postframe	"" ] 	)
lpostframe	[ 0	locks=0 ]	(	[ lpostframe	hscript ] 	)
tpostrender	[ 0	locks=0 ]	(	[ tpostrender	1 ] 	)
postrender	[ 0	locks=0 ]	(	[ postrender	"" ] 	)
lpostrender	[ 0	locks=0 ]	(	[ lpostrender	hscript ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/opengl3.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/shell1.init"
Content-Type: text/plain

type = shell
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/shell1.def"
Content-Type: text/plain

comment ""
position 0.80717 2.6955
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch1 2 1 "input1"
}
inputs
{
0 	switch1 0 1
}
stat
{
  create -1
  modify -1
  author prisms@threadripper1
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/shell1.chn"
Content-Type: text/plain

{
    channel f1 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = $FSTART }
    }
    channel f2 {
      lefttype = extend
      righttype = extend
      default = 240
      flags = 0
      segment { length = 0 value = 240 240 expr = $FEND }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/shell1.parm"
Content-Type: text/plain

{
version 0.8
execute	[ 0	locks=0 ]	(	0	)
renderdialog	[ 0	locks=0 ]	(	0	)
trange	[ 0	locks=0 ]	(	"off"	)
f	[ 0	locks=0 ]	(	[ f1	1 ] 	[ f2	240 ] 	1	)
take	[ 0	locks=0 ]	(	_current_	)
switcher	[ 0	locks=0 ]	(	1	1	)
command	[ 0	locks=0 ]	(	""	)
shellexec	[ 0	locks=0 ]	(	"off"	)
initsim	[ 0	locks=0 ]	(	"off"	)
tprerender	[ 0	locks=0 ]	(	"on"	)
prerender	[ 0	locks=0 ]	(	""	)
lprerender	[ 0	locks=0 ]	(	hscript	)
tpreframe	[ 0	locks=0 ]	(	"on"	)
preframe	[ 0	locks=0 ]	(	""	)
lpreframe	[ 0	locks=0 ]	(	hscript	)
tpostframe	[ 0	locks=0 ]	(	"on"	)
postframe	[ 0	locks=0 ]	(	""	)
lpostframe	[ 0	locks=0 ]	(	hscript	)
tpostrender	[ 0	locks=0 ]	(	"on"	)
postrender	[ 0	locks=0 ]	(	hou.node(\"..\").hdaModule().PostRender(hou.node(\"..\"))	)
lpostrender	[ 0	locks=0 ]	(	python	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/shell1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

7
cop2net1
opengl2
switch1
mantra1
Render
opengl3
shell1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
