MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Sop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = labs::random_selection::1.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -3.94447 0.745383
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author christoss@oxbow
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"wirestyle":{
		"type":"string",
		"value":"rounded"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.inp"
Content-Type: text/plain

1
0 -0.4999999888241291 4.883299995213747 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/exact1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/exact1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -3.503 -1.151
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	switch_class 2 1 "input1"
}
inputs
{
0 	switch_class 0 1
}
stat
{
  create -1
  modify -1
  author Esca@EM2014L1
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/exact1.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "specification"
            label   "Specification"
            type    ordinal
            default { "0" }
            menu {
                "0" "Ratio"
                "1" "Count"
            }
            range   { 0 10 }
        }
        parm {
            name    "count"
            label   "Count"
            type    integer
            default { "0" }
            range   { 0 10 }
        }
        parm {
            name    "ratio"
            label   "Ratio"
            type    float
            default { "0" }
            range   { 0 1 }
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/exact1.chn"
Content-Type: text/plain

{
    channel class {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../class\")+1 }
    }
    channel specification {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../specification\") }
    }
    channel count {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../count\") }
    }
    channel ratio {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ratio\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/exact1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"int limit = 0;

if (chi(\"specification\") == 0) {
    limit = int(chf(\"ratio\") * @numelem);
} else {
    limit = chi(\"count\");
}

if (@elemnum < limit) {
    @group___selected = 1;
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
specification	[ 0	locks=0 ]	(	[ specification	0 ] 	)
count	[ 0	locks=0 ]	(	[ count	0 ] 	)
ratio	[ 0	locks=0 ]	(	[ ratio	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/exact1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/random_ptnum.init"
Content-Type: text/plain

type = sort
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/random_ptnum.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -2 1.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	store_elemnum_switch 2 1 "input1"
}
inputs
{
0 	store_elemnum_switch 0 1
}
stat
{
  create -1
  modify -1
  author Esca@EM2014L1
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/random_ptnum.chn"
Content-Type: text/plain

{
    channel pointseed {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../randseed\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/random_ptnum.parm"
Content-Type: text/plain

{
version 0.8
pointsfolder	[ 0	locks=0 ]	(	0	)
ptgroup	[ 0	locks=0 ]	(	""	)
ptsort	[ 0	locks=0 ]	(	"seed"	)
pointseed	[ 0	locks=0 ]	(	[ pointseed	0 ] 	)
pointoffset	[ 0	locks=0 ]	(	0	)
pointprox	[ 0	locks=0 ]	(	0	0	0	)
pointobjpath	[ 0	locks=0 ]	(	""	)
pointdir	[ 0	locks=0 ]	(	0	1	0	)
pointexpr	[ 0	locks=0 ]	(	0	)
pointattrib	[ 0	locks=0 ]	(	""	)
pointattribcomp	[ 0	locks=0 ]	(	0	)
pointreverse	[ 0	locks=0 ]	(	"off"	)
primitivesfolder	[ 0	locks=0 ]	(	0	)
primgroup	[ 0	locks=0 ]	(	""	)
primsort	[ 0	locks=0 ]	(	"none"	)
primseed	[ 0	locks=0 ]	(	0	)
primoffset	[ 0	locks=0 ]	(	0	)
primprox	[ 0	locks=0 ]	(	0	0	0	)
primobjpath	[ 0	locks=0 ]	(	""	)
primdir	[ 0	locks=0 ]	(	0	1	0	)
primexpr	[ 0	locks=0 ]	(	0	)
primattrib	[ 0	locks=0 ]	(	""	)
primattribcomp	[ 0	locks=0 ]	(	0	)
primreverse	[ 0	locks=0 ]	(	"off"	)
vertexprimorder	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/random_ptnum.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_selected.init"
Content-Type: text/plain

type = groupcreate
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_selected.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1 -11.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight on unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_blast2 2 1 "input1"
}
inputs
{
0 	switch_blast2 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_selected.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../class\") }
    }
    channel groupname {
      lefttype = extend
      righttype = extend
      defaultString = \"selected\"
      flags = 0
      segment { length = 0 expr = chs(\"../groupname\") }
    }
    channel groupbase {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../creategroup\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_selected.parm"
Content-Type: text/plain

{
version 0.8
groupname	[ 0	locks=0 ]	(	[ groupname	group1 ] 	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
mergeop	[ 0	locks=0 ]	(	"replace"	)
folder0	[ 0	locks=0 ]	(	0	)
groupbase	[ 0	locks=0 ]	(	[ groupbase	1 ] 	)
basegroup	[ 0	locks=0 ]	(	__selected	)
ordered	[ 0	locks=0 ]	(	"off"	)
geotype	[ 0	locks=0 ]	(	"all"	)
switcher3	[ 0	locks=0 ]	(	0	)
groupbounding	[ 0	locks=0 ]	(	"off"	)
boundtype	[ 0	locks=0 ]	(	"usebbox"	)
size	[ 0	locks=0 ]	(	1	1	1	)
t	[ 0	locks=0 ]	(	0	0	0	)
includenotwhollycontained	[ 0	locks=0 ]	(	"off"	)
iso	[ 0	locks=0 ]	(	0	)
invertvolume	[ 0	locks=0 ]	(	"off"	)
switcher4	[ 0	locks=0 ]	(	0	)
groupnormal	[ 0	locks=0 ]	(	"off"	)
camerapath	[ 0	locks=0 ]	(	""	)
nonplanar	[ 0	locks=0 ]	(	"off"	)
nonplanartol	[ 0	locks=0 ]	(	0.001	)
dir	[ 0	locks=0 ]	(	0	0	1	)
angle	[ 0	locks=0 ]	(	180	)
switcher5	[ 0	locks=0 ]	(	0	)
groupedges	[ 0	locks=0 ]	(	"off"	)
dominedgeangle	[ 0	locks=0 ]	(	"off"	)
minedgeangle	[ 0	locks=0 ]	(	20	)
domaxedgeangle	[ 0	locks=0 ]	(	"off"	)
maxedgeangle	[ 0	locks=0 ]	(	20	)
edgeanglebetweenedges	[ 0	locks=0 ]	(	"off"	)
dominedgelen	[ 0	locks=0 ]	(	"off"	)
minedgelen	[ 0	locks=0 ]	(	0	)
domaxedgelen	[ 0	locks=0 ]	(	"off"	)
maxedgelen	[ 0	locks=0 ]	(	0	)
dodepth	[ 0	locks=0 ]	(	"off"	)
edgestep	[ 0	locks=0 ]	(	0	)
edgeptgrp	[ 0	locks=0 ]	(	0	)
unshared	[ 0	locks=0 ]	(	"off"	)
boundarygroups	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_selected.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -15.15
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	group_cleanup 1 1 "input1"
}
inputs
{
0 	group_cleanup 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/probability.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/probability.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.503 -1.151
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/probability.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "seed"
            label   "Seed"
            type    integer
            default { "0" }
            range   { 0 200 }
        }
        parm {
            name    "probability"
            label   "Probability"
            type    float
            default { "0" }
            range   { 0! 1! }
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/probability.chn"
Content-Type: text/plain

{
    channel seed {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../randseed\") }
    }
    channel probability {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../probability\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../class\")+1 }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/probability.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"float probability = chf(\"probability\");
probability = probability == 1 ? 1.001 : probability;

if (rand((chf(\"seed\") + 1.7) * @elemnum) < probability) {
    @group___selected = 1;
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
seed	[ 0	locks=0 ]	(	[ seed	0 ] 	)
probability	[ 8	locks=0 ]	(	[ probability	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/probability.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/random_primnum.init"
Content-Type: text/plain

type = sort
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/random_primnum.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -5 1.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	store_elemnum_switch 2 1 "input1"
}
inputs
{
0 	store_elemnum_switch 0 1
}
stat
{
  create -1
  modify -1
  author Esca@EM2014L1
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/random_primnum.chn"
Content-Type: text/plain

{
    channel primseed {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../randseed\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/random_primnum.parm"
Content-Type: text/plain

{
version 0.8
pointsfolder	[ 0	locks=0 ]	(	0	)
ptgroup	[ 0	locks=0 ]	(	""	)
ptsort	[ 0	locks=0 ]	(	"none"	)
pointseed	[ 0	locks=0 ]	(	0	)
pointoffset	[ 0	locks=0 ]	(	0	)
pointprox	[ 0	locks=0 ]	(	0	0	0	)
pointobjpath	[ 0	locks=0 ]	(	""	)
pointdir	[ 0	locks=0 ]	(	0	1	0	)
pointexpr	[ 0	locks=0 ]	(	0	)
pointattrib	[ 0	locks=0 ]	(	""	)
pointattribcomp	[ 0	locks=0 ]	(	0	)
pointreverse	[ 0	locks=0 ]	(	"off"	)
primitivesfolder	[ 0	locks=0 ]	(	0	)
primgroup	[ 0	locks=0 ]	(	""	)
primsort	[ 0	locks=0 ]	(	"seed"	)
primseed	[ 0	locks=0 ]	(	[ primseed	0 ] 	)
primoffset	[ 0	locks=0 ]	(	0	)
primprox	[ 0	locks=0 ]	(	0	0	0	)
primobjpath	[ 0	locks=0 ]	(	""	)
primdir	[ 0	locks=0 ]	(	0	1	0	)
primexpr	[ 0	locks=0 ]	(	0	)
primattrib	[ 0	locks=0 ]	(	""	)
primattribcomp	[ 0	locks=0 ]	(	0	)
primreverse	[ 0	locks=0 ]	(	"off"	)
vertexprimorder	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/random_primnum.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_elemnum_switch.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_elemnum_switch.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -3.5 2.8498
connectornextid 4
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
1 	store_elemnum_orig1 1 1 "input1"
0 	(0) "" 1 "input2"
3 	(0) "" 1 "input3"
}
inputs
{
0 	store_elemnum_orig1 0 1
1 	(0) 0 1
2 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_elemnum_switch.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../switch_method/input\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_elemnum_switch.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_elemnum_switch.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_class.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_class.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -3.5 -0.1502
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
1 	total_elem 1 1 "input1"
0 	total_elem1 1 1 "input2"
}
inputs
{
0 	total_elem 0 1
1 	total_elem1 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_class.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../class\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_class.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_class.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_cleanup.init"
Content-Type: text/plain

type = groupdelete
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_cleanup.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -14.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attrib_cleanup 1 1 "input1"
}
inputs
{
0 	attrib_cleanup 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_cleanup.parm"
Content-Type: text/plain

{
version 0.8
deletions	[ 0	locks=0 ]	(	1	)
removegrp	[ 0	locks=0 ]	(	"off"	)
enable1	[ 0	locks=0 ]	(	"on"	)
grouptype1	[ 0	locks=0 ]	(	"any"	)
group1	[ 0	locks=0 ]	(	__selected	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/group_cleanup.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color_selected.init"
Content-Type: text/plain

type = color
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color_selected.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1 -5.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	SELECTION 0 1 "input1"
}
inputs
{
0 	SELECTION 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color_selected.multiparm"
Content-Type: text/plain

5
ramp#pos ../ramp#pos
ramp#cr ../ramp#cr
ramp#cg ../ramp#cg
ramp#cb ../ramp#cb
ramp#interp ../ramp#interp

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color_selected.chn"
Content-Type: text/plain

{
    channel ramp1pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ramp1pos\") }
    }
    channel ramp1cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ramp1cr\") }
    }
    channel ramp1cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ramp1cg\") }
    }
    channel ramp1cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ramp1cb\") }
    }
    channel ramp1interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ramp1interp\") }
    }
    channel ramp2pos {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ramp2pos\") }
    }
    channel ramp2cr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ramp2cr\") }
    }
    channel ramp2cg {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ramp2cg\") }
    }
    channel ramp2cb {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ramp2cb\") }
    }
    channel ramp2interp {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ramp2interp\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../class\")+1 }
    }
    channel colortype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../colortype\") }
    }
    channel seed {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../seed\") }
    }
    channel rampattribute {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../rampattribute\") }
    }
    channel ramprange1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ramprange1\") }
    }
    channel ramprange2 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../ramprange2\") }
    }
    channel ramp {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../ramp\") }
    }
    channel colorr {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../colorr\") }
    }
    channel colorg {
      lefttype = extend
      righttype = extend
      default = 0.45000000000000001
      flags = 0
      segment { length = 0 value = 0.45000000000000001 0.45000000000000001 expr = ch(\"../colorg\") }
    }
    channel colorb {
      lefttype = extend
      righttype = extend
      default = 0.90000000000000002
      flags = 0
      segment { length = 0 value = 0.90000000000000002 0.90000000000000002 expr = ch(\"../colorb\") }
    }
    channel deleteallcolorattribs {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../deleteallcolorattribs\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color_selected.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	__selected	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
deleteallcolorattribs	[ 0	locks=0 ]	(	[ deleteallcolorattribs	0 ] 	)
class	[ 0	locks=0 ]	(	[ class	2 ] 	)
colortype	[ 0	locks=0 ]	(	[ colortype	0 ] 	)
color	[ 0	locks=0 ]	(	[ colorr	1 ] 	[ colorg	1 ] 	[ colorb	1 ] 	)
seed	[ 0	locks=0 ]	(	[ seed	0 ] 	)
rampattribute	[ 0	locks=0 ]	(	[ rampattribute	"" ] 	)
ramprange	[ 0	locks=0 ]	(	[ ramprange1	0 ] 	[ ramprange2	1 ] 	)
ramp	[ 0	locks=0 ]	(	[ ramp	2 ] 	)
ramp1pos	[ 0	locks=0 ]	(	[ ramp1pos	0 ] 	)
ramp1c	[ 0	locks=0 ]	(	[ ramp1cr	0 ] 	[ ramp1cg	0 ] 	[ ramp1cb	0 ] 	)
ramp1interp	[ 0	locks=0 ]	(	[ ramp1interp	1 ] 	)
ramp2pos	[ 0	locks=0 ]	(	[ ramp2pos	0 ] 	)
ramp2c	[ 0	locks=0 ]	(	[ ramp2cr	0 ] 	[ ramp2cg	0 ] 	[ ramp2cb	0 ] 	)
ramp2interp	[ 0	locks=0 ]	(	[ ramp2interp	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color_selected.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"___toolcount___":{
		"type":"string",
		"value":"2"
	},
	"___toolid___":{
		"type":"string",
		"value":"sop_color"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_color.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_color.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -6.1502
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	SELECTION 0 1 "input1"
1 	color_selected 1 1 "input2"
}
inputs
{
0 	SELECTION 0 1
1 	color_selected 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_color.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../colorselected\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_color.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_color.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attrib_cleanup.init"
Content-Type: text/plain

type = attribdelete
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attrib_cleanup.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.50345 -13.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_create_group 2 1 "input1"
}
inputs
{
0 	switch_create_group 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attrib_cleanup.parm"
Content-Type: text/plain

{
version 0.8
usereference	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"off"	)
doptdel	[ 0	locks=0 ]	(	"on"	)
ptdel	[ 0	locks=0 ]	(	""	)
dovtxdel	[ 0	locks=0 ]	(	"on"	)
vtxdel	[ 0	locks=0 ]	(	""	)
doprimdel	[ 0	locks=0 ]	(	"on"	)
primdel	[ 0	locks=0 ]	(	""	)
dodtldel	[ 0	locks=0 ]	(	"on"	)
dtldel	[ 0	locks=0 ]	(	__total_elem	)
updatevar	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attrib_cleanup.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/exact.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/exact.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -6.503 -1.151
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
1 	switch_class 2 1 "input2"
}
inputs
{
0 	(0) 0 1
1 	switch_class 0 1
}
stat
{
  create -1
  modify -1
  author Esca@EM2014L1
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/exact.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "specification"
            label   "Specification"
            type    ordinal
            default { "0" }
            menu {
                "0" "Ratio"
                "1" "Count"
            }
        }
        parm {
            name    "count"
            label   "Count"
            type    integer
            default { "0" }
            range   { 0 10 }
        }
        parm {
            name    "ratio"
            label   "Ratio"
            type    float
            default { "0" }
            range   { 0 1 }
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/exact.chn"
Content-Type: text/plain

{
    channel specification {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../specification\") }
    }
    channel count {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../count\") }
    }
    channel ratio {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../ratio\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../class\")+1 }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/exact.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"int limit = 0;

if (chi(\"specification\") == 0) {
    limit = int(chf(\"ratio\") * detail(1, \"__total_elem\", 0));

} else {
    limit = chi(\"count\");
}

if (chi(\"class\") == 1) {
    // Primitive

    if (int(prim(1, \"__elemnum_orig\", @primnum)) <  limit) {
        @group___selected = 1;
    }

} else if (chi(\"class\") == 2) {
    // Point

    if (int(point(1, \"__elemnum_orig\", @ptnum)) < limit) {
        @group___selected = 1;
    }
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
specification	[ 0	locks=0 ]	(	[ specification	0 ] 	)
count	[ 0	locks=0 ]	(	[ count	0 ] 	)
ratio	[ 0	locks=0 ]	(	[ ratio	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/exact.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_method.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_method.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -2.1502
connectornextid 6
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
3 "output1"
}
inputsNamed3
{
1 	exact 2 1 "input1"
0 	exact1 2 1 "input2"
2 	probability 1 1 "input3"
4 	periodic 1 1 "input4"
5 	periodic1 1 1 "input5"
}
inputs
{
0 	exact 0 1
1 	exact1 0 1
2 	probability 0 1
3 	periodic 0 1
4 	periodic1 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_method.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../selectionmode\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_method.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_method.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_blast2.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_blast2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -10.1502
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	switch_blast1 2 1 "input1"
3 	blast_selected 1 1 "input2"
}
inputs
{
0 	switch_blast1 0 1
1 	blast_selected 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_blast2.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../deleteselected\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_blast2.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_blast2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/total_elem.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/total_elem.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -5.003 0.849
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	random_primnum 1 1 "input1"
}
inputs
{
0 	random_primnum 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/total_elem.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"detail"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"i@__total_elem = nprimitives(0);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/total_elem.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/total_elem1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/total_elem1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -2.003 0.849
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	random_ptnum 1 1 "input1"
}
inputs
{
0 	random_ptnum 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/total_elem1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"detail"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"i@__total_elem = npoints(0);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/total_elem1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_selected.init"
Content-Type: text/plain

type = blast
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_selected.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1 -9.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_blast1 2 1 "input1"
}
inputs
{
0 	switch_blast1 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_selected.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	__selected	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
computenorms	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"off"	)
fillhole	[ 0	locks=0 ]	(	"off"	)
removegrp	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_selected.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_create_group.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_create_group.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -12.1502
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	switch_blast2 2 1 "input1"
1 	group_selected 1 1 "input2"
}
inputs
{
0 	switch_blast2 0 1
1 	group_selected 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_create_group.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../creategroup\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_create_group.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_create_group.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_blast1.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_blast1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -8.1502
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	switch_color 2 1 "input1"
1 	blast_non_selected 1 1 "input2"
}
inputs
{
0 	switch_color 0 1
1 	blast_non_selected 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_blast1.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../deletenonselected\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_blast1.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_blast1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_non_selected.init"
Content-Type: text/plain

type = blast
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_non_selected.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1 -7.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_color 2 1 "input1"
}
inputs
{
0 	switch_color 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_non_selected.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	__selected	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
computenorms	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"on"	)
fillhole	[ 0	locks=0 ]	(	"off"	)
removegrp	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_non_selected.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_elemnum_orig1.init"
Content-Type: text/plain

type = enumerate
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_elemnum_orig1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -5 3.85
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author maia@truro
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_elemnum_orig1.chn"
Content-Type: text/plain

{
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../class\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_elemnum_orig1.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
usepieceattrib	[ 0	locks=0 ]	(	"off"	)
pieceattrib	[ 0	locks=0 ]	(	name	)
piecemode	[ 0	locks=0 ]	(	"elements"	)
attribname	[ 0	locks=0 ]	(	__elemnum_orig	)
attribtype	[ 0	locks=0 ]	(	"int"	)
prefix	[ 0	locks=0 ]	(	piece	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/store_elemnum_orig1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/SELECTION.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/SELECTION.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -4.155
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	warning 1 1 "input1"
}
inputs
{
0 	warning 0 1
}
stat
{
  create -1
  modify -1
  author maia@truro
  access 0777
}
color UT_Color RGB 0.302 0.525 0.114 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/SELECTION.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/SELECTION.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/periodic.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/periodic.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 2.497 -1.151
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/periodic.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "select_length"
            label   "Select Length"
            type    integer
            default { "0" }
            range   { 0 10 }
        }
        parm {
            name    "skip_length"
            label   "Skip Length"
            type    integer
            default { "0" }
            range   { 0 10 }
        }
        parm {
            name    "offset"
            label   "Offset"
            type    integer
            default { "0" }
            range   { 0 10 }
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/periodic.chn"
Content-Type: text/plain

{
    channel class {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../class\")+1 }
    }
    channel offset {
      lefttype = extend
      righttype = extend
      flags = 0
      start = -41.708333333333336
      segment { length = 0 expr = ch(\"../offset\") }
    }
    channel select_length {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      start = -41.708333333333336
      segment { length = 0 value = 2 2 expr = ch(\"../selectlen\") }
    }
    channel skip_length {
      lefttype = extend
      righttype = extend
      default = 6
      flags = 0
      start = -41.708333333333336
      segment { length = 0 value = 6 6 expr = ch(\"../skiplen\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/periodic.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"int select_length = chi(\"select_length\");
int skip_length = chi(\"skip_length\");
int offset = chi(\"offset\");

if ((@elemnum + offset) % (select_length + skip_length) <
    select_length) {
    
    @group___selected = 1;
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
select_length	[ 0	locks=0 ]	(	[ select_length	0 ] 	)
skip_length	[ 0	locks=0 ]	(	[ skip_length	0 ] 	)
offset	[ 0	locks=0 ]	(	[ offset	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/periodic.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/periodic1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/periodic1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 5.497 -1.151
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author mai@MAI.schellgames.local
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/periodic1.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "element"
            label   "Element"
            type    ordinal
            default { "0" }
            menu {
                "0" "Primitives"
                "1" "Points"
            }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "select_length"
            label   "Select Length Min/Max"
            type    intvector2
            size    2
            default { "0" "0" }
            range   { 0 10 }
        }
        parm {
            name    "skip_length"
            label   "Skip Length Min/Max"
            type    intvector2
            size    2
            default { "0" "0" }
            range   { 0 10 }
        }
        parm {
            name    "offset"
            label   "Offset"
            type    integer
            default { "0" }
            range   { 0 10 }
        }
        parm {
            name    "seed"
            label   "Seed"
            type    float
            default { "0" }
            range   { 0 1 }
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
    }

    parm {
        name    "vex_precision"
        baseparm
        label   "VEX Precision"
        export  none
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/periodic1.chn"
Content-Type: text/plain

{
    channel element {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../class\") }
    }
    channel seed {
      lefttype = extend
      righttype = extend
      flags = 0
      start = -41.708333333333336
      segment { length = 0 expr = ch(\"../randseed\") }
    }
    channel offset {
      lefttype = extend
      righttype = extend
      flags = 0
      start = -41.708333333333336
      segment { length = 0 expr = ch(\"../offset\") }
    }
    channel select_lengthx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      start = -41.708333333333336
      segment { length = 0 value = 1 1 expr = ch(\"../selectlenmin\") }
    }
    channel select_lengthy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      start = -41.708333333333336
      segment { length = 0 value = 1 1 expr = ch(\"../selectlenmax\") }
    }
    channel skip_lengthx {
      lefttype = extend
      righttype = extend
      default = 5
      flags = 0
      start = -41.708333333333336
      segment { length = 0 value = 5 5 expr = ch(\"../skiplenmin\") }
    }
    channel skip_lengthy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      start = -41.708333333333336
      segment { length = 0 value = 1 1 expr = ch(\"../skiplenmax\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/periodic1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"detail"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"int select_length_min = chi(\"select_lengthx\");
int select_length_max = chi(\"select_lengthy\");
int skip_length_min = chi(\"skip_lengthx\");
int skip_length_max = chi(\"skip_lengthy\");

// Switches min and max values if users
// input them in the wrong order

if (select_length_min > select_length_max) {

    select_length_min = select_length_min + select_length_max;
    select_length_max = select_length_min - select_length_max;
    select_length_min = select_length_min - select_length_max;
}

if (skip_length_min > skip_length_max) {

    skip_length_min = skip_length_min + skip_length_max;
    skip_length_max = skip_length_min - skip_length_max;
    skip_length_min = skip_length_min - skip_length_max;
}


float global_seed = chf(\"seed\") + 1.0;
int offset = chi(\"offset\");

int num_elem = 0;

if (chi(\"element\") == 0) {
    num_elem = @numprim;

} else if (chi(\"element\") == 1) {
    num_elem = @numpt;
}


// The random periodic sequence is immutable unless 'global_seed' changes.
// The length of each period is randomized, affected by
// the start index (the index closest to 0) of that period.
// There is no analytical solution for the immutable sequence.
// It must be simulated, starting from the origin points: 0 and -1.
// The positive section of the sequence starts at 0 and computes forward.
// The negative section of the sequence starts at -1 and computes backward.
// In both sections, the selected elements are always to the left of the skipped.

// 'offset' does not affect the pattern of the immutable sequence.
// Instead, it moves element 0 to create a new mapping of
// the elements to the immutable sequence.

// Start index of a new period on the immutable sequence.
// Affects the random function that determines the length of this period.
int last_reset = 0;

int select_length = 0;
int period_length = 0;


// Part 1: Computes the Mapping of Elements to the Immutable Sequence

// No offset. All elements computes forward.
int mapping = 0;

if (offset > 0) {
    // The immutable 0 is outside the inclusive left bound of the elements,
    // so all elements computes forward:

    mapping = 1;

    for (last_reset = 0; last_reset < offset;) {

        select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                       select_length_min,
                                       select_length_max)));

        period_length = select_length +
                        int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                       skip_length_min,
                                       skip_length_max)));

        last_reset += period_length;
    }

    last_reset -= period_length;

} else if (offset < 0 && offset >= -num_elem) {
    // The immutable -1 is inside the inclusive bounds of the elements,
    // so part of the elements computes forward, part backward:

    mapping = -1;

    last_reset = -1;

    select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                   select_length_min,
                                   select_length_max)));

    period_length = select_length +
                    int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                   skip_length_min,
                                   skip_length_max)));


} else if (offset < -num_elem) {
    // The immutable -1 is outside the inclusive right bound of the elements,
    // so all elements computes backward:

    mapping = -2;

    for (last_reset = -1; last_reset >= offset + num_elem;) {

        select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                       select_length_min,
                                       select_length_max)));

        period_length = select_length +
                        int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                       skip_length_min,
                                       skip_length_max)));

        last_reset -= period_length;
    }

    last_reset += period_length;
}


// Part 2: Sets Each Element's Group Identity Based on Mapping

// Element type should be evaluated only once, not once per element.
if (chi(\"element\") == 0) {
    // Primitive

    if (mapping == 0) {

        for (int i = 0; i < num_elem; i ++) {

            if (i == last_reset + period_length) {

                last_reset = i;

                select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                               select_length_min,
                                               select_length_max)));

                period_length = select_length +
                                int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                               skip_length_min,
                                               skip_length_max)));
            }

            if ((i - last_reset) % period_length <
                select_length) {

                setprimgroup(0, \"__selected\", i, 1, \"set\");
            }
        }

    } else if (mapping == 1) {
        // Immutable: <<<<<<<<<< -1 0 >>>>>>>>>>
        // Offset:                  | ~~~~~
        // Elements:                      F----L

        for (int i = 0; i < num_elem; i ++) {

            int i_immutable = i + offset;

            if (i_immutable == last_reset + period_length) {

                last_reset = i_immutable;

                select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                               select_length_min,
                                               select_length_max)));

                period_length = select_length +
                                int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                               skip_length_min,
                                               skip_length_max)));
            }

            if ((i_immutable - last_reset) % period_length <
                select_length) {

                setprimgroup(0, \"__selected\", i, 1, \"set\");
            }
        }

    } else if (mapping == -1) {
        // Immutable: <<<<<<<<<< -1 0 >>>>>>>>>>
        // Offset:           ~~~~~~ |
        // Elements:         F----------L
        // Elements:              F-----L
        // Elements:         F----L

        // Negative section of the immutable sequence computes backward
        for (int i = -offset - 1; i >= 0; i --) {

            int i_immutable = i + offset;

            if (i_immutable == last_reset - period_length) {

                last_reset = i_immutable;

                select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                               select_length_min,
                                               select_length_max)));

                period_length = select_length +
                                int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                               skip_length_min,
                                               skip_length_max)));
            }

            if ((i_immutable - (last_reset - period_length + 1)) % period_length <
                select_length) {

                setprimgroup(0, \"__selected\", i, 1, \"set\");
            }
        }

        last_reset = 0;
        period_length = 0;

        // Positive section of the immutable sequence computes forward
        for (int i = -offset; i < num_elem; i ++) {

            int i_immutable = i + offset;

            if (i_immutable == last_reset + period_length) {

                last_reset = i_immutable;

                select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                               select_length_min,
                                               select_length_max)));

                period_length = select_length +
                                int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                               skip_length_min,
                                               skip_length_max)));
            }

            if ((i_immutable - last_reset) % period_length <
                select_length) {

                setprimgroup(0, \"__selected\", i, 1, \"set\");
            }
        }


    } else if (mapping == -2) {
        // Immutable: <<<<<<<<<< -1 0 >>>>>>>>>>
        // Offset:    ~~~~~~~~~~~~~ |
        // Elements:  F----L

        for (int i = num_elem - 1; i >= 0; i --) {

            int i_immutable = i + offset;

            if (i_immutable == last_reset - period_length) {

                last_reset = i_immutable;

                select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                               select_length_min,
                                               select_length_max)));

                period_length = select_length +
                                int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                               skip_length_min,
                                               skip_length_max)));
            }

            if ((i_immutable - (last_reset - period_length + 1)) % period_length <
                select_length) {

                setprimgroup(0, \"__selected\", i, 1, \"set\");
            }
        }
    }


} else if (chi(\"element\") == 1) {
    // Point

    if (mapping == 0) {

        for (int i = 0; i < num_elem; i ++) {

            if (i == last_reset + period_length) {

                last_reset = i;

                select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                               select_length_min,
                                               select_length_max)));

                period_length = select_length +
                                int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                               skip_length_min,
                                               skip_length_max)));
            }

            if ((i - last_reset) % period_length <
                select_length) {

                setpointgroup(0, \"__selected\", i, 1, \"set\");
            }
        }

    } else if (mapping == 1) {
        // Immutable: <<<<<<<<<< -1 0 >>>>>>>>>>
        // Offset:                  | ~~~~~
        // Elements:                      F----L

        for (int i = 0; i < num_elem; i ++) {

            int i_immutable = i + offset;

            if (i_immutable == last_reset + period_length) {

                last_reset = i_immutable;

                select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                               select_length_min,
                                               select_length_max)));

                period_length = select_length +
                                int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                               skip_length_min,
                                               skip_length_max)));
            }

            if ((i_immutable - last_reset) % period_length <
                select_length) {

                setpointgroup(0, \"__selected\", i, 1, \"set\");
            }
        }

    } else if (mapping == -1) {
        // Immutable: <<<<<<<<<< -1 0 >>>>>>>>>>
        // Offset:           ~~~~~~ |
        // Elements:         F----------L
        // Elements:              F-----L
        // Elements:         F----L

        // Negative section of the immutable sequence computes backward
        for (int i = -offset - 1; i >= 0; i --) {

            int i_immutable = i + offset;

            if (i_immutable == last_reset - period_length) {

                last_reset = i_immutable;

                select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                               select_length_min,
                                               select_length_max)));

                period_length = select_length +
                                int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                               skip_length_min,
                                               skip_length_max)));
            }

            if ((i_immutable - (last_reset - period_length + 1)) % period_length <
                select_length) {

                setpointgroup(0, \"__selected\", i, 1, \"set\");
            }
        }

        last_reset = 0;
        period_length = 0;

        // Positive section of the immutable sequence computes forward
        for (int i = -offset; i < num_elem; i ++) {

            int i_immutable = i + offset;

            if (i_immutable == last_reset + period_length) {

                last_reset = i_immutable;

                select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                               select_length_min,
                                               select_length_max)));

                period_length = select_length +
                                int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                               skip_length_min,
                                               skip_length_max)));
            }

            if ((i_immutable - last_reset) % period_length <
                select_length) {

                setpointgroup(0, \"__selected\", i, 1, \"set\");
            }
        }


    } else if (mapping == -2) {
        // Immutable: <<<<<<<<<< -1 0 >>>>>>>>>>
        // Offset:    ~~~~~~~~~~~~~ |
        // Elements:  F----L

        for (int i = num_elem - 1; i >= 0; i --) {

            int i_immutable = i + offset;

            if (i_immutable == last_reset - period_length) {

                last_reset = i_immutable;

                select_length = int(rint(fit01(rand(last_reset + 2.9 * global_seed),
                                               select_length_min,
                                               select_length_max)));

                period_length = select_length +
                                int(rint(fit01(rand(last_reset + 7.2 * global_seed),
                                               skip_length_min,
                                               skip_length_max)));
            }

            if ((i_immutable - (last_reset - period_length + 1)) % period_length <
                select_length) {

                setpointgroup(0, \"__selected\", i, 1, \"set\");
            }
        }
    }
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
element	[ 0	locks=0 ]	(	[ element	0 ] 	)
select_length	[ 0	locks=0 ]	(	[ select_lengthx	0 ] 	[ select_lengthy	0 ] 	)
skip_length	[ 0	locks=0 ]	(	[ skip_lengthx	0 ] 	[ skip_lengthy	0 ] 	)
offset	[ 0	locks=0 ]	(	[ offset	0 ] 	)
seed	[ 0	locks=0 ]	(	[ seed	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/periodic1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/warning.init"
Content-Type: text/plain

type = error
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/warning.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -0.5 -3.15
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_method 3 1 "input1"
}
inputs
{
0 	switch_method 0 1
}
stat
{
  create -1
  modify -1
  author maia@truro
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/warning.chn"
Content-Type: text/plain

{
    channel enable1 {
      lefttype = extend
      righttype = extend
      flags = 0
      start = -41.708333333333336
      segment { length = 0 expr = ch(\"../selectlenmin\")==ch(\"../selectlenmax\")&&ch(\"../skiplenmin\")==ch(\"../skiplenmax\")&&ch(\"../selectionmode\")==4 }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/warning.parm"
Content-Type: text/plain

{
version 0.8
numerror	[ 0	locks=0 ]	(	1	)
errormsg1	[ 0	locks=0 ]	(	"If Select Min/Max and Skip Min/Max are both intended to be equal, set Selection Mode to Periodic - Constant Intervals for faster computation."	)
severity1	[ 0	locks=0 ]	(	"warn"	)
enable1	[ 0	locks=0 ]	(	[ enable1	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/warning.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

26
exact1
random_ptnum
group_selected
output0
probability
random_primnum
store_elemnum_switch
switch_class
group_cleanup
color_selected
switch_color
attrib_cleanup
exact
switch_method
switch_blast2
total_elem
total_elem1
blast_selected
switch_create_group
switch_blast1
blast_non_selected
store_elemnum_orig1
SELECTION
periodic
periodic1
warning

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
